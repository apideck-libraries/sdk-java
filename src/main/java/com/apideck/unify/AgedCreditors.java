/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.AccountingAgedCreditorsOneRequest;
import com.apideck.unify.models.operations.AccountingAgedCreditorsOneRequestBuilder;
import com.apideck.unify.models.operations.AccountingAgedCreditorsOneResponse;
import com.apideck.unify.operations.AccountingAgedCreditorsOne;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class AgedCreditors {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncAgedCreditors asyncSDK;

    AgedCreditors(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncAgedCreditors(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncAgedCreditors async() {
        return asyncSDK;
    }

    /**
     * Get Aged Creditors
     * 
     * <p>Get Aged Creditors
     * 
     * @return The call builder
     */
    public AccountingAgedCreditorsOneRequestBuilder get() {
        return new AccountingAgedCreditorsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Aged Creditors
     * 
     * <p>Get Aged Creditors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingAgedCreditorsOneResponse get(AccountingAgedCreditorsOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get Aged Creditors
     * 
     * <p>Get Aged Creditors
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingAgedCreditorsOneResponse get(AccountingAgedCreditorsOneRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AccountingAgedCreditorsOneRequest, AccountingAgedCreditorsOneResponse> operation
              = new AccountingAgedCreditorsOne.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
