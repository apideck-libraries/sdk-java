/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.AtsApplicantsAddRequest;
import com.apideck.unify.models.operations.AtsApplicantsAddRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicantsAddResponse;
import com.apideck.unify.models.operations.AtsApplicantsAllRequest;
import com.apideck.unify.models.operations.AtsApplicantsAllRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicantsAllResponse;
import com.apideck.unify.models.operations.AtsApplicantsDeleteRequest;
import com.apideck.unify.models.operations.AtsApplicantsDeleteRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicantsDeleteResponse;
import com.apideck.unify.models.operations.AtsApplicantsOneRequest;
import com.apideck.unify.models.operations.AtsApplicantsOneRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicantsOneResponse;
import com.apideck.unify.models.operations.AtsApplicantsUpdateRequest;
import com.apideck.unify.models.operations.AtsApplicantsUpdateRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicantsUpdateResponse;
import com.apideck.unify.operations.AtsApplicantsAddOperation;
import com.apideck.unify.operations.AtsApplicantsAllOperation;
import com.apideck.unify.operations.AtsApplicantsDeleteOperation;
import com.apideck.unify.operations.AtsApplicantsOneOperation;
import com.apideck.unify.operations.AtsApplicantsUpdateOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Applicants {
    private final SDKConfiguration sdkConfiguration;

    Applicants(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List Applicants
     * 
     * <p>List Applicants
     * 
     * @return The call builder
     */
    public AtsApplicantsAllRequestBuilder list() {
        return new AtsApplicantsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Applicants
     * 
     * <p>List Applicants
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsAllResponse list(@Nonnull AtsApplicantsAllRequest request) throws Exception {
        return list(request, null);
    }

    /**
     * List Applicants
     * 
     * <p>List Applicants
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsAllResponse list(
            @Nonnull AtsApplicantsAllRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AtsApplicantsAllRequest, AtsApplicantsAllResponse> operation
              = new AtsApplicantsAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create Applicant
     * 
     * <p>Create Applicant
     * 
     * @return The call builder
     */
    public AtsApplicantsAddRequestBuilder create() {
        return new AtsApplicantsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Applicant
     * 
     * <p>Create Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsAddResponse create(@Nonnull AtsApplicantsAddRequest request) throws Exception {
        return create(request, null);
    }

    /**
     * Create Applicant
     * 
     * <p>Create Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsAddResponse create(
            @Nonnull AtsApplicantsAddRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AtsApplicantsAddRequest, AtsApplicantsAddResponse> operation
              = new AtsApplicantsAddOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Applicant
     * 
     * <p>Get Applicant
     * 
     * @return The call builder
     */
    public AtsApplicantsOneRequestBuilder get() {
        return new AtsApplicantsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Applicant
     * 
     * <p>Get Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsOneResponse get(@Nonnull AtsApplicantsOneRequest request) throws Exception {
        return get(request, null);
    }

    /**
     * Get Applicant
     * 
     * <p>Get Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsOneResponse get(
            @Nonnull AtsApplicantsOneRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AtsApplicantsOneRequest, AtsApplicantsOneResponse> operation
              = new AtsApplicantsOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update Applicant
     * 
     * <p>Update Applicant
     * 
     * @return The call builder
     */
    public AtsApplicantsUpdateRequestBuilder update() {
        return new AtsApplicantsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Applicant
     * 
     * <p>Update Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsUpdateResponse update(@Nonnull AtsApplicantsUpdateRequest request) throws Exception {
        return update(request, null);
    }

    /**
     * Update Applicant
     * 
     * <p>Update Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsUpdateResponse update(
            @Nonnull AtsApplicantsUpdateRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AtsApplicantsUpdateRequest, AtsApplicantsUpdateResponse> operation
              = new AtsApplicantsUpdateOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete Applicant
     * 
     * <p>Delete Applicant
     * 
     * @return The call builder
     */
    public AtsApplicantsDeleteRequestBuilder delete() {
        return new AtsApplicantsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Applicant
     * 
     * <p>Delete Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsDeleteResponse delete(@Nonnull AtsApplicantsDeleteRequest request) throws Exception {
        return delete(request, null);
    }

    /**
     * Delete Applicant
     * 
     * <p>Delete Applicant
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicantsDeleteResponse delete(
            @Nonnull AtsApplicantsDeleteRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AtsApplicantsDeleteRequest, AtsApplicantsDeleteResponse> operation
              = new AtsApplicantsDeleteOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
