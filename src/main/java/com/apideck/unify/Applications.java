/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.AtsApplicationsAddRequest;
import com.apideck.unify.models.operations.AtsApplicationsAddRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicationsAddResponse;
import com.apideck.unify.models.operations.AtsApplicationsAllRequest;
import com.apideck.unify.models.operations.AtsApplicationsAllRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicationsAllResponse;
import com.apideck.unify.models.operations.AtsApplicationsDeleteRequest;
import com.apideck.unify.models.operations.AtsApplicationsDeleteRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicationsDeleteResponse;
import com.apideck.unify.models.operations.AtsApplicationsOneRequest;
import com.apideck.unify.models.operations.AtsApplicationsOneRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicationsOneResponse;
import com.apideck.unify.models.operations.AtsApplicationsUpdateRequest;
import com.apideck.unify.models.operations.AtsApplicationsUpdateRequestBuilder;
import com.apideck.unify.models.operations.AtsApplicationsUpdateResponse;
import com.apideck.unify.operations.AtsApplicationsAdd;
import com.apideck.unify.operations.AtsApplicationsAll;
import com.apideck.unify.operations.AtsApplicationsDelete;
import com.apideck.unify.operations.AtsApplicationsOne;
import com.apideck.unify.operations.AtsApplicationsUpdate;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class Applications {
    private final SDKConfiguration sdkConfiguration;

    Applications(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List Applications
     * 
     * <p>List Applications
     * 
     * @return The call builder
     */
    public AtsApplicationsAllRequestBuilder list() {
        return new AtsApplicationsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Applications
     * 
     * <p>List Applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsAllResponse list(AtsApplicationsAllRequest request) throws Exception {
        return list(request, Optional.empty());
    }

    /**
     * List Applications
     * 
     * <p>List Applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsAllResponse list(AtsApplicationsAllRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AtsApplicationsAllRequest, AtsApplicationsAllResponse> operation
              = new AtsApplicationsAll.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create Application
     * 
     * <p>Create Application
     * 
     * @return The call builder
     */
    public AtsApplicationsAddRequestBuilder create() {
        return new AtsApplicationsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Application
     * 
     * <p>Create Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsAddResponse create(AtsApplicationsAddRequest request) throws Exception {
        return create(request, Optional.empty());
    }

    /**
     * Create Application
     * 
     * <p>Create Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsAddResponse create(AtsApplicationsAddRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AtsApplicationsAddRequest, AtsApplicationsAddResponse> operation
              = new AtsApplicationsAdd.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Application
     * 
     * <p>Get Application
     * 
     * @return The call builder
     */
    public AtsApplicationsOneRequestBuilder get() {
        return new AtsApplicationsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application
     * 
     * <p>Get Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsOneResponse get(AtsApplicationsOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get Application
     * 
     * <p>Get Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsOneResponse get(AtsApplicationsOneRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AtsApplicationsOneRequest, AtsApplicationsOneResponse> operation
              = new AtsApplicationsOne.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update Application
     * 
     * <p>Update Application
     * 
     * @return The call builder
     */
    public AtsApplicationsUpdateRequestBuilder update() {
        return new AtsApplicationsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Application
     * 
     * <p>Update Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsUpdateResponse update(AtsApplicationsUpdateRequest request) throws Exception {
        return update(request, Optional.empty());
    }

    /**
     * Update Application
     * 
     * <p>Update Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsUpdateResponse update(AtsApplicationsUpdateRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AtsApplicationsUpdateRequest, AtsApplicationsUpdateResponse> operation
              = new AtsApplicationsUpdate.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete Application
     * 
     * <p>Delete Application
     * 
     * @return The call builder
     */
    public AtsApplicationsDeleteRequestBuilder delete() {
        return new AtsApplicationsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Application
     * 
     * <p>Delete Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsDeleteResponse delete(AtsApplicationsDeleteRequest request) throws Exception {
        return delete(request, Optional.empty());
    }

    /**
     * Delete Application
     * 
     * <p>Delete Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AtsApplicationsDeleteResponse delete(AtsApplicationsDeleteRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AtsApplicationsDeleteRequest, AtsApplicationsDeleteResponse> operation
              = new AtsApplicationsDelete.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
