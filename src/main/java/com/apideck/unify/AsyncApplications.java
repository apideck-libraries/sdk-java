/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.AtsApplicationsAddRequest;
import com.apideck.unify.models.operations.AtsApplicationsAllRequest;
import com.apideck.unify.models.operations.AtsApplicationsDeleteRequest;
import com.apideck.unify.models.operations.AtsApplicationsOneRequest;
import com.apideck.unify.models.operations.AtsApplicationsUpdateRequest;
import com.apideck.unify.models.operations.async.AtsApplicationsAddRequestBuilder;
import com.apideck.unify.models.operations.async.AtsApplicationsAddResponse;
import com.apideck.unify.models.operations.async.AtsApplicationsAllRequestBuilder;
import com.apideck.unify.models.operations.async.AtsApplicationsAllResponse;
import com.apideck.unify.models.operations.async.AtsApplicationsDeleteRequestBuilder;
import com.apideck.unify.models.operations.async.AtsApplicationsDeleteResponse;
import com.apideck.unify.models.operations.async.AtsApplicationsOneRequestBuilder;
import com.apideck.unify.models.operations.async.AtsApplicationsOneResponse;
import com.apideck.unify.models.operations.async.AtsApplicationsUpdateRequestBuilder;
import com.apideck.unify.models.operations.async.AtsApplicationsUpdateResponse;
import com.apideck.unify.operations.AtsApplicationsAdd;
import com.apideck.unify.operations.AtsApplicationsAll;
import com.apideck.unify.operations.AtsApplicationsDelete;
import com.apideck.unify.operations.AtsApplicationsOne;
import com.apideck.unify.operations.AtsApplicationsUpdate;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncApplications {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Applications syncSDK;

    AsyncApplications(Applications syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Applications sync() {
        return syncSDK;
    }


    /**
     * List Applications
     * 
     * <p>List Applications
     * 
     * @return The async call builder
     */
    public AtsApplicationsAllRequestBuilder list() {
        return new AtsApplicationsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Applications
     * 
     * <p>List Applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsApplicationsAllResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsAllResponse> list(AtsApplicationsAllRequest request) {
        return list(request, Optional.empty());
    }

    /**
     * List Applications
     * 
     * <p>List Applications
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsApplicationsAllResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsAllResponse> list(AtsApplicationsAllRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsApplicationsAllRequest, AtsApplicationsAllResponse> operation
              = new AtsApplicationsAll.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create Application
     * 
     * <p>Create Application
     * 
     * @return The async call builder
     */
    public AtsApplicationsAddRequestBuilder create() {
        return new AtsApplicationsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Application
     * 
     * <p>Create Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsApplicationsAddResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsAddResponse> create(AtsApplicationsAddRequest request) {
        return create(request, Optional.empty());
    }

    /**
     * Create Application
     * 
     * <p>Create Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsApplicationsAddResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsAddResponse> create(AtsApplicationsAddRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsApplicationsAddRequest, AtsApplicationsAddResponse> operation
              = new AtsApplicationsAdd.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get Application
     * 
     * <p>Get Application
     * 
     * @return The async call builder
     */
    public AtsApplicationsOneRequestBuilder get() {
        return new AtsApplicationsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Application
     * 
     * <p>Get Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsApplicationsOneResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsOneResponse> get(AtsApplicationsOneRequest request) {
        return get(request, Optional.empty());
    }

    /**
     * Get Application
     * 
     * <p>Get Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsApplicationsOneResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsOneResponse> get(AtsApplicationsOneRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsApplicationsOneRequest, AtsApplicationsOneResponse> operation
              = new AtsApplicationsOne.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update Application
     * 
     * <p>Update Application
     * 
     * @return The async call builder
     */
    public AtsApplicationsUpdateRequestBuilder update() {
        return new AtsApplicationsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Application
     * 
     * <p>Update Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsApplicationsUpdateResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsUpdateResponse> update(AtsApplicationsUpdateRequest request) {
        return update(request, Optional.empty());
    }

    /**
     * Update Application
     * 
     * <p>Update Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsApplicationsUpdateResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsUpdateResponse> update(AtsApplicationsUpdateRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsApplicationsUpdateRequest, AtsApplicationsUpdateResponse> operation
              = new AtsApplicationsUpdate.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete Application
     * 
     * <p>Delete Application
     * 
     * @return The async call builder
     */
    public AtsApplicationsDeleteRequestBuilder delete() {
        return new AtsApplicationsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Application
     * 
     * <p>Delete Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsApplicationsDeleteResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsDeleteResponse> delete(AtsApplicationsDeleteRequest request) {
        return delete(request, Optional.empty());
    }

    /**
     * Delete Application
     * 
     * <p>Delete Application
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsApplicationsDeleteResponse&gt; - The async response
     */
    public CompletableFuture<AtsApplicationsDeleteResponse> delete(AtsApplicationsDeleteRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsApplicationsDeleteRequest, AtsApplicationsDeleteResponse> operation
              = new AtsApplicationsDelete.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
