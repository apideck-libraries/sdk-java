/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.IssueTrackingCollectionTagsAllRequest;
import com.apideck.unify.models.operations.async.IssueTrackingCollectionTagsAllRequestBuilder;
import com.apideck.unify.models.operations.async.IssueTrackingCollectionTagsAllResponse;
import com.apideck.unify.operations.IssueTrackingCollectionTagsAll;
import com.apideck.unify.utils.Options;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncCollectionTags {
    private final SDKConfiguration sdkConfiguration;
    private final CollectionTags syncSDK;

    AsyncCollectionTags(CollectionTags syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public CollectionTags sync() {
        return syncSDK;
    }


    /**
     * List Tags
     * 
     * <p>List Tags
     * 
     * @return The async call builder
     */
    public IssueTrackingCollectionTagsAllRequestBuilder list() {
        return new IssueTrackingCollectionTagsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Tags
     * 
     * <p>List Tags
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;IssueTrackingCollectionTagsAllResponse&gt; - The async response
     */
    public CompletableFuture<IssueTrackingCollectionTagsAllResponse> list(IssueTrackingCollectionTagsAllRequest request) {
        return list(request, Optional.empty());
    }

    /**
     * List Tags
     * 
     * <p>List Tags
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;IssueTrackingCollectionTagsAllResponse&gt; - The async response
     */
    public CompletableFuture<IssueTrackingCollectionTagsAllResponse> list(IssueTrackingCollectionTagsAllRequest request, Optional<Options> options) {
        AsyncRequestOperation<IssueTrackingCollectionTagsAllRequest, IssueTrackingCollectionTagsAllResponse> operation
              = new IssueTrackingCollectionTagsAll.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
