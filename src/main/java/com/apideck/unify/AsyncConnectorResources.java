/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.components.UnifiedApiId;
import com.apideck.unify.models.operations.ConnectorConnectorResourcesOneRequest;
import com.apideck.unify.models.operations.async.ConnectorConnectorResourcesOneRequestBuilder;
import com.apideck.unify.models.operations.async.ConnectorConnectorResourcesOneResponse;
import com.apideck.unify.operations.ConnectorConnectorResourcesOne;
import com.apideck.unify.utils.Options;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncConnectorResources {
    private final SDKConfiguration sdkConfiguration;
    private final ConnectorResources syncSDK;

    AsyncConnectorResources(ConnectorResources syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public ConnectorResources sync() {
        return syncSDK;
    }


    /**
     * Get Connector Resource
     * 
     * <p>Get Connector Resource
     * 
     * @return The async call builder
     */
    public ConnectorConnectorResourcesOneRequestBuilder get() {
        return new ConnectorConnectorResourcesOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Connector Resource
     * 
     * <p>Get Connector Resource
     * 
     * @param id ID of the record you are acting upon.
     * @param resourceId ID of the resource you are acting upon.
     * @return CompletableFuture&lt;ConnectorConnectorResourcesOneResponse&gt; - The async response
     */
    public CompletableFuture<ConnectorConnectorResourcesOneResponse> get(String id, String resourceId) {
        return get(
                Optional.empty(), id, resourceId,
                Optional.empty(), Optional.empty());
    }

    /**
     * Get Connector Resource
     * 
     * <p>Get Connector Resource
     * 
     * @param appId The ID of your Unify application
     * @param id ID of the record you are acting upon.
     * @param resourceId ID of the resource you are acting upon.
     * @param unifiedApi Name of Apideck Unified API
     * @param options additional options
     * @return CompletableFuture&lt;ConnectorConnectorResourcesOneResponse&gt; - The async response
     */
    public CompletableFuture<ConnectorConnectorResourcesOneResponse> get(
            Optional<String> appId, String id,
            String resourceId, Optional<? extends UnifiedApiId> unifiedApi,
            Optional<Options> options) {
        ConnectorConnectorResourcesOneRequest request =
            ConnectorConnectorResourcesOneRequest
                .builder()
                .appId(appId)
                .id(id)
                .resourceId(resourceId)
                .unifiedApi(unifiedApi)
                .build();
        AsyncRequestOperation<ConnectorConnectorResourcesOneRequest, ConnectorConnectorResourcesOneResponse> operation
              = new ConnectorConnectorResourcesOne.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
