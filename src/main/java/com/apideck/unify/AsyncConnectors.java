/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.components.ConnectorsFilter;
import com.apideck.unify.models.operations.ConnectorConnectorsAllRequest;
import com.apideck.unify.models.operations.ConnectorConnectorsOneRequest;
import com.apideck.unify.models.operations.async.ConnectorConnectorsAllRequestBuilder;
import com.apideck.unify.models.operations.async.ConnectorConnectorsAllResponse;
import com.apideck.unify.models.operations.async.ConnectorConnectorsOneRequestBuilder;
import com.apideck.unify.models.operations.async.ConnectorConnectorsOneResponse;
import com.apideck.unify.operations.ConnectorConnectorsAll;
import com.apideck.unify.operations.ConnectorConnectorsOne;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.Long;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import org.openapitools.jackson.nullable.JsonNullable;


public class AsyncConnectors {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Connectors syncSDK;

    AsyncConnectors(Connectors syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Connectors sync() {
        return syncSDK;
    }


    /**
     * List Connectors
     * 
     * <p>List Connectors
     * 
     * @return The async call builder
     */
    public ConnectorConnectorsAllRequestBuilder list() {
        return new ConnectorConnectorsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Connectors
     * 
     * <p>List Connectors
     * 
     * @return {@code CompletableFuture<ConnectorConnectorsAllResponse>} - The async response
     */
    public CompletableFuture<ConnectorConnectorsAllResponse> listDirect() {
        return list(
                Optional.empty(), JsonNullable.undefined(), Optional.empty(),
                Optional.empty(), Optional.empty());
    }

    /**
     * List Connectors
     * 
     * <p>List Connectors
     * 
     * @param appId The ID of your Unify application
     * @param cursor Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     * @param limit Number of results to return. Minimum 1, Maximum 200, Default 20
     * @param filter 
     * @param options additional options
     * @return {@code CompletableFuture<ConnectorConnectorsAllResponse>} - The async response
     */
    public CompletableFuture<ConnectorConnectorsAllResponse> list(
            Optional<String> appId, JsonNullable<String> cursor,
            Optional<Long> limit, Optional<? extends ConnectorsFilter> filter,
            Optional<Options> options) {
        ConnectorConnectorsAllRequest request =
            ConnectorConnectorsAllRequest
                .builder()
                .appId(appId)
                .cursor(cursor)
                .limit(limit)
                .filter(filter)
                .build();
        AsyncRequestOperation<ConnectorConnectorsAllRequest, ConnectorConnectorsAllResponse> operation
              = new ConnectorConnectorsAll.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get Connector
     * 
     * <p>Get Connector
     * 
     * @return The async call builder
     */
    public ConnectorConnectorsOneRequestBuilder get() {
        return new ConnectorConnectorsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Connector
     * 
     * <p>Get Connector
     * 
     * @param id ID of the record you are acting upon.
     * @return {@code CompletableFuture<ConnectorConnectorsOneResponse>} - The async response
     */
    public CompletableFuture<ConnectorConnectorsOneResponse> get(String id) {
        return get(Optional.empty(), id, Optional.empty());
    }

    /**
     * Get Connector
     * 
     * <p>Get Connector
     * 
     * @param appId The ID of your Unify application
     * @param id ID of the record you are acting upon.
     * @param options additional options
     * @return {@code CompletableFuture<ConnectorConnectorsOneResponse>} - The async response
     */
    public CompletableFuture<ConnectorConnectorsOneResponse> get(
            Optional<String> appId, String id,
            Optional<Options> options) {
        ConnectorConnectorsOneRequest request =
            ConnectorConnectorsOneRequest
                .builder()
                .appId(appId)
                .id(id)
                .build();
        AsyncRequestOperation<ConnectorConnectorsOneRequest, ConnectorConnectorsOneResponse> operation
              = new ConnectorConnectorsOne.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
