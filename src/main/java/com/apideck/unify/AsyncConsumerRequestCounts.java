/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllRequest;
import com.apideck.unify.models.operations.async.VaultConsumerRequestCountsAllRequestBuilder;
import com.apideck.unify.models.operations.async.VaultConsumerRequestCountsAllResponse;
import com.apideck.unify.operations.VaultConsumerRequestCountsAll;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncConsumerRequestCounts {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final ConsumerRequestCounts syncSDK;

    AsyncConsumerRequestCounts(ConsumerRequestCounts syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public ConsumerRequestCounts sync() {
        return syncSDK;
    }


    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @return The async call builder
     */
    public VaultConsumerRequestCountsAllRequestBuilder list() {
        return new VaultConsumerRequestCountsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @param consumerId ID of the consumer to return
     * @param startDatetime Scopes results to requests that happened after datetime
     * @param endDatetime Scopes results to requests that happened before datetime
     * @return CompletableFuture&lt;VaultConsumerRequestCountsAllResponse&gt; - The async response
     */
    public CompletableFuture<VaultConsumerRequestCountsAllResponse> list(
            String consumerId, String startDatetime,
            String endDatetime) {
        return list(
                Optional.empty(), consumerId, startDatetime,
                endDatetime, Optional.empty());
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @param appId The ID of your Unify application
     * @param consumerId ID of the consumer to return
     * @param startDatetime Scopes results to requests that happened after datetime
     * @param endDatetime Scopes results to requests that happened before datetime
     * @param options additional options
     * @return CompletableFuture&lt;VaultConsumerRequestCountsAllResponse&gt; - The async response
     */
    public CompletableFuture<VaultConsumerRequestCountsAllResponse> list(
            Optional<String> appId, String consumerId,
            String startDatetime, String endDatetime,
            Optional<Options> options) {
        VaultConsumerRequestCountsAllRequest request =
            VaultConsumerRequestCountsAllRequest
                .builder()
                .appId(appId)
                .consumerId(consumerId)
                .startDatetime(startDatetime)
                .endDatetime(endDatetime)
                .build();
        AsyncRequestOperation<VaultConsumerRequestCountsAllRequest, VaultConsumerRequestCountsAllResponse> operation
              = new VaultConsumerRequestCountsAll.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
