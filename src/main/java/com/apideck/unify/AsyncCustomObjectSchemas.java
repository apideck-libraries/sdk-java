/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateRequest;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasAddRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasAddResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasAllRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasAllResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasDeleteRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasDeleteResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasOneRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasOneResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasUpdateRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectSchemasUpdateResponse;
import com.apideck.unify.operations.CrmCustomObjectSchemasAdd;
import com.apideck.unify.operations.CrmCustomObjectSchemasAll;
import com.apideck.unify.operations.CrmCustomObjectSchemasDelete;
import com.apideck.unify.operations.CrmCustomObjectSchemasOne;
import com.apideck.unify.operations.CrmCustomObjectSchemasUpdate;
import com.apideck.unify.utils.Options;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncCustomObjectSchemas {
    private final SDKConfiguration sdkConfiguration;
    private final CustomObjectSchemas syncSDK;

    AsyncCustomObjectSchemas(CustomObjectSchemas syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public CustomObjectSchemas sync() {
        return syncSDK;
    }


    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @return The async call builder
     */
    public CrmCustomObjectSchemasAllRequestBuilder list() {
        return new CrmCustomObjectSchemasAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CrmCustomObjectSchemasAllResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasAllResponse> list(CrmCustomObjectSchemasAllRequest request) {
        return list(request, Optional.empty());
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;CrmCustomObjectSchemasAllResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasAllResponse> list(CrmCustomObjectSchemasAllRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectSchemasAllRequest, CrmCustomObjectSchemasAllResponse> operation
              = new CrmCustomObjectSchemasAll.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @return The async call builder
     */
    public CrmCustomObjectSchemasAddRequestBuilder create() {
        return new CrmCustomObjectSchemasAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CrmCustomObjectSchemasAddResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasAddResponse> create(CrmCustomObjectSchemasAddRequest request) {
        return create(request, Optional.empty());
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;CrmCustomObjectSchemasAddResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasAddResponse> create(CrmCustomObjectSchemasAddRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectSchemasAddRequest, CrmCustomObjectSchemasAddResponse> operation
              = new CrmCustomObjectSchemasAdd.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @return The async call builder
     */
    public CrmCustomObjectSchemasOneRequestBuilder get() {
        return new CrmCustomObjectSchemasOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CrmCustomObjectSchemasOneResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasOneResponse> get(CrmCustomObjectSchemasOneRequest request) {
        return get(request, Optional.empty());
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;CrmCustomObjectSchemasOneResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasOneResponse> get(CrmCustomObjectSchemasOneRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectSchemasOneRequest, CrmCustomObjectSchemasOneResponse> operation
              = new CrmCustomObjectSchemasOne.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @return The async call builder
     */
    public CrmCustomObjectSchemasUpdateRequestBuilder update() {
        return new CrmCustomObjectSchemasUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CrmCustomObjectSchemasUpdateResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasUpdateResponse> update(CrmCustomObjectSchemasUpdateRequest request) {
        return update(request, Optional.empty());
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;CrmCustomObjectSchemasUpdateResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasUpdateResponse> update(CrmCustomObjectSchemasUpdateRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectSchemasUpdateRequest, CrmCustomObjectSchemasUpdateResponse> operation
              = new CrmCustomObjectSchemasUpdate.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @return The async call builder
     */
    public CrmCustomObjectSchemasDeleteRequestBuilder delete() {
        return new CrmCustomObjectSchemasDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;CrmCustomObjectSchemasDeleteResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasDeleteResponse> delete(CrmCustomObjectSchemasDeleteRequest request) {
        return delete(request, Optional.empty());
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;CrmCustomObjectSchemasDeleteResponse&gt; - The async response
     */
    public CompletableFuture<CrmCustomObjectSchemasDeleteResponse> delete(CrmCustomObjectSchemasDeleteRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectSchemasDeleteRequest, CrmCustomObjectSchemasDeleteResponse> operation
              = new CrmCustomObjectSchemasDelete.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
