/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.CrmCustomObjectsAddRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsAllRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsDeleteRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsOneRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsUpdateRequest;
import com.apideck.unify.models.operations.async.CrmCustomObjectsAddRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectsAddResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectsAllRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectsAllResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectsDeleteRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectsDeleteResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectsOneRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectsOneResponse;
import com.apideck.unify.models.operations.async.CrmCustomObjectsUpdateRequestBuilder;
import com.apideck.unify.models.operations.async.CrmCustomObjectsUpdateResponse;
import com.apideck.unify.operations.CrmCustomObjectsAdd;
import com.apideck.unify.operations.CrmCustomObjectsAll;
import com.apideck.unify.operations.CrmCustomObjectsDelete;
import com.apideck.unify.operations.CrmCustomObjectsOne;
import com.apideck.unify.operations.CrmCustomObjectsUpdate;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncCustomObjects {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final CustomObjects syncSDK;

    AsyncCustomObjects(CustomObjects syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public CustomObjects sync() {
        return syncSDK;
    }


    /**
     * List custom objects
     * 
     * <p>List custom objects
     * 
     * @return The async call builder
     */
    public CrmCustomObjectsAllRequestBuilder list() {
        return new CrmCustomObjectsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List custom objects
     * 
     * <p>List custom objects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CrmCustomObjectsAllResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsAllResponse> list(CrmCustomObjectsAllRequest request) {
        return list(request, Optional.empty());
    }

    /**
     * List custom objects
     * 
     * <p>List custom objects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return {@code CompletableFuture<CrmCustomObjectsAllResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsAllResponse> list(CrmCustomObjectsAllRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectsAllRequest, CrmCustomObjectsAllResponse> operation
              = new CrmCustomObjectsAll.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create custom object
     * 
     * <p>Create custom object
     * 
     * @return The async call builder
     */
    public CrmCustomObjectsAddRequestBuilder create() {
        return new CrmCustomObjectsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create custom object
     * 
     * <p>Create custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CrmCustomObjectsAddResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsAddResponse> create(CrmCustomObjectsAddRequest request) {
        return create(request, Optional.empty());
    }

    /**
     * Create custom object
     * 
     * <p>Create custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return {@code CompletableFuture<CrmCustomObjectsAddResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsAddResponse> create(CrmCustomObjectsAddRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectsAddRequest, CrmCustomObjectsAddResponse> operation
              = new CrmCustomObjectsAdd.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get custom object
     * 
     * <p>Get custom object
     * 
     * @return The async call builder
     */
    public CrmCustomObjectsOneRequestBuilder get() {
        return new CrmCustomObjectsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get custom object
     * 
     * <p>Get custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CrmCustomObjectsOneResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsOneResponse> get(CrmCustomObjectsOneRequest request) {
        return get(request, Optional.empty());
    }

    /**
     * Get custom object
     * 
     * <p>Get custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return {@code CompletableFuture<CrmCustomObjectsOneResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsOneResponse> get(CrmCustomObjectsOneRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectsOneRequest, CrmCustomObjectsOneResponse> operation
              = new CrmCustomObjectsOne.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update custom object
     * 
     * <p>Update custom object
     * 
     * @return The async call builder
     */
    public CrmCustomObjectsUpdateRequestBuilder update() {
        return new CrmCustomObjectsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update custom object
     * 
     * <p>Update custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CrmCustomObjectsUpdateResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsUpdateResponse> update(CrmCustomObjectsUpdateRequest request) {
        return update(request, Optional.empty());
    }

    /**
     * Update custom object
     * 
     * <p>Update custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return {@code CompletableFuture<CrmCustomObjectsUpdateResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsUpdateResponse> update(CrmCustomObjectsUpdateRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectsUpdateRequest, CrmCustomObjectsUpdateResponse> operation
              = new CrmCustomObjectsUpdate.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete custom object
     * 
     * <p>Delete custom object
     * 
     * @return The async call builder
     */
    public CrmCustomObjectsDeleteRequestBuilder delete() {
        return new CrmCustomObjectsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete custom object
     * 
     * <p>Delete custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return {@code CompletableFuture<CrmCustomObjectsDeleteResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsDeleteResponse> delete(CrmCustomObjectsDeleteRequest request) {
        return delete(request, Optional.empty());
    }

    /**
     * Delete custom object
     * 
     * <p>Delete custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return {@code CompletableFuture<CrmCustomObjectsDeleteResponse>} - The async response
     */
    public CompletableFuture<CrmCustomObjectsDeleteResponse> delete(CrmCustomObjectsDeleteRequest request, Optional<Options> options) {
        AsyncRequestOperation<CrmCustomObjectsDeleteRequest, CrmCustomObjectsDeleteResponse> operation
              = new CrmCustomObjectsDelete.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
