/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.AtsJobsAllRequest;
import com.apideck.unify.models.operations.AtsJobsOneRequest;
import com.apideck.unify.models.operations.async.AtsJobsAllRequestBuilder;
import com.apideck.unify.models.operations.async.AtsJobsAllResponse;
import com.apideck.unify.models.operations.async.AtsJobsOneRequestBuilder;
import com.apideck.unify.models.operations.async.AtsJobsOneResponse;
import com.apideck.unify.operations.AtsJobsAll;
import com.apideck.unify.operations.AtsJobsOne;
import com.apideck.unify.utils.Options;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncJobs {
    private final SDKConfiguration sdkConfiguration;
    private final Jobs syncSDK;

    AsyncJobs(Jobs syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Jobs sync() {
        return syncSDK;
    }


    /**
     * List Jobs
     * 
     * <p>List Jobs
     * 
     * @return The async call builder
     */
    public AtsJobsAllRequestBuilder list() {
        return new AtsJobsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Jobs
     * 
     * <p>List Jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsJobsAllResponse&gt; - The async response
     */
    public CompletableFuture<AtsJobsAllResponse> list(AtsJobsAllRequest request) {
        return list(request, Optional.empty());
    }

    /**
     * List Jobs
     * 
     * <p>List Jobs
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsJobsAllResponse&gt; - The async response
     */
    public CompletableFuture<AtsJobsAllResponse> list(AtsJobsAllRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsJobsAllRequest, AtsJobsAllResponse> operation
              = new AtsJobsAll.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get Job
     * 
     * <p>Get Job
     * 
     * @return The async call builder
     */
    public AtsJobsOneRequestBuilder get() {
        return new AtsJobsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Job
     * 
     * <p>Get Job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;AtsJobsOneResponse&gt; - The async response
     */
    public CompletableFuture<AtsJobsOneResponse> get(AtsJobsOneRequest request) {
        return get(request, Optional.empty());
    }

    /**
     * Get Job
     * 
     * <p>Get Job
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;AtsJobsOneResponse&gt; - The async response
     */
    public CompletableFuture<AtsJobsOneResponse> get(AtsJobsOneRequest request, Optional<Options> options) {
        AsyncRequestOperation<AtsJobsOneRequest, AtsJobsOneResponse> operation
              = new AtsJobsOne.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
