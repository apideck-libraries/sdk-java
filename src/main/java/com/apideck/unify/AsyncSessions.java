/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.components.Session;
import com.apideck.unify.models.operations.VaultSessionsCreateRequest;
import com.apideck.unify.models.operations.async.VaultSessionsCreateRequestBuilder;
import com.apideck.unify.models.operations.async.VaultSessionsCreateResponse;
import com.apideck.unify.operations.VaultSessionsCreate;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.String;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncSessions {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final Sessions syncSDK;

    AsyncSessions(Sessions syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public Sessions sync() {
        return syncSDK;
    }


    /**
     * Create Session
     * 
     * <p>Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned
     * URL to allow temporary access to manage their integrations and settings.
     * 
     * <p>Note: This is a short lived token that will expire after 1 hour (TTL: 3600).
     * 
     * @return The async call builder
     */
    public VaultSessionsCreateRequestBuilder create() {
        return new VaultSessionsCreateRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Session
     * 
     * <p>Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned
     * URL to allow temporary access to manage their integrations and settings.
     * 
     * <p>Note: This is a short lived token that will expire after 1 hour (TTL: 3600).
     * 
     * @return CompletableFuture&lt;VaultSessionsCreateResponse&gt; - The async response
     */
    public CompletableFuture<VaultSessionsCreateResponse> createDirect() {
        return create(
                Optional.empty(), Optional.empty(), Optional.empty(),
                Optional.empty());
    }

    /**
     * Create Session
     * 
     * <p>Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned
     * URL to allow temporary access to manage their integrations and settings.
     * 
     * <p>Note: This is a short lived token that will expire after 1 hour (TTL: 3600).
     * 
     * @param consumerId ID of the consumer which you want to get or push data from
     * @param appId The ID of your Unify application
     * @param session 
     * @param options additional options
     * @return CompletableFuture&lt;VaultSessionsCreateResponse&gt; - The async response
     */
    public CompletableFuture<VaultSessionsCreateResponse> create(
            Optional<String> consumerId, Optional<String> appId,
            Optional<? extends Session> session, Optional<Options> options) {
        VaultSessionsCreateRequest request =
            VaultSessionsCreateRequest
                .builder()
                .consumerId(consumerId)
                .appId(appId)
                .session(session)
                .build();
        AsyncRequestOperation<VaultSessionsCreateRequest, VaultSessionsCreateResponse> operation
              = new VaultSessionsCreate.Async(
                                    sdkConfiguration, options, sdkConfiguration.retryScheduler(),
                                    _headers);
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
