/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.AsyncRequestOperation;

import com.apideck.unify.models.operations.HrisTimeOffRequestsAddRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsAllRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsDeleteRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsOneRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsUpdateRequest;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsAddRequestBuilder;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsAddResponse;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsAllRequestBuilder;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsAllResponse;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsDeleteRequestBuilder;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsDeleteResponse;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsOneRequestBuilder;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsOneResponse;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsUpdateRequestBuilder;
import com.apideck.unify.models.operations.async.HrisTimeOffRequestsUpdateResponse;
import com.apideck.unify.operations.HrisTimeOffRequestsAdd;
import com.apideck.unify.operations.HrisTimeOffRequestsAll;
import com.apideck.unify.operations.HrisTimeOffRequestsDelete;
import com.apideck.unify.operations.HrisTimeOffRequestsOne;
import com.apideck.unify.operations.HrisTimeOffRequestsUpdate;
import com.apideck.unify.utils.Options;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;


public class AsyncTimeOffRequests {
    private final SDKConfiguration sdkConfiguration;
    private final TimeOffRequests syncSDK;

    AsyncTimeOffRequests(TimeOffRequests syncSDK, SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.syncSDK = syncSDK;
    }

    /**
     * Switches to the sync SDK.
     * 
     * @return The sync SDK
     */
    public TimeOffRequests sync() {
        return syncSDK;
    }


    /**
     * List Time Off Requests
     * 
     * <p>List Time Off Requests
     * 
     * @return The async call builder
     */
    public HrisTimeOffRequestsAllRequestBuilder list() {
        return new HrisTimeOffRequestsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Time Off Requests
     * 
     * <p>List Time Off Requests
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;HrisTimeOffRequestsAllResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsAllResponse> list(HrisTimeOffRequestsAllRequest request) {
        return list(request, Optional.empty());
    }

    /**
     * List Time Off Requests
     * 
     * <p>List Time Off Requests
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;HrisTimeOffRequestsAllResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsAllResponse> list(HrisTimeOffRequestsAllRequest request, Optional<Options> options) {
        AsyncRequestOperation<HrisTimeOffRequestsAllRequest, HrisTimeOffRequestsAllResponse> operation
              = new HrisTimeOffRequestsAll.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Create Time Off Request
     * 
     * <p>Create Time Off Request
     * 
     * @return The async call builder
     */
    public HrisTimeOffRequestsAddRequestBuilder create() {
        return new HrisTimeOffRequestsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Time Off Request
     * 
     * <p>Create Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;HrisTimeOffRequestsAddResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsAddResponse> create(HrisTimeOffRequestsAddRequest request) {
        return create(request, Optional.empty());
    }

    /**
     * Create Time Off Request
     * 
     * <p>Create Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;HrisTimeOffRequestsAddResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsAddResponse> create(HrisTimeOffRequestsAddRequest request, Optional<Options> options) {
        AsyncRequestOperation<HrisTimeOffRequestsAddRequest, HrisTimeOffRequestsAddResponse> operation
              = new HrisTimeOffRequestsAdd.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Get Time Off Request
     * 
     * <p>Get Time Off Request
     * 
     * @return The async call builder
     */
    public HrisTimeOffRequestsOneRequestBuilder get() {
        return new HrisTimeOffRequestsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Time Off Request
     * 
     * <p>Get Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;HrisTimeOffRequestsOneResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsOneResponse> get(HrisTimeOffRequestsOneRequest request) {
        return get(request, Optional.empty());
    }

    /**
     * Get Time Off Request
     * 
     * <p>Get Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;HrisTimeOffRequestsOneResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsOneResponse> get(HrisTimeOffRequestsOneRequest request, Optional<Options> options) {
        AsyncRequestOperation<HrisTimeOffRequestsOneRequest, HrisTimeOffRequestsOneResponse> operation
              = new HrisTimeOffRequestsOne.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Update Time Off Request
     * 
     * <p>Update Time Off Request
     * 
     * @return The async call builder
     */
    public HrisTimeOffRequestsUpdateRequestBuilder update() {
        return new HrisTimeOffRequestsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Time Off Request
     * 
     * <p>Update Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;HrisTimeOffRequestsUpdateResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsUpdateResponse> update(HrisTimeOffRequestsUpdateRequest request) {
        return update(request, Optional.empty());
    }

    /**
     * Update Time Off Request
     * 
     * <p>Update Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;HrisTimeOffRequestsUpdateResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsUpdateResponse> update(HrisTimeOffRequestsUpdateRequest request, Optional<Options> options) {
        AsyncRequestOperation<HrisTimeOffRequestsUpdateRequest, HrisTimeOffRequestsUpdateResponse> operation
              = new HrisTimeOffRequestsUpdate.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }


    /**
     * Delete Time Off Request
     * 
     * <p>Delete Time Off Request
     * 
     * @return The async call builder
     */
    public HrisTimeOffRequestsDeleteRequestBuilder delete() {
        return new HrisTimeOffRequestsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Time Off Request
     * 
     * <p>Delete Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return CompletableFuture&lt;HrisTimeOffRequestsDeleteResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsDeleteResponse> delete(HrisTimeOffRequestsDeleteRequest request) {
        return delete(request, Optional.empty());
    }

    /**
     * Delete Time Off Request
     * 
     * <p>Delete Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return CompletableFuture&lt;HrisTimeOffRequestsDeleteResponse&gt; - The async response
     */
    public CompletableFuture<HrisTimeOffRequestsDeleteResponse> delete(HrisTimeOffRequestsDeleteRequest request, Optional<Options> options) {
        AsyncRequestOperation<HrisTimeOffRequestsDeleteRequest, HrisTimeOffRequestsDeleteResponse> operation
              = new HrisTimeOffRequestsDelete.Async(sdkConfiguration, options, sdkConfiguration.retryScheduler());
        return operation.doRequest(request)
            .thenCompose(operation::handleResponse);
    }

}
