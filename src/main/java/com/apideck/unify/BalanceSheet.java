/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.AccountingBalanceSheetOneRequest;
import com.apideck.unify.models.operations.AccountingBalanceSheetOneRequestBuilder;
import com.apideck.unify.models.operations.AccountingBalanceSheetOneResponse;
import com.apideck.unify.operations.AccountingBalanceSheetOneOperation;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class BalanceSheet {
    private final SDKConfiguration sdkConfiguration;

    BalanceSheet(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Get BalanceSheet
     * 
     * <p>Get BalanceSheet
     * 
     * @return The call builder
     */
    public AccountingBalanceSheetOneRequestBuilder get() {
        return new AccountingBalanceSheetOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get BalanceSheet
     * 
     * <p>Get BalanceSheet
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingBalanceSheetOneResponse get(AccountingBalanceSheetOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get BalanceSheet
     * 
     * <p>Get BalanceSheet
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingBalanceSheetOneResponse get(
            AccountingBalanceSheetOneRequest request,
            Optional<Options> options) throws Exception {
        RequestOperation<AccountingBalanceSheetOneRequest, AccountingBalanceSheetOneResponse> operation
              = new AccountingBalanceSheetOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
