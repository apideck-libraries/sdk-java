/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.IssueTrackingCollectionUsersAllRequest;
import com.apideck.unify.models.operations.IssueTrackingCollectionUsersAllRequestBuilder;
import com.apideck.unify.models.operations.IssueTrackingCollectionUsersAllResponse;
import com.apideck.unify.models.operations.IssueTrackingCollectionUsersOneRequest;
import com.apideck.unify.models.operations.IssueTrackingCollectionUsersOneRequestBuilder;
import com.apideck.unify.models.operations.IssueTrackingCollectionUsersOneResponse;
import com.apideck.unify.operations.IssueTrackingCollectionUsersAll;
import com.apideck.unify.operations.IssueTrackingCollectionUsersOne;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class CollectionUsers {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCollectionUsers asyncSDK;

    CollectionUsers(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCollectionUsers(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCollectionUsers async() {
        return asyncSDK;
    }

    /**
     * List Users
     * 
     * <p>List Users
     * 
     * @return The call builder
     */
    public IssueTrackingCollectionUsersAllRequestBuilder list() {
        return new IssueTrackingCollectionUsersAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Users
     * 
     * <p>List Users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public IssueTrackingCollectionUsersAllResponse list(IssueTrackingCollectionUsersAllRequest request) throws Exception {
        return list(request, Optional.empty());
    }

    /**
     * List Users
     * 
     * <p>List Users
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public IssueTrackingCollectionUsersAllResponse list(IssueTrackingCollectionUsersAllRequest request, Optional<Options> options) throws Exception {
        RequestOperation<IssueTrackingCollectionUsersAllRequest, IssueTrackingCollectionUsersAllResponse> operation
              = new IssueTrackingCollectionUsersAll.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get user
     * 
     * <p>Get user
     * 
     * @return The call builder
     */
    public IssueTrackingCollectionUsersOneRequestBuilder get() {
        return new IssueTrackingCollectionUsersOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get user
     * 
     * <p>Get user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public IssueTrackingCollectionUsersOneResponse get(IssueTrackingCollectionUsersOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get user
     * 
     * <p>Get user
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public IssueTrackingCollectionUsersOneResponse get(IssueTrackingCollectionUsersOneRequest request, Optional<Options> options) throws Exception {
        RequestOperation<IssueTrackingCollectionUsersOneRequest, IssueTrackingCollectionUsersOneResponse> operation
              = new IssueTrackingCollectionUsersOne.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
