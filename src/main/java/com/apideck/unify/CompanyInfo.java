/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.AccountingCompanyInfoOneRequest;
import com.apideck.unify.models.operations.AccountingCompanyInfoOneRequestBuilder;
import com.apideck.unify.models.operations.AccountingCompanyInfoOneResponse;
import com.apideck.unify.operations.AccountingCompanyInfoOne;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class CompanyInfo {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCompanyInfo asyncSDK;

    CompanyInfo(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCompanyInfo(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCompanyInfo async() {
        return asyncSDK;
    }

    /**
     * Get company info
     * 
     * <p>Get company info
     * 
     * @return The call builder
     */
    public AccountingCompanyInfoOneRequestBuilder get() {
        return new AccountingCompanyInfoOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get company info
     * 
     * <p>Get company info
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCompanyInfoOneResponse get(AccountingCompanyInfoOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get company info
     * 
     * <p>Get company info
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCompanyInfoOneResponse get(AccountingCompanyInfoOneRequest request, Optional<Options> options) throws Exception {
        RequestOperation<AccountingCompanyInfoOneRequest, AccountingCompanyInfoOneResponse> operation
              = new AccountingCompanyInfoOne.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
