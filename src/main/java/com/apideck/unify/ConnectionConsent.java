/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.VaultConnectionConsentUpdateRequest;
import com.apideck.unify.models.operations.VaultConnectionConsentUpdateRequestBuilder;
import com.apideck.unify.models.operations.VaultConnectionConsentUpdateResponse;
import com.apideck.unify.operations.VaultConnectionConsentUpdate;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class ConnectionConsent {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncConnectionConsent asyncSDK;

    ConnectionConsent(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncConnectionConsent(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncConnectionConsent async() {
        return asyncSDK;
    }

    /**
     * Update consent state
     * 
     * <p>Update the consent state of a connection
     * 
     * @return The call builder
     */
    public VaultConnectionConsentUpdateRequestBuilder update() {
        return new VaultConnectionConsentUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update consent state
     * 
     * <p>Update the consent state of a connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultConnectionConsentUpdateResponse update(VaultConnectionConsentUpdateRequest request) throws Exception {
        return update(request, Optional.empty());
    }

    /**
     * Update consent state
     * 
     * <p>Update the consent state of a connection
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultConnectionConsentUpdateResponse update(VaultConnectionConsentUpdateRequest request, Optional<Options> options) throws Exception {
        RequestOperation<VaultConnectionConsentUpdateRequest, VaultConnectionConsentUpdateResponse> operation
              = new VaultConnectionConsentUpdate.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
