/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.ConnectorConnectorDocsOneRequest;
import com.apideck.unify.models.operations.ConnectorConnectorDocsOneRequestBuilder;
import com.apideck.unify.models.operations.ConnectorConnectorDocsOneResponse;
import com.apideck.unify.operations.ConnectorConnectorDocsOneOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class ConnectorDocs {
    private final SDKConfiguration sdkConfiguration;

    ConnectorDocs(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Get Connector Doc content
     * 
     * <p>Get Connector Doc content
     * 
     * @return The call builder
     */
    public ConnectorConnectorDocsOneRequestBuilder get() {
        return new ConnectorConnectorDocsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Connector Doc content
     * 
     * <p>Get Connector Doc content
     * 
     * @param id ID of the record you are acting upon.
     * @param docId ID of the Doc
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConnectorConnectorDocsOneResponse get(
            @Nonnull String id,
            @Nonnull String docId) throws Exception {
        return get(null, id, docId,
            null);
    }

    /**
     * Get Connector Doc content
     * 
     * <p>Get Connector Doc content
     * 
     * @param appId The ID of your Unify application
     * @param id ID of the record you are acting upon.
     * @param docId ID of the Doc
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConnectorConnectorDocsOneResponse get(
            @Nullable String appId,
            @Nonnull String id,
            @Nonnull String docId,
            @Nullable Options options) throws Exception {
        ConnectorConnectorDocsOneRequest request = new ConnectorConnectorDocsOneRequest(
            appId,
            id,
            docId);
        RequestOperation<ConnectorConnectorDocsOneRequest, ConnectorConnectorDocsOneResponse> operation
              = new ConnectorConnectorDocsOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
