/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.components.ConnectorsFilter;
import com.apideck.unify.models.operations.ConnectorConnectorsAllRequest;
import com.apideck.unify.models.operations.ConnectorConnectorsAllRequestBuilder;
import com.apideck.unify.models.operations.ConnectorConnectorsAllResponse;
import com.apideck.unify.models.operations.ConnectorConnectorsOneRequest;
import com.apideck.unify.models.operations.ConnectorConnectorsOneRequestBuilder;
import com.apideck.unify.models.operations.ConnectorConnectorsOneResponse;
import com.apideck.unify.operations.ConnectorConnectorsAllOperation;
import com.apideck.unify.operations.ConnectorConnectorsOneOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class Connectors {
    private final SDKConfiguration sdkConfiguration;

    Connectors(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List Connectors
     * 
     * <p>List Connectors
     * 
     * @return The call builder
     */
    public ConnectorConnectorsAllRequestBuilder list() {
        return new ConnectorConnectorsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Connectors
     * 
     * <p>List Connectors
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConnectorConnectorsAllResponse listDirect() throws Exception {
        return list(null, JsonNullable.undefined(), null,
            null, null);
    }

    /**
     * List Connectors
     * 
     * <p>List Connectors
     * 
     * @param appId The ID of your Unify application
     * @param cursor Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     * @param limit Number of results to return. Minimum 1, Maximum 200, Default 20
     * @param filter 
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConnectorConnectorsAllResponse list(
            @Nullable String appId,
            @Nullable JsonNullable<String> cursor,
            @Nullable Long limit,
            @Nullable ConnectorsFilter filter,
            @Nullable Options options) throws Exception {
        ConnectorConnectorsAllRequest request = new ConnectorConnectorsAllRequest(
            appId,
            cursor,
            limit,
            filter);
        RequestOperation<ConnectorConnectorsAllRequest, ConnectorConnectorsAllResponse> operation
              = new ConnectorConnectorsAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Connector
     * 
     * <p>Get Connector
     * 
     * @return The call builder
     */
    public ConnectorConnectorsOneRequestBuilder get() {
        return new ConnectorConnectorsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Connector
     * 
     * <p>Get Connector
     * 
     * @param id ID of the record you are acting upon.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConnectorConnectorsOneResponse get(@Nonnull String id) throws Exception {
        return get(null, id, null);
    }

    /**
     * Get Connector
     * 
     * <p>Get Connector
     * 
     * @param appId The ID of your Unify application
     * @param id ID of the record you are acting upon.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ConnectorConnectorsOneResponse get(
            @Nullable String appId,
            @Nonnull String id,
            @Nullable Options options) throws Exception {
        ConnectorConnectorsOneRequest request = new ConnectorConnectorsOneRequest(
            appId,
            id);
        RequestOperation<ConnectorConnectorsOneRequest, ConnectorConnectorsOneResponse> operation
              = new ConnectorConnectorsOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
