/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllRequest;
import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllRequestBuilder;
import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllResponse;
import com.apideck.unify.operations.VaultConsumerRequestCountsAllOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class ConsumerRequestCounts {
    private final SDKConfiguration sdkConfiguration;

    ConsumerRequestCounts(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @return The call builder
     */
    public VaultConsumerRequestCountsAllRequestBuilder list() {
        return new VaultConsumerRequestCountsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @param consumerId ID of the consumer to return
     * @param startDatetime Scopes results to requests that happened after datetime
     * @param endDatetime Scopes results to requests that happened before datetime
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultConsumerRequestCountsAllResponse list(
            @Nonnull String consumerId,
            @Nonnull String startDatetime,
            @Nonnull String endDatetime) throws Exception {
        return list(null, consumerId, startDatetime,
            endDatetime, null);
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @param appId The ID of your Unify application
     * @param consumerId ID of the consumer to return
     * @param startDatetime Scopes results to requests that happened after datetime
     * @param endDatetime Scopes results to requests that happened before datetime
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultConsumerRequestCountsAllResponse list(
            @Nullable String appId,
            @Nonnull String consumerId,
            @Nonnull String startDatetime,
            @Nonnull String endDatetime,
            @Nullable Options options) throws Exception {
        VaultConsumerRequestCountsAllRequest request = new VaultConsumerRequestCountsAllRequest(
            appId,
            consumerId,
            startDatetime,
            endDatetime);
        RequestOperation<VaultConsumerRequestCountsAllRequest, VaultConsumerRequestCountsAllResponse> operation
              = new VaultConsumerRequestCountsAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
