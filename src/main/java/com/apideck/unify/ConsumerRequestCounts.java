/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllRequest;
import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllRequestBuilder;
import com.apideck.unify.models.operations.VaultConsumerRequestCountsAllResponse;
import com.apideck.unify.operations.VaultConsumerRequestCountsAll;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class ConsumerRequestCounts {
    private final SDKConfiguration sdkConfiguration;
    private final AsyncConsumerRequestCounts asyncSDK;

    ConsumerRequestCounts(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncConsumerRequestCounts(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncConsumerRequestCounts async() {
        return asyncSDK;
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @return The call builder
     */
    public VaultConsumerRequestCountsAllRequestBuilder list() {
        return new VaultConsumerRequestCountsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @param consumerId ID of the consumer to return
     * @param startDatetime Scopes results to requests that happened after datetime
     * @param endDatetime Scopes results to requests that happened before datetime
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultConsumerRequestCountsAllResponse list(
            String consumerId, String startDatetime,
            String endDatetime) throws Exception {
        return list(Optional.empty(), consumerId, startDatetime,
            endDatetime, Optional.empty());
    }

    /**
     * Consumer request counts
     * 
     * <p>Get consumer request counts within a given datetime range.
     * 
     * @param appId The ID of your Unify application
     * @param consumerId ID of the consumer to return
     * @param startDatetime Scopes results to requests that happened after datetime
     * @param endDatetime Scopes results to requests that happened before datetime
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultConsumerRequestCountsAllResponse list(
            Optional<String> appId, String consumerId,
            String startDatetime, String endDatetime,
            Optional<Options> options) throws Exception {
        VaultConsumerRequestCountsAllRequest request =
            VaultConsumerRequestCountsAllRequest
                .builder()
                .appId(appId)
                .consumerId(consumerId)
                .startDatetime(startDatetime)
                .endDatetime(endDatetime)
                .build();
        RequestOperation<VaultConsumerRequestCountsAllRequest, VaultConsumerRequestCountsAllResponse> operation
              = new VaultConsumerRequestCountsAll.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
