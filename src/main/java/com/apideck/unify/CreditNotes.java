/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.AccountingCreditNotesAddRequest;
import com.apideck.unify.models.operations.AccountingCreditNotesAddRequestBuilder;
import com.apideck.unify.models.operations.AccountingCreditNotesAddResponse;
import com.apideck.unify.models.operations.AccountingCreditNotesAllRequest;
import com.apideck.unify.models.operations.AccountingCreditNotesAllRequestBuilder;
import com.apideck.unify.models.operations.AccountingCreditNotesAllResponse;
import com.apideck.unify.models.operations.AccountingCreditNotesDeleteRequest;
import com.apideck.unify.models.operations.AccountingCreditNotesDeleteRequestBuilder;
import com.apideck.unify.models.operations.AccountingCreditNotesDeleteResponse;
import com.apideck.unify.models.operations.AccountingCreditNotesOneRequest;
import com.apideck.unify.models.operations.AccountingCreditNotesOneRequestBuilder;
import com.apideck.unify.models.operations.AccountingCreditNotesOneResponse;
import com.apideck.unify.models.operations.AccountingCreditNotesUpdateRequest;
import com.apideck.unify.models.operations.AccountingCreditNotesUpdateRequestBuilder;
import com.apideck.unify.models.operations.AccountingCreditNotesUpdateResponse;
import com.apideck.unify.operations.AccountingCreditNotesAddOperation;
import com.apideck.unify.operations.AccountingCreditNotesAllOperation;
import com.apideck.unify.operations.AccountingCreditNotesDeleteOperation;
import com.apideck.unify.operations.AccountingCreditNotesOneOperation;
import com.apideck.unify.operations.AccountingCreditNotesUpdateOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class CreditNotes {
    private final SDKConfiguration sdkConfiguration;

    CreditNotes(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List Credit Notes
     * 
     * <p>List Credit Notes
     * 
     * @return The call builder
     */
    public AccountingCreditNotesAllRequestBuilder list() {
        return new AccountingCreditNotesAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Credit Notes
     * 
     * <p>List Credit Notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesAllResponse list(@Nonnull AccountingCreditNotesAllRequest request) throws Exception {
        return list(request, null);
    }

    /**
     * List Credit Notes
     * 
     * <p>List Credit Notes
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesAllResponse list(
            @Nonnull AccountingCreditNotesAllRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AccountingCreditNotesAllRequest, AccountingCreditNotesAllResponse> operation
              = new AccountingCreditNotesAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create Credit Note
     * 
     * <p>Create Credit Note
     * 
     * @return The call builder
     */
    public AccountingCreditNotesAddRequestBuilder create() {
        return new AccountingCreditNotesAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Credit Note
     * 
     * <p>Create Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesAddResponse create(@Nonnull AccountingCreditNotesAddRequest request) throws Exception {
        return create(request, null);
    }

    /**
     * Create Credit Note
     * 
     * <p>Create Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesAddResponse create(
            @Nonnull AccountingCreditNotesAddRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AccountingCreditNotesAddRequest, AccountingCreditNotesAddResponse> operation
              = new AccountingCreditNotesAddOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Credit Note
     * 
     * <p>Get Credit Note
     * 
     * @return The call builder
     */
    public AccountingCreditNotesOneRequestBuilder get() {
        return new AccountingCreditNotesOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Credit Note
     * 
     * <p>Get Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesOneResponse get(@Nonnull AccountingCreditNotesOneRequest request) throws Exception {
        return get(request, null);
    }

    /**
     * Get Credit Note
     * 
     * <p>Get Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesOneResponse get(
            @Nonnull AccountingCreditNotesOneRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AccountingCreditNotesOneRequest, AccountingCreditNotesOneResponse> operation
              = new AccountingCreditNotesOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update Credit Note
     * 
     * <p>Update Credit Note
     * 
     * @return The call builder
     */
    public AccountingCreditNotesUpdateRequestBuilder update() {
        return new AccountingCreditNotesUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Credit Note
     * 
     * <p>Update Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesUpdateResponse update(@Nonnull AccountingCreditNotesUpdateRequest request) throws Exception {
        return update(request, null);
    }

    /**
     * Update Credit Note
     * 
     * <p>Update Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesUpdateResponse update(
            @Nonnull AccountingCreditNotesUpdateRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AccountingCreditNotesUpdateRequest, AccountingCreditNotesUpdateResponse> operation
              = new AccountingCreditNotesUpdateOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete Credit Note
     * 
     * <p>Delete Credit Note
     * 
     * @return The call builder
     */
    public AccountingCreditNotesDeleteRequestBuilder delete() {
        return new AccountingCreditNotesDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Credit Note
     * 
     * <p>Delete Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesDeleteResponse delete(@Nonnull AccountingCreditNotesDeleteRequest request) throws Exception {
        return delete(request, null);
    }

    /**
     * Delete Credit Note
     * 
     * <p>Delete Credit Note
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public AccountingCreditNotesDeleteResponse delete(
            @Nonnull AccountingCreditNotesDeleteRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<AccountingCreditNotesDeleteRequest, AccountingCreditNotesDeleteResponse> operation
              = new AccountingCreditNotesDeleteOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
