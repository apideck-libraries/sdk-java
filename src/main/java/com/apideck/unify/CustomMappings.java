/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.VaultCustomMappingsAllRequest;
import com.apideck.unify.models.operations.VaultCustomMappingsAllRequestBuilder;
import com.apideck.unify.models.operations.VaultCustomMappingsAllResponse;
import com.apideck.unify.operations.VaultCustomMappingsAll;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;


public class CustomMappings {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncCustomMappings asyncSDK;

    CustomMappings(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncCustomMappings(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncCustomMappings async() {
        return asyncSDK;
    }

    /**
     * List custom mappings
     * 
     * <p>This endpoint returns a list of custom mappings.
     * 
     * @return The call builder
     */
    public VaultCustomMappingsAllRequestBuilder list() {
        return new VaultCustomMappingsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List custom mappings
     * 
     * <p>This endpoint returns a list of custom mappings.
     * 
     * @param unifiedApi Unified API
     * @param serviceId Service ID of the resource to return
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultCustomMappingsAllResponse list(String unifiedApi, String serviceId) throws Exception {
        return list(Optional.empty(), Optional.empty(), unifiedApi,
            serviceId, Optional.empty());
    }

    /**
     * List custom mappings
     * 
     * <p>This endpoint returns a list of custom mappings.
     * 
     * @param consumerId ID of the consumer which you want to get or push data from
     * @param appId The ID of your Unify application
     * @param unifiedApi Unified API
     * @param serviceId Service ID of the resource to return
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public VaultCustomMappingsAllResponse list(
            Optional<String> consumerId, Optional<String> appId,
            String unifiedApi, String serviceId,
            Optional<Options> options) throws Exception {
        VaultCustomMappingsAllRequest request =
            VaultCustomMappingsAllRequest
                .builder()
                .consumerId(consumerId)
                .appId(appId)
                .unifiedApi(unifiedApi)
                .serviceId(serviceId)
                .build();
        RequestOperation<VaultCustomMappingsAllRequest, VaultCustomMappingsAllResponse> operation
              = new VaultCustomMappingsAll.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
