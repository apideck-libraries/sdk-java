/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateResponse;
import com.apideck.unify.operations.CrmCustomObjectSchemasAddOperation;
import com.apideck.unify.operations.CrmCustomObjectSchemasAllOperation;
import com.apideck.unify.operations.CrmCustomObjectSchemasDeleteOperation;
import com.apideck.unify.operations.CrmCustomObjectSchemasOneOperation;
import com.apideck.unify.operations.CrmCustomObjectSchemasUpdateOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class CustomObjectSchemas {
    private final SDKConfiguration sdkConfiguration;

    CustomObjectSchemas(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasAllRequestBuilder list() {
        return new CrmCustomObjectSchemasAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAllResponse list(@Nonnull CrmCustomObjectSchemasAllRequest request) throws Exception {
        return list(request, null);
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAllResponse list(
            @Nonnull CrmCustomObjectSchemasAllRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasAllRequest, CrmCustomObjectSchemasAllResponse> operation
              = new CrmCustomObjectSchemasAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasAddRequestBuilder create() {
        return new CrmCustomObjectSchemasAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAddResponse create(@Nonnull CrmCustomObjectSchemasAddRequest request) throws Exception {
        return create(request, null);
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAddResponse create(
            @Nonnull CrmCustomObjectSchemasAddRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasAddRequest, CrmCustomObjectSchemasAddResponse> operation
              = new CrmCustomObjectSchemasAddOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasOneRequestBuilder get() {
        return new CrmCustomObjectSchemasOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasOneResponse get(@Nonnull CrmCustomObjectSchemasOneRequest request) throws Exception {
        return get(request, null);
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasOneResponse get(
            @Nonnull CrmCustomObjectSchemasOneRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasOneRequest, CrmCustomObjectSchemasOneResponse> operation
              = new CrmCustomObjectSchemasOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasUpdateRequestBuilder update() {
        return new CrmCustomObjectSchemasUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasUpdateResponse update(@Nonnull CrmCustomObjectSchemasUpdateRequest request) throws Exception {
        return update(request, null);
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasUpdateResponse update(
            @Nonnull CrmCustomObjectSchemasUpdateRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasUpdateRequest, CrmCustomObjectSchemasUpdateResponse> operation
              = new CrmCustomObjectSchemasUpdateOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasDeleteRequestBuilder delete() {
        return new CrmCustomObjectSchemasDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasDeleteResponse delete(@Nonnull CrmCustomObjectSchemasDeleteRequest request) throws Exception {
        return delete(request, null);
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasDeleteResponse delete(
            @Nonnull CrmCustomObjectSchemasDeleteRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasDeleteRequest, CrmCustomObjectSchemasDeleteResponse> operation
              = new CrmCustomObjectSchemasDeleteOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
