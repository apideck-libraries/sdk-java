/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAddResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasAllResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasDeleteResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasOneResponse;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateRequest;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectSchemasUpdateResponse;
import com.apideck.unify.operations.CrmCustomObjectSchemasAdd;
import com.apideck.unify.operations.CrmCustomObjectSchemasAll;
import com.apideck.unify.operations.CrmCustomObjectSchemasDelete;
import com.apideck.unify.operations.CrmCustomObjectSchemasOne;
import com.apideck.unify.operations.CrmCustomObjectSchemasUpdate;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class CustomObjectSchemas {
    private final SDKConfiguration sdkConfiguration;

    CustomObjectSchemas(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasAllRequestBuilder list() {
        return new CrmCustomObjectSchemasAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAllResponse list(CrmCustomObjectSchemasAllRequest request) throws Exception {
        return list(request, Optional.empty());
    }

    /**
     * List custom object schemas
     * 
     * <p>List custom object schemas
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAllResponse list(CrmCustomObjectSchemasAllRequest request, Optional<Options> options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasAllRequest, CrmCustomObjectSchemasAllResponse> operation
              = new CrmCustomObjectSchemasAll.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasAddRequestBuilder create() {
        return new CrmCustomObjectSchemasAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAddResponse create(CrmCustomObjectSchemasAddRequest request) throws Exception {
        return create(request, Optional.empty());
    }

    /**
     * Create custom object schema
     * 
     * <p>Create custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasAddResponse create(CrmCustomObjectSchemasAddRequest request, Optional<Options> options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasAddRequest, CrmCustomObjectSchemasAddResponse> operation
              = new CrmCustomObjectSchemasAdd.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasOneRequestBuilder get() {
        return new CrmCustomObjectSchemasOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasOneResponse get(CrmCustomObjectSchemasOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get custom object schema
     * 
     * <p>Get custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasOneResponse get(CrmCustomObjectSchemasOneRequest request, Optional<Options> options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasOneRequest, CrmCustomObjectSchemasOneResponse> operation
              = new CrmCustomObjectSchemasOne.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasUpdateRequestBuilder update() {
        return new CrmCustomObjectSchemasUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasUpdateResponse update(CrmCustomObjectSchemasUpdateRequest request) throws Exception {
        return update(request, Optional.empty());
    }

    /**
     * Update custom object schema
     * 
     * <p>Update custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasUpdateResponse update(CrmCustomObjectSchemasUpdateRequest request, Optional<Options> options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasUpdateRequest, CrmCustomObjectSchemasUpdateResponse> operation
              = new CrmCustomObjectSchemasUpdate.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @return The call builder
     */
    public CrmCustomObjectSchemasDeleteRequestBuilder delete() {
        return new CrmCustomObjectSchemasDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasDeleteResponse delete(CrmCustomObjectSchemasDeleteRequest request) throws Exception {
        return delete(request, Optional.empty());
    }

    /**
     * Delete custom object schema
     * 
     * <p>Delete custom object schema
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectSchemasDeleteResponse delete(CrmCustomObjectSchemasDeleteRequest request, Optional<Options> options) throws Exception {
        RequestOperation<CrmCustomObjectSchemasDeleteRequest, CrmCustomObjectSchemasDeleteResponse> operation
              = new CrmCustomObjectSchemasDelete.Sync(sdkConfiguration, options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
