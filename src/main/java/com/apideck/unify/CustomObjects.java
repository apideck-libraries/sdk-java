/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.CrmCustomObjectsAddRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsAddRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectsAddResponse;
import com.apideck.unify.models.operations.CrmCustomObjectsAllRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsAllRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectsAllResponse;
import com.apideck.unify.models.operations.CrmCustomObjectsDeleteRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsDeleteRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectsDeleteResponse;
import com.apideck.unify.models.operations.CrmCustomObjectsOneRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsOneRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectsOneResponse;
import com.apideck.unify.models.operations.CrmCustomObjectsUpdateRequest;
import com.apideck.unify.models.operations.CrmCustomObjectsUpdateRequestBuilder;
import com.apideck.unify.models.operations.CrmCustomObjectsUpdateResponse;
import com.apideck.unify.operations.CrmCustomObjectsAddOperation;
import com.apideck.unify.operations.CrmCustomObjectsAllOperation;
import com.apideck.unify.operations.CrmCustomObjectsDeleteOperation;
import com.apideck.unify.operations.CrmCustomObjectsOneOperation;
import com.apideck.unify.operations.CrmCustomObjectsUpdateOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class CustomObjects {
    private final SDKConfiguration sdkConfiguration;

    CustomObjects(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List custom objects
     * 
     * <p>List custom objects
     * 
     * @return The call builder
     */
    public CrmCustomObjectsAllRequestBuilder list() {
        return new CrmCustomObjectsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List custom objects
     * 
     * <p>List custom objects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsAllResponse list(@Nonnull CrmCustomObjectsAllRequest request) throws Exception {
        return list(request, null);
    }

    /**
     * List custom objects
     * 
     * <p>List custom objects
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsAllResponse list(
            @Nonnull CrmCustomObjectsAllRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectsAllRequest, CrmCustomObjectsAllResponse> operation
              = new CrmCustomObjectsAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create custom object
     * 
     * <p>Create custom object
     * 
     * @return The call builder
     */
    public CrmCustomObjectsAddRequestBuilder create() {
        return new CrmCustomObjectsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create custom object
     * 
     * <p>Create custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsAddResponse create(@Nonnull CrmCustomObjectsAddRequest request) throws Exception {
        return create(request, null);
    }

    /**
     * Create custom object
     * 
     * <p>Create custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsAddResponse create(
            @Nonnull CrmCustomObjectsAddRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectsAddRequest, CrmCustomObjectsAddResponse> operation
              = new CrmCustomObjectsAddOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get custom object
     * 
     * <p>Get custom object
     * 
     * @return The call builder
     */
    public CrmCustomObjectsOneRequestBuilder get() {
        return new CrmCustomObjectsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get custom object
     * 
     * <p>Get custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsOneResponse get(@Nonnull CrmCustomObjectsOneRequest request) throws Exception {
        return get(request, null);
    }

    /**
     * Get custom object
     * 
     * <p>Get custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsOneResponse get(
            @Nonnull CrmCustomObjectsOneRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectsOneRequest, CrmCustomObjectsOneResponse> operation
              = new CrmCustomObjectsOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update custom object
     * 
     * <p>Update custom object
     * 
     * @return The call builder
     */
    public CrmCustomObjectsUpdateRequestBuilder update() {
        return new CrmCustomObjectsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update custom object
     * 
     * <p>Update custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsUpdateResponse update(@Nonnull CrmCustomObjectsUpdateRequest request) throws Exception {
        return update(request, null);
    }

    /**
     * Update custom object
     * 
     * <p>Update custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsUpdateResponse update(
            @Nonnull CrmCustomObjectsUpdateRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectsUpdateRequest, CrmCustomObjectsUpdateResponse> operation
              = new CrmCustomObjectsUpdateOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete custom object
     * 
     * <p>Delete custom object
     * 
     * @return The call builder
     */
    public CrmCustomObjectsDeleteRequestBuilder delete() {
        return new CrmCustomObjectsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete custom object
     * 
     * <p>Delete custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsDeleteResponse delete(@Nonnull CrmCustomObjectsDeleteRequest request) throws Exception {
        return delete(request, null);
    }

    /**
     * Delete custom object
     * 
     * <p>Delete custom object
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CrmCustomObjectsDeleteResponse delete(
            @Nonnull CrmCustomObjectsDeleteRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<CrmCustomObjectsDeleteRequest, CrmCustomObjectsDeleteResponse> operation
              = new CrmCustomObjectsDeleteOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
