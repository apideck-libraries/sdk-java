/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.HrisPayrollsAllRequest;
import com.apideck.unify.models.operations.HrisPayrollsAllRequestBuilder;
import com.apideck.unify.models.operations.HrisPayrollsAllResponse;
import com.apideck.unify.models.operations.HrisPayrollsOneRequest;
import com.apideck.unify.models.operations.HrisPayrollsOneRequestBuilder;
import com.apideck.unify.models.operations.HrisPayrollsOneResponse;
import com.apideck.unify.operations.HrisPayrollsAll;
import com.apideck.unify.operations.HrisPayrollsOne;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import java.lang.Exception;
import java.util.Optional;


public class Payrolls {
    private static final Headers _headers = Headers.EMPTY;
    private final SDKConfiguration sdkConfiguration;
    private final AsyncPayrolls asyncSDK;

    Payrolls(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.asyncSDK = new AsyncPayrolls(this, sdkConfiguration);
    }

    /**
     * Switches to the async SDK.
     * 
     * @return The async SDK
     */
    public AsyncPayrolls async() {
        return asyncSDK;
    }

    /**
     * List Payroll
     * 
     * <p>List Payroll
     * 
     * @return The call builder
     */
    public HrisPayrollsAllRequestBuilder list() {
        return new HrisPayrollsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Payroll
     * 
     * <p>List Payroll
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisPayrollsAllResponse list(HrisPayrollsAllRequest request) throws Exception {
        return list(request, Optional.empty());
    }

    /**
     * List Payroll
     * 
     * <p>List Payroll
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisPayrollsAllResponse list(HrisPayrollsAllRequest request, Optional<Options> options) throws Exception {
        RequestOperation<HrisPayrollsAllRequest, HrisPayrollsAllResponse> operation
              = new HrisPayrollsAll.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Payroll
     * 
     * <p>Get Payroll
     * 
     * @return The call builder
     */
    public HrisPayrollsOneRequestBuilder get() {
        return new HrisPayrollsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Payroll
     * 
     * <p>Get Payroll
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisPayrollsOneResponse get(HrisPayrollsOneRequest request) throws Exception {
        return get(request, Optional.empty());
    }

    /**
     * Get Payroll
     * 
     * <p>Get Payroll
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisPayrollsOneResponse get(HrisPayrollsOneRequest request, Optional<Options> options) throws Exception {
        RequestOperation<HrisPayrollsOneRequest, HrisPayrollsOneResponse> operation
              = new HrisPayrollsOne.Sync(sdkConfiguration, options, _headers);
        return operation.handleResponse(operation.doRequest(request));
    }

}
