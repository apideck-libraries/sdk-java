/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.FileStorageSharedLinksAddRequest;
import com.apideck.unify.models.operations.FileStorageSharedLinksAddRequestBuilder;
import com.apideck.unify.models.operations.FileStorageSharedLinksAddResponse;
import com.apideck.unify.models.operations.FileStorageSharedLinksAllRequest;
import com.apideck.unify.models.operations.FileStorageSharedLinksAllRequestBuilder;
import com.apideck.unify.models.operations.FileStorageSharedLinksAllResponse;
import com.apideck.unify.models.operations.FileStorageSharedLinksDeleteRequest;
import com.apideck.unify.models.operations.FileStorageSharedLinksDeleteRequestBuilder;
import com.apideck.unify.models.operations.FileStorageSharedLinksDeleteResponse;
import com.apideck.unify.models.operations.FileStorageSharedLinksOneRequest;
import com.apideck.unify.models.operations.FileStorageSharedLinksOneRequestBuilder;
import com.apideck.unify.models.operations.FileStorageSharedLinksOneResponse;
import com.apideck.unify.models.operations.FileStorageSharedLinksUpdateRequest;
import com.apideck.unify.models.operations.FileStorageSharedLinksUpdateRequestBuilder;
import com.apideck.unify.models.operations.FileStorageSharedLinksUpdateResponse;
import com.apideck.unify.operations.FileStorageSharedLinksAddOperation;
import com.apideck.unify.operations.FileStorageSharedLinksAllOperation;
import com.apideck.unify.operations.FileStorageSharedLinksDeleteOperation;
import com.apideck.unify.operations.FileStorageSharedLinksOneOperation;
import com.apideck.unify.operations.FileStorageSharedLinksUpdateOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class SharedLinks {
    private final SDKConfiguration sdkConfiguration;

    SharedLinks(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List SharedLinks
     * 
     * <p>List SharedLinks
     * 
     * @return The call builder
     */
    public FileStorageSharedLinksAllRequestBuilder list() {
        return new FileStorageSharedLinksAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List SharedLinks
     * 
     * <p>List SharedLinks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksAllResponse list(@Nonnull FileStorageSharedLinksAllRequest request) throws Exception {
        return list(request, null);
    }

    /**
     * List SharedLinks
     * 
     * <p>List SharedLinks
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksAllResponse list(
            @Nonnull FileStorageSharedLinksAllRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<FileStorageSharedLinksAllRequest, FileStorageSharedLinksAllResponse> operation
              = new FileStorageSharedLinksAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create Shared Link
     * 
     * <p>Create Shared Link
     * 
     * @return The call builder
     */
    public FileStorageSharedLinksAddRequestBuilder create() {
        return new FileStorageSharedLinksAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Shared Link
     * 
     * <p>Create Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksAddResponse create(@Nonnull FileStorageSharedLinksAddRequest request) throws Exception {
        return create(request, null);
    }

    /**
     * Create Shared Link
     * 
     * <p>Create Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksAddResponse create(
            @Nonnull FileStorageSharedLinksAddRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<FileStorageSharedLinksAddRequest, FileStorageSharedLinksAddResponse> operation
              = new FileStorageSharedLinksAddOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Shared Link
     * 
     * <p>Get Shared Link
     * 
     * @return The call builder
     */
    public FileStorageSharedLinksOneRequestBuilder get() {
        return new FileStorageSharedLinksOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Shared Link
     * 
     * <p>Get Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksOneResponse get(@Nonnull FileStorageSharedLinksOneRequest request) throws Exception {
        return get(request, null);
    }

    /**
     * Get Shared Link
     * 
     * <p>Get Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksOneResponse get(
            @Nonnull FileStorageSharedLinksOneRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<FileStorageSharedLinksOneRequest, FileStorageSharedLinksOneResponse> operation
              = new FileStorageSharedLinksOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update Shared Link
     * 
     * <p>Update Shared Link
     * 
     * @return The call builder
     */
    public FileStorageSharedLinksUpdateRequestBuilder update() {
        return new FileStorageSharedLinksUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Shared Link
     * 
     * <p>Update Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksUpdateResponse update(@Nonnull FileStorageSharedLinksUpdateRequest request) throws Exception {
        return update(request, null);
    }

    /**
     * Update Shared Link
     * 
     * <p>Update Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksUpdateResponse update(
            @Nonnull FileStorageSharedLinksUpdateRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<FileStorageSharedLinksUpdateRequest, FileStorageSharedLinksUpdateResponse> operation
              = new FileStorageSharedLinksUpdateOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete Shared Link
     * 
     * <p>Delete Shared Link
     * 
     * @return The call builder
     */
    public FileStorageSharedLinksDeleteRequestBuilder delete() {
        return new FileStorageSharedLinksDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Shared Link
     * 
     * <p>Delete Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksDeleteResponse delete(@Nonnull FileStorageSharedLinksDeleteRequest request) throws Exception {
        return delete(request, null);
    }

    /**
     * Delete Shared Link
     * 
     * <p>Delete Shared Link
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FileStorageSharedLinksDeleteResponse delete(
            @Nonnull FileStorageSharedLinksDeleteRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<FileStorageSharedLinksDeleteRequest, FileStorageSharedLinksDeleteResponse> operation
              = new FileStorageSharedLinksDeleteOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
