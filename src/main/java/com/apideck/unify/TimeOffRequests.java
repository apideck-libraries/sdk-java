/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.models.operations.HrisTimeOffRequestsAddRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsAddRequestBuilder;
import com.apideck.unify.models.operations.HrisTimeOffRequestsAddResponse;
import com.apideck.unify.models.operations.HrisTimeOffRequestsAllRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsAllRequestBuilder;
import com.apideck.unify.models.operations.HrisTimeOffRequestsAllResponse;
import com.apideck.unify.models.operations.HrisTimeOffRequestsDeleteRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsDeleteRequestBuilder;
import com.apideck.unify.models.operations.HrisTimeOffRequestsDeleteResponse;
import com.apideck.unify.models.operations.HrisTimeOffRequestsOneRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsOneRequestBuilder;
import com.apideck.unify.models.operations.HrisTimeOffRequestsOneResponse;
import com.apideck.unify.models.operations.HrisTimeOffRequestsUpdateRequest;
import com.apideck.unify.models.operations.HrisTimeOffRequestsUpdateRequestBuilder;
import com.apideck.unify.models.operations.HrisTimeOffRequestsUpdateResponse;
import com.apideck.unify.operations.HrisTimeOffRequestsAddOperation;
import com.apideck.unify.operations.HrisTimeOffRequestsAllOperation;
import com.apideck.unify.operations.HrisTimeOffRequestsDeleteOperation;
import com.apideck.unify.operations.HrisTimeOffRequestsOneOperation;
import com.apideck.unify.operations.HrisTimeOffRequestsUpdateOperation;
import com.apideck.unify.utils.Options;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class TimeOffRequests {
    private final SDKConfiguration sdkConfiguration;

    TimeOffRequests(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
    /**
     * List Time Off Requests
     * 
     * <p>List Time Off Requests
     * 
     * @return The call builder
     */
    public HrisTimeOffRequestsAllRequestBuilder list() {
        return new HrisTimeOffRequestsAllRequestBuilder(sdkConfiguration);
    }

    /**
     * List Time Off Requests
     * 
     * <p>List Time Off Requests
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsAllResponse list(@Nonnull HrisTimeOffRequestsAllRequest request) throws Exception {
        return list(request, null);
    }

    /**
     * List Time Off Requests
     * 
     * <p>List Time Off Requests
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsAllResponse list(
            @Nonnull HrisTimeOffRequestsAllRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<HrisTimeOffRequestsAllRequest, HrisTimeOffRequestsAllResponse> operation
              = new HrisTimeOffRequestsAllOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Create Time Off Request
     * 
     * <p>Create Time Off Request
     * 
     * @return The call builder
     */
    public HrisTimeOffRequestsAddRequestBuilder create() {
        return new HrisTimeOffRequestsAddRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Time Off Request
     * 
     * <p>Create Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsAddResponse create(@Nonnull HrisTimeOffRequestsAddRequest request) throws Exception {
        return create(request, null);
    }

    /**
     * Create Time Off Request
     * 
     * <p>Create Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsAddResponse create(
            @Nonnull HrisTimeOffRequestsAddRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<HrisTimeOffRequestsAddRequest, HrisTimeOffRequestsAddResponse> operation
              = new HrisTimeOffRequestsAddOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Get Time Off Request
     * 
     * <p>Get Time Off Request
     * 
     * @return The call builder
     */
    public HrisTimeOffRequestsOneRequestBuilder get() {
        return new HrisTimeOffRequestsOneRequestBuilder(sdkConfiguration);
    }

    /**
     * Get Time Off Request
     * 
     * <p>Get Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsOneResponse get(@Nonnull HrisTimeOffRequestsOneRequest request) throws Exception {
        return get(request, null);
    }

    /**
     * Get Time Off Request
     * 
     * <p>Get Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsOneResponse get(
            @Nonnull HrisTimeOffRequestsOneRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<HrisTimeOffRequestsOneRequest, HrisTimeOffRequestsOneResponse> operation
              = new HrisTimeOffRequestsOneOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Update Time Off Request
     * 
     * <p>Update Time Off Request
     * 
     * @return The call builder
     */
    public HrisTimeOffRequestsUpdateRequestBuilder update() {
        return new HrisTimeOffRequestsUpdateRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Time Off Request
     * 
     * <p>Update Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsUpdateResponse update(@Nonnull HrisTimeOffRequestsUpdateRequest request) throws Exception {
        return update(request, null);
    }

    /**
     * Update Time Off Request
     * 
     * <p>Update Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsUpdateResponse update(
            @Nonnull HrisTimeOffRequestsUpdateRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<HrisTimeOffRequestsUpdateRequest, HrisTimeOffRequestsUpdateResponse> operation
              = new HrisTimeOffRequestsUpdateOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

    /**
     * Delete Time Off Request
     * 
     * <p>Delete Time Off Request
     * 
     * @return The call builder
     */
    public HrisTimeOffRequestsDeleteRequestBuilder delete() {
        return new HrisTimeOffRequestsDeleteRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Time Off Request
     * 
     * <p>Delete Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsDeleteResponse delete(@Nonnull HrisTimeOffRequestsDeleteRequest request) throws Exception {
        return delete(request, null);
    }

    /**
     * Delete Time Off Request
     * 
     * <p>Delete Time Off Request
     * 
     * @param request The request object containing all the parameters for the API call.
     * @param options additional options
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public HrisTimeOffRequestsDeleteResponse delete(
            @Nonnull HrisTimeOffRequestsDeleteRequest request,
            @Nullable Options options) throws Exception {
        RequestOperation<HrisTimeOffRequestsDeleteRequest, HrisTimeOffRequestsDeleteResponse> operation
              = new HrisTimeOffRequestsDeleteOperation(
                sdkConfiguration,
                options);
        return operation.handleResponse(operation.doRequest(request));
    }

}
