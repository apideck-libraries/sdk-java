/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class ApiResourceCoverage {
    /**
     * ID of the resource, typically a lowercased version of name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * Name of the resource (plural)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private String name;

    /**
     * Status of the resource. Resources with status live or beta are callable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private ResourceStatus status;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coverage")
    private List<Coverage> coverage;

    @JsonCreator
    public ApiResourceCoverage(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("name") @Nullable String name,
            @JsonProperty("status") @Nullable ResourceStatus status,
            @JsonProperty("coverage") @Nullable List<Coverage> coverage) {
        this.id = id;
        this.name = name;
        this.status = status;
        this.coverage = coverage;
    }
    
    public ApiResourceCoverage() {
        this(null, null, null,
            null);
    }

    /**
     * ID of the resource, typically a lowercased version of name.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the resource (plural)
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Status of the resource. Resources with status live or beta are callable.
     */
    public Optional<ResourceStatus> status() {
        return Optional.ofNullable(this.status);
    }

    public Optional<List<Coverage>> coverage() {
        return Optional.ofNullable(this.coverage);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * ID of the resource, typically a lowercased version of name.
     */
    public ApiResourceCoverage withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * Name of the resource (plural)
     */
    public ApiResourceCoverage withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    /**
     * Status of the resource. Resources with status live or beta are callable.
     */
    public ApiResourceCoverage withStatus(@Nullable ResourceStatus status) {
        this.status = status;
        return this;
    }


    public ApiResourceCoverage withCoverage(@Nullable List<Coverage> coverage) {
        this.coverage = coverage;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApiResourceCoverage other = (ApiResourceCoverage) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.coverage, other.coverage);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, name, status,
            coverage);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ApiResourceCoverage.class,
                "id", id,
                "name", name,
                "status", status,
                "coverage", coverage);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private String name;

        private ResourceStatus status;

        private List<Coverage> coverage;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the resource, typically a lowercased version of name.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * Name of the resource (plural)
         */
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        /**
         * Status of the resource. Resources with status live or beta are callable.
         */
        public Builder status(@Nullable ResourceStatus status) {
            this.status = status;
            return this;
        }

        public Builder coverage(@Nullable List<Coverage> coverage) {
            this.coverage = coverage;
            return this;
        }

        public ApiResourceCoverage build() {
            return new ApiResourceCoverage(
                id, name, status,
                coverage);
        }

    }
}
