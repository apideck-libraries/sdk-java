/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class ApplicantsFilter {
    /**
     * Id of the job to filter on
     */
    @SpeakeasyMetadata("queryParam:name=job_id")
    private String jobId;

    @JsonCreator
    public ApplicantsFilter(
            @Nullable String jobId) {
        this.jobId = jobId;
    }
    
    public ApplicantsFilter() {
        this(null);
    }

    /**
     * Id of the job to filter on
     */
    public Optional<String> jobId() {
        return Optional.ofNullable(this.jobId);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Id of the job to filter on
     */
    public ApplicantsFilter withJobId(@Nullable String jobId) {
        this.jobId = jobId;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ApplicantsFilter other = (ApplicantsFilter) o;
        return 
            Utils.enhancedDeepEquals(this.jobId, other.jobId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            jobId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ApplicantsFilter.class,
                "jobId", jobId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String jobId;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Id of the job to filter on
         */
        public Builder jobId(@Nullable String jobId) {
            this.jobId = jobId;
            return this;
        }

        public ApplicantsFilter build() {
            return new ApplicantsFilter(
                jobId);
        }

    }
}
