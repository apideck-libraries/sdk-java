/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.apideck.unify.models.components;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class BalanceSheet {

    @JsonProperty("reports")
    private List<Reports> reports;

    @JsonCreator
    public BalanceSheet(
            @JsonProperty("reports") List<Reports> reports) {
        Utils.checkNotNull(reports, "reports");
        this.reports = reports;
    }

    @JsonIgnore
    public List<Reports> reports() {
        return reports;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public BalanceSheet withReports(List<Reports> reports) {
        Utils.checkNotNull(reports, "reports");
        this.reports = reports;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BalanceSheet other = (BalanceSheet) o;
        return 
            Objects.deepEquals(this.reports, other.reports);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            reports);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BalanceSheet.class,
                "reports", reports);
    }
    
    public final static class Builder {
 
        private List<Reports> reports;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder reports(List<Reports> reports) {
            Utils.checkNotNull(reports, "reports");
            this.reports = reports;
            return this;
        }
        
        public BalanceSheet build() {
            return new BalanceSheet(
                reports);
        }
    }
}

