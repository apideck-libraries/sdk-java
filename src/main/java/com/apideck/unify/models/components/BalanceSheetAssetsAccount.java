/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Double;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * BalanceSheetAssetsAccount
 * 
 * <p>A balance sheet assets account represents the financial position of a company at a specific point in time.
 */
public class BalanceSheetAssetsAccount {
    /**
     * The unique identifier for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    private String accountId;

    /**
     * The account code of the account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private String code;

    /**
     * The name of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private String name;

    /**
     * The amount or value of the item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    private Double value;

    /**
     * A list of balance sheet accounts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    private Object items;

    @JsonCreator
    public BalanceSheetAssetsAccount(
            @JsonProperty("account_id") @Nullable String accountId,
            @JsonProperty("code") @Nullable String code,
            @JsonProperty("name") @Nullable String name,
            @JsonProperty("value") @Nullable Double value,
            @JsonProperty("items") @Nullable Object items) {
        this.accountId = accountId;
        this.code = code;
        this.name = name;
        this.value = value;
        this.items = items;
    }
    
    public BalanceSheetAssetsAccount() {
        this(null, null, null,
            null, null);
    }

    /**
     * The unique identifier for the account.
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The account code of the account
     */
    public Optional<String> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * The name of the account.
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The amount or value of the item
     */
    public Optional<Double> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * A list of balance sheet accounts
     */
    public Optional<Object> items() {
        return Optional.ofNullable(this.items);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique identifier for the account.
     */
    public BalanceSheetAssetsAccount withAccountId(@Nullable String accountId) {
        this.accountId = accountId;
        return this;
    }


    /**
     * The account code of the account
     */
    public BalanceSheetAssetsAccount withCode(@Nullable String code) {
        this.code = code;
        return this;
    }


    /**
     * The name of the account.
     */
    public BalanceSheetAssetsAccount withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    /**
     * The amount or value of the item
     */
    public BalanceSheetAssetsAccount withValue(@Nullable Double value) {
        this.value = value;
        return this;
    }


    /**
     * A list of balance sheet accounts
     */
    public BalanceSheetAssetsAccount withItems(@Nullable Object items) {
        this.items = items;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BalanceSheetAssetsAccount other = (BalanceSheetAssetsAccount) o;
        return 
            Utils.enhancedDeepEquals(this.accountId, other.accountId) &&
            Utils.enhancedDeepEquals(this.code, other.code) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.value, other.value) &&
            Utils.enhancedDeepEquals(this.items, other.items);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accountId, code, name,
            value, items);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BalanceSheetAssetsAccount.class,
                "accountId", accountId,
                "code", code,
                "name", name,
                "value", value,
                "items", items);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String accountId;

        private String code;

        private String name;

        private Double value;

        private Object items;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique identifier for the account.
         */
        public Builder accountId(@Nullable String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * The account code of the account
         */
        public Builder code(@Nullable String code) {
            this.code = code;
            return this;
        }

        /**
         * The name of the account.
         */
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        /**
         * The amount or value of the item
         */
        public Builder value(@Nullable Double value) {
            this.value = value;
            return this;
        }

        /**
         * A list of balance sheet accounts
         */
        public Builder items(@Nullable Object items) {
            this.items = items;
            return this;
        }

        public BalanceSheetAssetsAccount build() {
            return new BalanceSheetAssetsAccount(
                accountId, code, name,
                value, items);
        }

    }
}
