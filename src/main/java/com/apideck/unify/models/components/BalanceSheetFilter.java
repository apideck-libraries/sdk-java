/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Deprecated;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class BalanceSheetFilter {
    /**
     * The start date of the period to include in the resource.
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata("queryParam:name=start_date")
    @Deprecated
    private String startDate;

    /**
     * The end date of the period to include in the resource.
     */
    @SpeakeasyMetadata("queryParam:name=end_date")
    private String endDate;

    /**
     * The number of periods to include in the resource.
     */
    @SpeakeasyMetadata("queryParam:name=period_count")
    private Long periodCount;

    /**
     * The type of period to include in the resource: month, quarter, year.
     */
    @SpeakeasyMetadata("queryParam:name=period_type")
    private PeriodType periodType;

    /**
     * The ID of the location to include in the resource.
     */
    @SpeakeasyMetadata("queryParam:name=location_id")
    private String locationId;

    @JsonCreator
    public BalanceSheetFilter(
            @Nullable String startDate,
            @Nullable String endDate,
            @Nullable Long periodCount,
            @Nullable PeriodType periodType,
            @Nullable String locationId) {
        this.startDate = startDate;
        this.endDate = endDate;
        this.periodCount = periodCount;
        this.periodType = periodType;
        this.locationId = locationId;
    }
    
    public BalanceSheetFilter() {
        this(null, null, null,
            null, null);
    }

    /**
     * The start date of the period to include in the resource.
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public Optional<String> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * The end date of the period to include in the resource.
     */
    public Optional<String> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * The number of periods to include in the resource.
     */
    public Optional<Long> periodCount() {
        return Optional.ofNullable(this.periodCount);
    }

    /**
     * The type of period to include in the resource: month, quarter, year.
     */
    public Optional<PeriodType> periodType() {
        return Optional.ofNullable(this.periodType);
    }

    /**
     * The ID of the location to include in the resource.
     */
    public Optional<String> locationId() {
        return Optional.ofNullable(this.locationId);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The start date of the period to include in the resource.
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public BalanceSheetFilter withStartDate(@Nullable String startDate) {
        this.startDate = startDate;
        return this;
    }


    /**
     * The end date of the period to include in the resource.
     */
    public BalanceSheetFilter withEndDate(@Nullable String endDate) {
        this.endDate = endDate;
        return this;
    }


    /**
     * The number of periods to include in the resource.
     */
    public BalanceSheetFilter withPeriodCount(@Nullable Long periodCount) {
        this.periodCount = periodCount;
        return this;
    }


    /**
     * The type of period to include in the resource: month, quarter, year.
     */
    public BalanceSheetFilter withPeriodType(@Nullable PeriodType periodType) {
        this.periodType = periodType;
        return this;
    }


    /**
     * The ID of the location to include in the resource.
     */
    public BalanceSheetFilter withLocationId(@Nullable String locationId) {
        this.locationId = locationId;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BalanceSheetFilter other = (BalanceSheetFilter) o;
        return 
            Utils.enhancedDeepEquals(this.startDate, other.startDate) &&
            Utils.enhancedDeepEquals(this.endDate, other.endDate) &&
            Utils.enhancedDeepEquals(this.periodCount, other.periodCount) &&
            Utils.enhancedDeepEquals(this.periodType, other.periodType) &&
            Utils.enhancedDeepEquals(this.locationId, other.locationId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            startDate, endDate, periodCount,
            periodType, locationId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BalanceSheetFilter.class,
                "startDate", startDate,
                "endDate", endDate,
                "periodCount", periodCount,
                "periodType", periodType,
                "locationId", locationId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        @Deprecated
        private String startDate;

        private String endDate;

        private Long periodCount;

        private PeriodType periodType;

        private String locationId;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The start date of the period to include in the resource.
         * 
         * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
         */
        @Deprecated
        public Builder startDate(@Nullable String startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * The end date of the period to include in the resource.
         */
        public Builder endDate(@Nullable String endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * The number of periods to include in the resource.
         */
        public Builder periodCount(@Nullable Long periodCount) {
            this.periodCount = periodCount;
            return this;
        }

        /**
         * The type of period to include in the resource: month, quarter, year.
         */
        public Builder periodType(@Nullable PeriodType periodType) {
            this.periodType = periodType;
            return this;
        }

        /**
         * The ID of the location to include in the resource.
         */
        public Builder locationId(@Nullable String locationId) {
            this.locationId = locationId;
            return this;
        }

        public BalanceSheetFilter build() {
            return new BalanceSheetFilter(
                startDate, endDate, periodCount,
                periodType, locationId);
        }

    }
}
