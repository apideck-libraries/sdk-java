/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Optional;


public class BankAccountsFilter {
    /**
     * Filter by bank account name
     */
    @SpeakeasyMetadata("queryParam:name=name")
    private Optional<String> name;

    /**
     * Filter by account status
     */
    @SpeakeasyMetadata("queryParam:name=status")
    private Optional<? extends BankAccountsFilterStatus> status;

    @JsonCreator
    public BankAccountsFilter(
            Optional<String> name,
            Optional<? extends BankAccountsFilterStatus> status) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(status, "status");
        this.name = name;
        this.status = status;
    }
    
    public BankAccountsFilter() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * Filter by bank account name
     */
    @JsonIgnore
    public Optional<String> name() {
        return name;
    }

    /**
     * Filter by account status
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<BankAccountsFilterStatus> status() {
        return (Optional<BankAccountsFilterStatus>) status;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Filter by bank account name
     */
    public BankAccountsFilter withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = Optional.ofNullable(name);
        return this;
    }


    /**
     * Filter by bank account name
     */
    public BankAccountsFilter withName(Optional<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Filter by account status
     */
    public BankAccountsFilter withStatus(BankAccountsFilterStatus status) {
        Utils.checkNotNull(status, "status");
        this.status = Optional.ofNullable(status);
        return this;
    }


    /**
     * Filter by account status
     */
    public BankAccountsFilter withStatus(Optional<? extends BankAccountsFilterStatus> status) {
        Utils.checkNotNull(status, "status");
        this.status = status;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        BankAccountsFilter other = (BankAccountsFilter) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.status, other.status);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name, status);
    }
    
    @Override
    public String toString() {
        return Utils.toString(BankAccountsFilter.class,
                "name", name,
                "status", status);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<String> name = Optional.empty();

        private Optional<? extends BankAccountsFilterStatus> status = Optional.empty();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Filter by bank account name
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * Filter by bank account name
         */
        public Builder name(Optional<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }


        /**
         * Filter by account status
         */
        public Builder status(BankAccountsFilterStatus status) {
            Utils.checkNotNull(status, "status");
            this.status = Optional.ofNullable(status);
            return this;
        }

        /**
         * Filter by account status
         */
        public Builder status(Optional<? extends BankAccountsFilterStatus> status) {
            Utils.checkNotNull(status, "status");
            this.status = status;
            return this;
        }

        public BankAccountsFilter build() {

            return new BankAccountsFilter(
                name, status);
        }

    }
}
