/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class CollectionTicketComment {
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * Body of the comment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    private JsonNullable<String> body;

    /**
     * When custom mappings are configured on the resource, the result is included here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_mappings")
    private JsonNullable<Map<String, Object>> customMappings;

    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    private JsonNullable<String> createdBy;

    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    private JsonNullable<OffsetDateTime> updatedAt;

    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    private JsonNullable<OffsetDateTime> createdAt;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    @JsonCreator
    public CollectionTicketComment(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("body") @Nullable JsonNullable<String> body,
            @JsonProperty("custom_mappings") @Nullable JsonNullable<Map<String, Object>> customMappings,
            @JsonProperty("created_by") @Nullable JsonNullable<String> createdBy,
            @JsonProperty("updated_at") @Nullable JsonNullable<OffsetDateTime> updatedAt,
            @JsonProperty("created_at") @Nullable JsonNullable<OffsetDateTime> createdAt,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough) {
        this.id = id;
        this.body = Optional.ofNullable(body)
            .orElse(JsonNullable.undefined());
        this.customMappings = Optional.ofNullable(customMappings)
            .orElse(JsonNullable.undefined());
        this.createdBy = Optional.ofNullable(createdBy)
            .orElse(JsonNullable.undefined());
        this.updatedAt = Optional.ofNullable(updatedAt)
            .orElse(JsonNullable.undefined());
        this.createdAt = Optional.ofNullable(createdAt)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
    }
    
    public CollectionTicketComment() {
        this(null, null, null,
            null, null, null,
            null);
    }

    /**
     * A unique identifier for an object.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Body of the comment
     */
    public JsonNullable<String> body() {
        return this.body;
    }

    /**
     * When custom mappings are configured on the resource, the result is included here.
     */
    public JsonNullable<Map<String, Object>> customMappings() {
        return this.customMappings;
    }

    /**
     * The user who created the object.
     */
    public JsonNullable<String> createdBy() {
        return this.createdBy;
    }

    /**
     * The date and time when the object was last updated.
     */
    public JsonNullable<OffsetDateTime> updatedAt() {
        return this.updatedAt;
    }

    /**
     * The date and time when the object was created.
     */
    public JsonNullable<OffsetDateTime> createdAt() {
        return this.createdAt;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A unique identifier for an object.
     */
    public CollectionTicketComment withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * Body of the comment
     */
    public CollectionTicketComment withBody(@Nullable String body) {
        this.body = JsonNullable.of(body);
        return this;
    }


    /**
     * When custom mappings are configured on the resource, the result is included here.
     */
    public CollectionTicketComment withCustomMappings(@Nullable Map<String, Object> customMappings) {
        this.customMappings = JsonNullable.of(customMappings);
        return this;
    }


    /**
     * The user who created the object.
     */
    public CollectionTicketComment withCreatedBy(@Nullable String createdBy) {
        this.createdBy = JsonNullable.of(createdBy);
        return this;
    }


    /**
     * The date and time when the object was last updated.
     */
    public CollectionTicketComment withUpdatedAt(@Nullable OffsetDateTime updatedAt) {
        this.updatedAt = JsonNullable.of(updatedAt);
        return this;
    }


    /**
     * The date and time when the object was created.
     */
    public CollectionTicketComment withCreatedAt(@Nullable OffsetDateTime createdAt) {
        this.createdAt = JsonNullable.of(createdAt);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public CollectionTicketComment withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CollectionTicketComment other = (CollectionTicketComment) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.body, other.body) &&
            Utils.enhancedDeepEquals(this.customMappings, other.customMappings) &&
            Utils.enhancedDeepEquals(this.createdBy, other.createdBy) &&
            Utils.enhancedDeepEquals(this.updatedAt, other.updatedAt) &&
            Utils.enhancedDeepEquals(this.createdAt, other.createdAt) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, body, customMappings,
            createdBy, updatedAt, createdAt,
            passThrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CollectionTicketComment.class,
                "id", id,
                "body", body,
                "customMappings", customMappings,
                "createdBy", createdBy,
                "updatedAt", updatedAt,
                "createdAt", createdAt,
                "passThrough", passThrough);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private JsonNullable<String> body;

        private JsonNullable<Map<String, Object>> customMappings;

        private JsonNullable<String> createdBy;

        private JsonNullable<OffsetDateTime> updatedAt;

        private JsonNullable<OffsetDateTime> createdAt;

        private List<PassThroughBody> passThrough;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * A unique identifier for an object.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * Body of the comment
         */
        public Builder body(@Nullable String body) {
            this.body = JsonNullable.of(body);
            return this;
        }

        /**
         * When custom mappings are configured on the resource, the result is included here.
         */
        public Builder customMappings(@Nullable Map<String, Object> customMappings) {
            this.customMappings = JsonNullable.of(customMappings);
            return this;
        }

        /**
         * The user who created the object.
         */
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = JsonNullable.of(createdBy);
            return this;
        }

        /**
         * The date and time when the object was last updated.
         */
        public Builder updatedAt(@Nullable OffsetDateTime updatedAt) {
            this.updatedAt = JsonNullable.of(updatedAt);
            return this;
        }

        /**
         * The date and time when the object was created.
         */
        public Builder createdAt(@Nullable OffsetDateTime createdAt) {
            this.createdAt = JsonNullable.of(createdAt);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        public CollectionTicketComment build() {
            return new CollectionTicketComment(
                id, body, customMappings,
                createdBy, updatedAt, createdAt,
                passThrough);
        }

    }
}
