/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class CollectionTicketCommentInput {
    /**
     * Body of the comment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    private JsonNullable<String> body;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    @JsonCreator
    public CollectionTicketCommentInput(
            @JsonProperty("body") @Nullable JsonNullable<String> body,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough) {
        this.body = Optional.ofNullable(body)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
    }
    
    public CollectionTicketCommentInput() {
        this(null, null);
    }

    /**
     * Body of the comment
     */
    public JsonNullable<String> body() {
        return this.body;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Body of the comment
     */
    public CollectionTicketCommentInput withBody(@Nullable String body) {
        this.body = JsonNullable.of(body);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public CollectionTicketCommentInput withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CollectionTicketCommentInput other = (CollectionTicketCommentInput) o;
        return 
            Utils.enhancedDeepEquals(this.body, other.body) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            body, passThrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CollectionTicketCommentInput.class,
                "body", body,
                "passThrough", passThrough);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> body;

        private List<PassThroughBody> passThrough;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Body of the comment
         */
        public Builder body(@Nullable String body) {
            this.body = JsonNullable.of(body);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        public CollectionTicketCommentInput build() {
            return new CollectionTicketCommentInput(
                body, passThrough);
        }

    }
}
