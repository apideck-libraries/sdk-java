/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class CompaniesFilter {
    /**
     * Name of the company to filter on
     */
    @SpeakeasyMetadata("queryParam:name=name")
    private String name;

    @JsonCreator
    public CompaniesFilter(
            @Nullable String name) {
        this.name = name;
    }
    
    public CompaniesFilter() {
        this(null);
    }

    /**
     * Name of the company to filter on
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Name of the company to filter on
     */
    public CompaniesFilter withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CompaniesFilter other = (CompaniesFilter) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CompaniesFilter.class,
                "name", name);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String name;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Name of the company to filter on
         */
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        public CompaniesFilter build() {
            return new CompaniesFilter(
                name);
        }

    }
}
