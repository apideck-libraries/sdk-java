/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class ConnectionImportData {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentials")
    private Credentials credentials;

    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    private JsonNullable<Map<String, Object>> settings;

    /**
     * Attach your own consumer specific metadata
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private JsonNullable<Map<String, Object>> metadata;

    @JsonCreator
    public ConnectionImportData(
            @JsonProperty("credentials") @Nullable Credentials credentials,
            @JsonProperty("settings") @Nullable JsonNullable<Map<String, Object>> settings,
            @JsonProperty("metadata") @Nullable JsonNullable<Map<String, Object>> metadata) {
        this.credentials = credentials;
        this.settings = Optional.ofNullable(settings)
            .orElse(JsonNullable.undefined());
        this.metadata = Optional.ofNullable(metadata)
            .orElse(JsonNullable.undefined());
    }
    
    public ConnectionImportData() {
        this(null, null, null);
    }

    public Optional<Credentials> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     */
    public JsonNullable<Map<String, Object>> settings() {
        return this.settings;
    }

    /**
     * Attach your own consumer specific metadata
     */
    public JsonNullable<Map<String, Object>> metadata() {
        return this.metadata;
    }

    public static Builder builder() {
        return new Builder();
    }


    public ConnectionImportData withCredentials(@Nullable Credentials credentials) {
        this.credentials = credentials;
        return this;
    }


    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     */
    public ConnectionImportData withSettings(@Nullable Map<String, Object> settings) {
        this.settings = JsonNullable.of(settings);
        return this;
    }


    /**
     * Attach your own consumer specific metadata
     */
    public ConnectionImportData withMetadata(@Nullable Map<String, Object> metadata) {
        this.metadata = JsonNullable.of(metadata);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConnectionImportData other = (ConnectionImportData) o;
        return 
            Utils.enhancedDeepEquals(this.credentials, other.credentials) &&
            Utils.enhancedDeepEquals(this.settings, other.settings) &&
            Utils.enhancedDeepEquals(this.metadata, other.metadata);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            credentials, settings, metadata);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ConnectionImportData.class,
                "credentials", credentials,
                "settings", settings,
                "metadata", metadata);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Credentials credentials;

        private JsonNullable<Map<String, Object>> settings;

        private JsonNullable<Map<String, Object>> metadata;

        private Builder() {
          // force use of static builder() method
        }

        public Builder credentials(@Nullable Credentials credentials) {
            this.credentials = credentials;
            return this;
        }

        /**
         * Connection settings. Values will persist to `form_fields` with corresponding id
         */
        public Builder settings(@Nullable Map<String, Object> settings) {
            this.settings = JsonNullable.of(settings);
            return this;
        }

        /**
         * Attach your own consumer specific metadata
         */
        public Builder metadata(@Nullable Map<String, Object> metadata) {
            this.metadata = JsonNullable.of(metadata);
            return this;
        }

        public ConnectionImportData build() {
            return new ConnectionImportData(
                credentials, settings, metadata);
        }

    }
}
