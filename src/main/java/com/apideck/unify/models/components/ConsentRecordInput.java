/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;


public class ConsentRecordInput {
    /**
     * Whether consent was granted (true) or denied/revoked (false)
     */
    @JsonProperty("granted")
    private boolean granted;

    /**
     * Data scopes resource configuration that can be either detailed field permissions or a wildcard
     */
    @JsonProperty("resources")
    private DataScopesResources resources;

    @JsonCreator
    public ConsentRecordInput(
            @JsonProperty("granted") boolean granted,
            @JsonProperty("resources") DataScopesResources resources) {
        Utils.checkNotNull(granted, "granted");
        Utils.checkNotNull(resources, "resources");
        this.granted = granted;
        this.resources = resources;
    }

    /**
     * Whether consent was granted (true) or denied/revoked (false)
     */
    @JsonIgnore
    public boolean granted() {
        return granted;
    }

    /**
     * Data scopes resource configuration that can be either detailed field permissions or a wildcard
     */
    @JsonIgnore
    public DataScopesResources resources() {
        return resources;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Whether consent was granted (true) or denied/revoked (false)
     */
    public ConsentRecordInput withGranted(boolean granted) {
        Utils.checkNotNull(granted, "granted");
        this.granted = granted;
        return this;
    }

    /**
     * Data scopes resource configuration that can be either detailed field permissions or a wildcard
     */
    public ConsentRecordInput withResources(DataScopesResources resources) {
        Utils.checkNotNull(resources, "resources");
        this.resources = resources;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConsentRecordInput other = (ConsentRecordInput) o;
        return 
            Utils.enhancedDeepEquals(this.granted, other.granted) &&
            Utils.enhancedDeepEquals(this.resources, other.resources);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            granted, resources);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ConsentRecordInput.class,
                "granted", granted,
                "resources", resources);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Boolean granted;

        private DataScopesResources resources;

        private Builder() {
          // force use of static builder() method
        }


        /**
         * Whether consent was granted (true) or denied/revoked (false)
         */
        public Builder granted(boolean granted) {
            Utils.checkNotNull(granted, "granted");
            this.granted = granted;
            return this;
        }


        /**
         * Data scopes resource configuration that can be either detailed field permissions or a wildcard
         */
        public Builder resources(DataScopesResources resources) {
            Utils.checkNotNull(resources, "resources");
            this.resources = resources;
            return this;
        }

        public ConsentRecordInput build() {

            return new ConsentRecordInput(
                granted, resources);
        }

    }
}
