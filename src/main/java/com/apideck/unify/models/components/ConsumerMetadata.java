/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * ConsumerMetadata
 * 
 * <p>The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.
 */
public class ConsumerMetadata {
    /**
     * The name of the account as shown in the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_name")
    private String accountName;

    /**
     * The name of the user as shown in the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_name")
    private String userName;

    /**
     * The email of the user as shown in the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private String email;

    /**
     * The avatar of the user in the sidebar. Must be a valid URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    private String image;

    @JsonCreator
    public ConsumerMetadata(
            @JsonProperty("account_name") @Nullable String accountName,
            @JsonProperty("user_name") @Nullable String userName,
            @JsonProperty("email") @Nullable String email,
            @JsonProperty("image") @Nullable String image) {
        this.accountName = accountName;
        this.userName = userName;
        this.email = email;
        this.image = image;
    }
    
    public ConsumerMetadata() {
        this(null, null, null,
            null);
    }

    /**
     * The name of the account as shown in the sidebar.
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The name of the user as shown in the sidebar.
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    /**
     * The email of the user as shown in the sidebar.
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * The avatar of the user in the sidebar. Must be a valid URL
     */
    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The name of the account as shown in the sidebar.
     */
    public ConsumerMetadata withAccountName(@Nullable String accountName) {
        this.accountName = accountName;
        return this;
    }


    /**
     * The name of the user as shown in the sidebar.
     */
    public ConsumerMetadata withUserName(@Nullable String userName) {
        this.userName = userName;
        return this;
    }


    /**
     * The email of the user as shown in the sidebar.
     */
    public ConsumerMetadata withEmail(@Nullable String email) {
        this.email = email;
        return this;
    }


    /**
     * The avatar of the user in the sidebar. Must be a valid URL
     */
    public ConsumerMetadata withImage(@Nullable String image) {
        this.image = image;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConsumerMetadata other = (ConsumerMetadata) o;
        return 
            Utils.enhancedDeepEquals(this.accountName, other.accountName) &&
            Utils.enhancedDeepEquals(this.userName, other.userName) &&
            Utils.enhancedDeepEquals(this.email, other.email) &&
            Utils.enhancedDeepEquals(this.image, other.image);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            accountName, userName, email,
            image);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ConsumerMetadata.class,
                "accountName", accountName,
                "userName", userName,
                "email", email,
                "image", image);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String accountName;

        private String userName;

        private String email;

        private String image;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The name of the account as shown in the sidebar.
         */
        public Builder accountName(@Nullable String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * The name of the user as shown in the sidebar.
         */
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }

        /**
         * The email of the user as shown in the sidebar.
         */
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }

        /**
         * The avatar of the user in the sidebar. Must be a valid URL
         */
        public Builder image(@Nullable String image) {
            this.image = image;
            return this;
        }

        public ConsumerMetadata build() {
            return new ConsumerMetadata(
                accountName, userName, email,
                image);
        }

    }
}
