/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class ConsumerRequestCountsInDateRangeResponseData {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("application_id")
    private String applicationId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumer_id")
    private String consumerId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_datetime")
    private String startDatetime;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_datetime")
    private String endDatetime;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregated_request_count")
    private Double aggregatedRequestCount;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request_counts")
    private RequestCountAllocation requestCounts;

    @JsonCreator
    public ConsumerRequestCountsInDateRangeResponseData(
            @JsonProperty("application_id") @Nullable String applicationId,
            @JsonProperty("consumer_id") @Nullable String consumerId,
            @JsonProperty("start_datetime") @Nullable String startDatetime,
            @JsonProperty("end_datetime") @Nullable String endDatetime,
            @JsonProperty("aggregated_request_count") @Nullable Double aggregatedRequestCount,
            @JsonProperty("request_counts") @Nullable RequestCountAllocation requestCounts) {
        this.applicationId = applicationId;
        this.consumerId = consumerId;
        this.startDatetime = startDatetime;
        this.endDatetime = endDatetime;
        this.aggregatedRequestCount = aggregatedRequestCount;
        this.requestCounts = requestCounts;
    }
    
    public ConsumerRequestCountsInDateRangeResponseData() {
        this(null, null, null,
            null, null, null);
    }

    public Optional<String> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    public Optional<String> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    public Optional<String> startDatetime() {
        return Optional.ofNullable(this.startDatetime);
    }

    public Optional<String> endDatetime() {
        return Optional.ofNullable(this.endDatetime);
    }

    public Optional<Double> aggregatedRequestCount() {
        return Optional.ofNullable(this.aggregatedRequestCount);
    }

    public Optional<RequestCountAllocation> requestCounts() {
        return Optional.ofNullable(this.requestCounts);
    }

    public static Builder builder() {
        return new Builder();
    }


    public ConsumerRequestCountsInDateRangeResponseData withApplicationId(@Nullable String applicationId) {
        this.applicationId = applicationId;
        return this;
    }


    public ConsumerRequestCountsInDateRangeResponseData withConsumerId(@Nullable String consumerId) {
        this.consumerId = consumerId;
        return this;
    }


    public ConsumerRequestCountsInDateRangeResponseData withStartDatetime(@Nullable String startDatetime) {
        this.startDatetime = startDatetime;
        return this;
    }


    public ConsumerRequestCountsInDateRangeResponseData withEndDatetime(@Nullable String endDatetime) {
        this.endDatetime = endDatetime;
        return this;
    }


    public ConsumerRequestCountsInDateRangeResponseData withAggregatedRequestCount(@Nullable Double aggregatedRequestCount) {
        this.aggregatedRequestCount = aggregatedRequestCount;
        return this;
    }


    public ConsumerRequestCountsInDateRangeResponseData withRequestCounts(@Nullable RequestCountAllocation requestCounts) {
        this.requestCounts = requestCounts;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ConsumerRequestCountsInDateRangeResponseData other = (ConsumerRequestCountsInDateRangeResponseData) o;
        return 
            Utils.enhancedDeepEquals(this.applicationId, other.applicationId) &&
            Utils.enhancedDeepEquals(this.consumerId, other.consumerId) &&
            Utils.enhancedDeepEquals(this.startDatetime, other.startDatetime) &&
            Utils.enhancedDeepEquals(this.endDatetime, other.endDatetime) &&
            Utils.enhancedDeepEquals(this.aggregatedRequestCount, other.aggregatedRequestCount) &&
            Utils.enhancedDeepEquals(this.requestCounts, other.requestCounts);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            applicationId, consumerId, startDatetime,
            endDatetime, aggregatedRequestCount, requestCounts);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ConsumerRequestCountsInDateRangeResponseData.class,
                "applicationId", applicationId,
                "consumerId", consumerId,
                "startDatetime", startDatetime,
                "endDatetime", endDatetime,
                "aggregatedRequestCount", aggregatedRequestCount,
                "requestCounts", requestCounts);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String applicationId;

        private String consumerId;

        private String startDatetime;

        private String endDatetime;

        private Double aggregatedRequestCount;

        private RequestCountAllocation requestCounts;

        private Builder() {
          // force use of static builder() method
        }

        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        public Builder consumerId(@Nullable String consumerId) {
            this.consumerId = consumerId;
            return this;
        }

        public Builder startDatetime(@Nullable String startDatetime) {
            this.startDatetime = startDatetime;
            return this;
        }

        public Builder endDatetime(@Nullable String endDatetime) {
            this.endDatetime = endDatetime;
            return this;
        }

        public Builder aggregatedRequestCount(@Nullable Double aggregatedRequestCount) {
            this.aggregatedRequestCount = aggregatedRequestCount;
            return this;
        }

        public Builder requestCounts(@Nullable RequestCountAllocation requestCounts) {
            this.requestCounts = requestCounts;
            return this;
        }

        public ConsumerRequestCountsInDateRangeResponseData build() {
            return new ConsumerRequestCountsInDateRangeResponseData(
                applicationId, consumerId, startDatetime,
                endDatetime, aggregatedRequestCount, requestCounts);
        }

    }
}
