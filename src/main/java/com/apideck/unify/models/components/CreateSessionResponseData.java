/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;


public class CreateSessionResponseData {

    @JsonProperty("session_uri")
    private String sessionUri;


    @JsonProperty("session_token")
    private String sessionToken;

    @JsonCreator
    public CreateSessionResponseData(
            @JsonProperty("session_uri") String sessionUri,
            @JsonProperty("session_token") String sessionToken) {
        Utils.checkNotNull(sessionUri, "sessionUri");
        Utils.checkNotNull(sessionToken, "sessionToken");
        this.sessionUri = sessionUri;
        this.sessionToken = sessionToken;
    }

    @JsonIgnore
    public String sessionUri() {
        return sessionUri;
    }

    @JsonIgnore
    public String sessionToken() {
        return sessionToken;
    }

    public static Builder builder() {
        return new Builder();
    }


    public CreateSessionResponseData withSessionUri(String sessionUri) {
        Utils.checkNotNull(sessionUri, "sessionUri");
        this.sessionUri = sessionUri;
        return this;
    }

    public CreateSessionResponseData withSessionToken(String sessionToken) {
        Utils.checkNotNull(sessionToken, "sessionToken");
        this.sessionToken = sessionToken;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateSessionResponseData other = (CreateSessionResponseData) o;
        return 
            Utils.enhancedDeepEquals(this.sessionUri, other.sessionUri) &&
            Utils.enhancedDeepEquals(this.sessionToken, other.sessionToken);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            sessionUri, sessionToken);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateSessionResponseData.class,
                "sessionUri", sessionUri,
                "sessionToken", sessionToken);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String sessionUri;

        private String sessionToken;

        private Builder() {
          // force use of static builder() method
        }


        public Builder sessionUri(String sessionUri) {
            Utils.checkNotNull(sessionUri, "sessionUri");
            this.sessionUri = sessionUri;
            return this;
        }


        public Builder sessionToken(String sessionToken) {
            Utils.checkNotNull(sessionToken, "sessionToken");
            this.sessionToken = sessionToken;
            return this;
        }

        public CreateSessionResponseData build() {

            return new CreateSessionResponseData(
                sessionUri, sessionToken);
        }

    }
}
