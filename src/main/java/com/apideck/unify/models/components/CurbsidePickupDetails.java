/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.apideck.unify.models.components;


import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.Optional;

/**
 * CurbsidePickupDetails - Specific details for curbside pickup.
 */

public class CurbsidePickupDetails {

    /**
     * Specific details for curbside pickup, such as parking number and vehicle model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("curbside_details")
    private Optional<String> curbsideDetails;

    /**
     * Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
     * (for example, "2016-09-04T23:59:33.123Z").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer_arrived_at")
    private Optional<OffsetDateTime> buyerArrivedAt;

    @JsonCreator
    public CurbsidePickupDetails(
            @JsonProperty("curbside_details") Optional<String> curbsideDetails,
            @JsonProperty("buyer_arrived_at") Optional<OffsetDateTime> buyerArrivedAt) {
        Utils.checkNotNull(curbsideDetails, "curbsideDetails");
        Utils.checkNotNull(buyerArrivedAt, "buyerArrivedAt");
        this.curbsideDetails = curbsideDetails;
        this.buyerArrivedAt = buyerArrivedAt;
    }
    
    public CurbsidePickupDetails() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * Specific details for curbside pickup, such as parking number and vehicle model.
     */
    @JsonIgnore
    public Optional<String> curbsideDetails() {
        return curbsideDetails;
    }

    /**
     * Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
     * (for example, "2016-09-04T23:59:33.123Z").
     */
    @JsonIgnore
    public Optional<OffsetDateTime> buyerArrivedAt() {
        return buyerArrivedAt;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Specific details for curbside pickup, such as parking number and vehicle model.
     */
    public CurbsidePickupDetails withCurbsideDetails(String curbsideDetails) {
        Utils.checkNotNull(curbsideDetails, "curbsideDetails");
        this.curbsideDetails = Optional.ofNullable(curbsideDetails);
        return this;
    }

    /**
     * Specific details for curbside pickup, such as parking number and vehicle model.
     */
    public CurbsidePickupDetails withCurbsideDetails(Optional<String> curbsideDetails) {
        Utils.checkNotNull(curbsideDetails, "curbsideDetails");
        this.curbsideDetails = curbsideDetails;
        return this;
    }

    /**
     * Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
     * (for example, "2016-09-04T23:59:33.123Z").
     */
    public CurbsidePickupDetails withBuyerArrivedAt(OffsetDateTime buyerArrivedAt) {
        Utils.checkNotNull(buyerArrivedAt, "buyerArrivedAt");
        this.buyerArrivedAt = Optional.ofNullable(buyerArrivedAt);
        return this;
    }

    /**
     * Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
     * (for example, "2016-09-04T23:59:33.123Z").
     */
    public CurbsidePickupDetails withBuyerArrivedAt(Optional<OffsetDateTime> buyerArrivedAt) {
        Utils.checkNotNull(buyerArrivedAt, "buyerArrivedAt");
        this.buyerArrivedAt = buyerArrivedAt;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CurbsidePickupDetails other = (CurbsidePickupDetails) o;
        return 
            Objects.deepEquals(this.curbsideDetails, other.curbsideDetails) &&
            Objects.deepEquals(this.buyerArrivedAt, other.buyerArrivedAt);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            curbsideDetails,
            buyerArrivedAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CurbsidePickupDetails.class,
                "curbsideDetails", curbsideDetails,
                "buyerArrivedAt", buyerArrivedAt);
    }
    
    public final static class Builder {
 
        private Optional<String> curbsideDetails = Optional.empty();
 
        private Optional<OffsetDateTime> buyerArrivedAt = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Specific details for curbside pickup, such as parking number and vehicle model.
         */
        public Builder curbsideDetails(String curbsideDetails) {
            Utils.checkNotNull(curbsideDetails, "curbsideDetails");
            this.curbsideDetails = Optional.ofNullable(curbsideDetails);
            return this;
        }

        /**
         * Specific details for curbside pickup, such as parking number and vehicle model.
         */
        public Builder curbsideDetails(Optional<String> curbsideDetails) {
            Utils.checkNotNull(curbsideDetails, "curbsideDetails");
            this.curbsideDetails = curbsideDetails;
            return this;
        }

        /**
         * Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
         * (for example, "2016-09-04T23:59:33.123Z").
         */
        public Builder buyerArrivedAt(OffsetDateTime buyerArrivedAt) {
            Utils.checkNotNull(buyerArrivedAt, "buyerArrivedAt");
            this.buyerArrivedAt = Optional.ofNullable(buyerArrivedAt);
            return this;
        }

        /**
         * Indicating when the buyer arrived and is waiting for pickup. The timestamp must be in RFC 3339 format
         * (for example, "2016-09-04T23:59:33.123Z").
         */
        public Builder buyerArrivedAt(Optional<OffsetDateTime> buyerArrivedAt) {
            Utils.checkNotNull(buyerArrivedAt, "buyerArrivedAt");
            this.buyerArrivedAt = buyerArrivedAt;
            return this;
        }
        
        public CurbsidePickupDetails build() {
            return new CurbsidePickupDetails(
                curbsideDetails,
                buyerArrivedAt);
        }
    }
}

