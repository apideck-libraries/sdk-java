/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class CustomMapping {
    /**
     * Target Field ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * Target Field name to use as a label
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    private String label;

    /**
     * Target Field description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * Target Field Mapping value
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    private String value;

    /**
     * Target Field Key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    private String key;

    /**
     * Target Field Mapping is required
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    private Boolean required;

    /**
     * This mapping represents a finder for a custom field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_field")
    private Boolean customField;

    /**
     * Consumer ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumer_id")
    private JsonNullable<String> consumerId;

    /**
     * Target Field Mapping example value from downstream
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("example")
    private JsonNullable<String> example;

    @JsonCreator
    public CustomMapping(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("label") @Nullable String label,
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("value") @Nullable String value,
            @JsonProperty("key") @Nullable String key,
            @JsonProperty("required") @Nullable Boolean required,
            @JsonProperty("custom_field") @Nullable Boolean customField,
            @JsonProperty("consumer_id") @Nullable JsonNullable<String> consumerId,
            @JsonProperty("example") @Nullable JsonNullable<String> example) {
        this.id = id;
        this.label = label;
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.value = value;
        this.key = key;
        this.required = required;
        this.customField = customField;
        this.consumerId = Optional.ofNullable(consumerId)
            .orElse(JsonNullable.undefined());
        this.example = Optional.ofNullable(example)
            .orElse(JsonNullable.undefined());
    }
    
    public CustomMapping() {
        this(null, null, null,
            null, null, null,
            null, null, null);
    }

    /**
     * Target Field ID
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Target Field name to use as a label
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Target Field description
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * Target Field Mapping value
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * Target Field Key
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Target Field Mapping is required
     */
    public Optional<Boolean> required() {
        return Optional.ofNullable(this.required);
    }

    /**
     * This mapping represents a finder for a custom field
     */
    public Optional<Boolean> customField() {
        return Optional.ofNullable(this.customField);
    }

    /**
     * Consumer ID
     */
    public JsonNullable<String> consumerId() {
        return this.consumerId;
    }

    /**
     * Target Field Mapping example value from downstream
     */
    public JsonNullable<String> example() {
        return this.example;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Target Field ID
     */
    public CustomMapping withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * Target Field name to use as a label
     */
    public CustomMapping withLabel(@Nullable String label) {
        this.label = label;
        return this;
    }


    /**
     * Target Field description
     */
    public CustomMapping withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * Target Field Mapping value
     */
    public CustomMapping withValue(@Nullable String value) {
        this.value = value;
        return this;
    }


    /**
     * Target Field Key
     */
    public CustomMapping withKey(@Nullable String key) {
        this.key = key;
        return this;
    }


    /**
     * Target Field Mapping is required
     */
    public CustomMapping withRequired(@Nullable Boolean required) {
        this.required = required;
        return this;
    }


    /**
     * This mapping represents a finder for a custom field
     */
    public CustomMapping withCustomField(@Nullable Boolean customField) {
        this.customField = customField;
        return this;
    }


    /**
     * Consumer ID
     */
    public CustomMapping withConsumerId(@Nullable String consumerId) {
        this.consumerId = JsonNullable.of(consumerId);
        return this;
    }


    /**
     * Target Field Mapping example value from downstream
     */
    public CustomMapping withExample(@Nullable String example) {
        this.example = JsonNullable.of(example);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomMapping other = (CustomMapping) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.label, other.label) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.value, other.value) &&
            Utils.enhancedDeepEquals(this.key, other.key) &&
            Utils.enhancedDeepEquals(this.required, other.required) &&
            Utils.enhancedDeepEquals(this.customField, other.customField) &&
            Utils.enhancedDeepEquals(this.consumerId, other.consumerId) &&
            Utils.enhancedDeepEquals(this.example, other.example);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, label, description,
            value, key, required,
            customField, consumerId, example);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CustomMapping.class,
                "id", id,
                "label", label,
                "description", description,
                "value", value,
                "key", key,
                "required", required,
                "customField", customField,
                "consumerId", consumerId,
                "example", example);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private String label;

        private JsonNullable<String> description;

        private String value;

        private String key;

        private Boolean required;

        private Boolean customField;

        private JsonNullable<String> consumerId;

        private JsonNullable<String> example;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Target Field ID
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * Target Field name to use as a label
         */
        public Builder label(@Nullable String label) {
            this.label = label;
            return this;
        }

        /**
         * Target Field description
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * Target Field Mapping value
         */
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }

        /**
         * Target Field Key
         */
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }

        /**
         * Target Field Mapping is required
         */
        public Builder required(@Nullable Boolean required) {
            this.required = required;
            return this;
        }

        /**
         * This mapping represents a finder for a custom field
         */
        public Builder customField(@Nullable Boolean customField) {
            this.customField = customField;
            return this;
        }

        /**
         * Consumer ID
         */
        public Builder consumerId(@Nullable String consumerId) {
            this.consumerId = JsonNullable.of(consumerId);
            return this;
        }

        /**
         * Target Field Mapping example value from downstream
         */
        public Builder example(@Nullable String example) {
            this.example = JsonNullable.of(example);
            return this;
        }

        public CustomMapping build() {
            return new CustomMapping(
                id, label, description,
                value, key, required,
                customField, consumerId, example);
        }

    }
}
