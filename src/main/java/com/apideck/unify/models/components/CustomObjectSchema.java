/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class CustomObjectSchema {
    /**
     * The unique identifier of the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * The name of the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;

    /**
     * The description of the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The fields defined in the schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    private List<Fields> fields;

    /**
     * Whether the custom object schema is visible in the UI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visible")
    private JsonNullable<Boolean> visible;

    /**
     * Whether the custom object schema is active
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    private JsonNullable<Boolean> active;

    /**
     * The ID of the user who created the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    private JsonNullable<String> createdBy;

    /**
     * The ID of the user who last updated the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    private JsonNullable<String> updatedBy;

    /**
     * The timestamp when the custom object schema was last updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    private JsonNullable<String> updatedAt;

    /**
     * The timestamp when the custom object schema was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    private JsonNullable<String> createdAt;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    @JsonCreator
    public CustomObjectSchema(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("name") @Nullable JsonNullable<String> name,
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("fields") @Nullable List<Fields> fields,
            @JsonProperty("visible") @Nullable JsonNullable<Boolean> visible,
            @JsonProperty("active") @Nullable JsonNullable<Boolean> active,
            @JsonProperty("created_by") @Nullable JsonNullable<String> createdBy,
            @JsonProperty("updated_by") @Nullable JsonNullable<String> updatedBy,
            @JsonProperty("updated_at") @Nullable JsonNullable<String> updatedAt,
            @JsonProperty("created_at") @Nullable JsonNullable<String> createdAt,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough) {
        this.id = id;
        this.name = Optional.ofNullable(name)
            .orElse(JsonNullable.undefined());
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.fields = fields;
        this.visible = Optional.ofNullable(visible)
            .orElse(JsonNullable.undefined());
        this.active = Optional.ofNullable(active)
            .orElse(JsonNullable.undefined());
        this.createdBy = Optional.ofNullable(createdBy)
            .orElse(JsonNullable.undefined());
        this.updatedBy = Optional.ofNullable(updatedBy)
            .orElse(JsonNullable.undefined());
        this.updatedAt = Optional.ofNullable(updatedAt)
            .orElse(JsonNullable.undefined());
        this.createdAt = Optional.ofNullable(createdAt)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
    }
    
    public CustomObjectSchema() {
        this(null, null, null,
            null, null, null,
            null, null, null,
            null, null);
    }

    /**
     * The unique identifier of the custom object schema
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the custom object schema
     */
    public JsonNullable<String> name() {
        return this.name;
    }

    /**
     * The description of the custom object schema
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * The fields defined in the schema
     */
    public Optional<List<Fields>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * Whether the custom object schema is visible in the UI
     */
    public JsonNullable<Boolean> visible() {
        return this.visible;
    }

    /**
     * Whether the custom object schema is active
     */
    public JsonNullable<Boolean> active() {
        return this.active;
    }

    /**
     * The ID of the user who created the custom object schema
     */
    public JsonNullable<String> createdBy() {
        return this.createdBy;
    }

    /**
     * The ID of the user who last updated the custom object schema
     */
    public JsonNullable<String> updatedBy() {
        return this.updatedBy;
    }

    /**
     * The timestamp when the custom object schema was last updated
     */
    public JsonNullable<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     * The timestamp when the custom object schema was created
     */
    public JsonNullable<String> createdAt() {
        return this.createdAt;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique identifier of the custom object schema
     */
    public CustomObjectSchema withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * The name of the custom object schema
     */
    public CustomObjectSchema withName(@Nullable String name) {
        this.name = JsonNullable.of(name);
        return this;
    }


    /**
     * The description of the custom object schema
     */
    public CustomObjectSchema withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * The fields defined in the schema
     */
    public CustomObjectSchema withFields(@Nullable List<Fields> fields) {
        this.fields = fields;
        return this;
    }


    /**
     * Whether the custom object schema is visible in the UI
     */
    public CustomObjectSchema withVisible(@Nullable Boolean visible) {
        this.visible = JsonNullable.of(visible);
        return this;
    }


    /**
     * Whether the custom object schema is active
     */
    public CustomObjectSchema withActive(@Nullable Boolean active) {
        this.active = JsonNullable.of(active);
        return this;
    }


    /**
     * The ID of the user who created the custom object schema
     */
    public CustomObjectSchema withCreatedBy(@Nullable String createdBy) {
        this.createdBy = JsonNullable.of(createdBy);
        return this;
    }


    /**
     * The ID of the user who last updated the custom object schema
     */
    public CustomObjectSchema withUpdatedBy(@Nullable String updatedBy) {
        this.updatedBy = JsonNullable.of(updatedBy);
        return this;
    }


    /**
     * The timestamp when the custom object schema was last updated
     */
    public CustomObjectSchema withUpdatedAt(@Nullable String updatedAt) {
        this.updatedAt = JsonNullable.of(updatedAt);
        return this;
    }


    /**
     * The timestamp when the custom object schema was created
     */
    public CustomObjectSchema withCreatedAt(@Nullable String createdAt) {
        this.createdAt = JsonNullable.of(createdAt);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public CustomObjectSchema withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomObjectSchema other = (CustomObjectSchema) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.fields, other.fields) &&
            Utils.enhancedDeepEquals(this.visible, other.visible) &&
            Utils.enhancedDeepEquals(this.active, other.active) &&
            Utils.enhancedDeepEquals(this.createdBy, other.createdBy) &&
            Utils.enhancedDeepEquals(this.updatedBy, other.updatedBy) &&
            Utils.enhancedDeepEquals(this.updatedAt, other.updatedAt) &&
            Utils.enhancedDeepEquals(this.createdAt, other.createdAt) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, name, description,
            fields, visible, active,
            createdBy, updatedBy, updatedAt,
            createdAt, passThrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CustomObjectSchema.class,
                "id", id,
                "name", name,
                "description", description,
                "fields", fields,
                "visible", visible,
                "active", active,
                "createdBy", createdBy,
                "updatedBy", updatedBy,
                "updatedAt", updatedAt,
                "createdAt", createdAt,
                "passThrough", passThrough);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private JsonNullable<String> name;

        private JsonNullable<String> description;

        private List<Fields> fields;

        private JsonNullable<Boolean> visible;

        private JsonNullable<Boolean> active;

        private JsonNullable<String> createdBy;

        private JsonNullable<String> updatedBy;

        private JsonNullable<String> updatedAt;

        private JsonNullable<String> createdAt;

        private List<PassThroughBody> passThrough;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique identifier of the custom object schema
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * The name of the custom object schema
         */
        public Builder name(@Nullable String name) {
            this.name = JsonNullable.of(name);
            return this;
        }

        /**
         * The description of the custom object schema
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The fields defined in the schema
         */
        public Builder fields(@Nullable List<Fields> fields) {
            this.fields = fields;
            return this;
        }

        /**
         * Whether the custom object schema is visible in the UI
         */
        public Builder visible(@Nullable Boolean visible) {
            this.visible = JsonNullable.of(visible);
            return this;
        }

        /**
         * Whether the custom object schema is active
         */
        public Builder active(@Nullable Boolean active) {
            this.active = JsonNullable.of(active);
            return this;
        }

        /**
         * The ID of the user who created the custom object schema
         */
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = JsonNullable.of(createdBy);
            return this;
        }

        /**
         * The ID of the user who last updated the custom object schema
         */
        public Builder updatedBy(@Nullable String updatedBy) {
            this.updatedBy = JsonNullable.of(updatedBy);
            return this;
        }

        /**
         * The timestamp when the custom object schema was last updated
         */
        public Builder updatedAt(@Nullable String updatedAt) {
            this.updatedAt = JsonNullable.of(updatedAt);
            return this;
        }

        /**
         * The timestamp when the custom object schema was created
         */
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = JsonNullable.of(createdAt);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        public CustomObjectSchema build() {
            return new CustomObjectSchema(
                id, name, description,
                fields, visible, active,
                createdBy, updatedBy, updatedAt,
                createdAt, passThrough);
        }

    }
}
