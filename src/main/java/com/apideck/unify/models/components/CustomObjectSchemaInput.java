/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class CustomObjectSchemaInput {
    /**
     * The name of the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;

    /**
     * The description of the custom object schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The fields defined in the schema
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    private List<Fields> fields;

    /**
     * Whether the custom object schema is visible in the UI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visible")
    private JsonNullable<Boolean> visible;

    /**
     * Whether the custom object schema is active
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    private JsonNullable<Boolean> active;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    @JsonCreator
    public CustomObjectSchemaInput(
            @JsonProperty("name") @Nullable JsonNullable<String> name,
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("fields") @Nullable List<Fields> fields,
            @JsonProperty("visible") @Nullable JsonNullable<Boolean> visible,
            @JsonProperty("active") @Nullable JsonNullable<Boolean> active,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough) {
        this.name = Optional.ofNullable(name)
            .orElse(JsonNullable.undefined());
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.fields = fields;
        this.visible = Optional.ofNullable(visible)
            .orElse(JsonNullable.undefined());
        this.active = Optional.ofNullable(active)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
    }
    
    public CustomObjectSchemaInput() {
        this(null, null, null,
            null, null, null);
    }

    /**
     * The name of the custom object schema
     */
    public JsonNullable<String> name() {
        return this.name;
    }

    /**
     * The description of the custom object schema
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * The fields defined in the schema
     */
    public Optional<List<Fields>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * Whether the custom object schema is visible in the UI
     */
    public JsonNullable<Boolean> visible() {
        return this.visible;
    }

    /**
     * Whether the custom object schema is active
     */
    public JsonNullable<Boolean> active() {
        return this.active;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The name of the custom object schema
     */
    public CustomObjectSchemaInput withName(@Nullable String name) {
        this.name = JsonNullable.of(name);
        return this;
    }


    /**
     * The description of the custom object schema
     */
    public CustomObjectSchemaInput withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * The fields defined in the schema
     */
    public CustomObjectSchemaInput withFields(@Nullable List<Fields> fields) {
        this.fields = fields;
        return this;
    }


    /**
     * Whether the custom object schema is visible in the UI
     */
    public CustomObjectSchemaInput withVisible(@Nullable Boolean visible) {
        this.visible = JsonNullable.of(visible);
        return this;
    }


    /**
     * Whether the custom object schema is active
     */
    public CustomObjectSchemaInput withActive(@Nullable Boolean active) {
        this.active = JsonNullable.of(active);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public CustomObjectSchemaInput withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomObjectSchemaInput other = (CustomObjectSchemaInput) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.fields, other.fields) &&
            Utils.enhancedDeepEquals(this.visible, other.visible) &&
            Utils.enhancedDeepEquals(this.active, other.active) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name, description, fields,
            visible, active, passThrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CustomObjectSchemaInput.class,
                "name", name,
                "description", description,
                "fields", fields,
                "visible", visible,
                "active", active,
                "passThrough", passThrough);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> name;

        private JsonNullable<String> description;

        private List<Fields> fields;

        private JsonNullable<Boolean> visible;

        private JsonNullable<Boolean> active;

        private List<PassThroughBody> passThrough;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The name of the custom object schema
         */
        public Builder name(@Nullable String name) {
            this.name = JsonNullable.of(name);
            return this;
        }

        /**
         * The description of the custom object schema
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The fields defined in the schema
         */
        public Builder fields(@Nullable List<Fields> fields) {
            this.fields = fields;
            return this;
        }

        /**
         * Whether the custom object schema is visible in the UI
         */
        public Builder visible(@Nullable Boolean visible) {
            this.visible = JsonNullable.of(visible);
            return this;
        }

        /**
         * Whether the custom object schema is active
         */
        public Builder active(@Nullable Boolean active) {
            this.active = JsonNullable.of(active);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        public CustomObjectSchemaInput build() {
            return new CustomObjectSchemaInput(
                name, description, fields,
                visible, active, passThrough);
        }

    }
}
