/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class CustomersFilter {
    /**
     * Company Name of customer to search for
     */
    @SpeakeasyMetadata("queryParam:name=company_name")
    private String companyName;

    /**
     * Display Name of customer to search for
     */
    @SpeakeasyMetadata("queryParam:name=display_name")
    private String displayName;

    /**
     * First name of customer to search for
     */
    @SpeakeasyMetadata("queryParam:name=first_name")
    private String firstName;

    /**
     * Last name of customer to search for
     */
    @SpeakeasyMetadata("queryParam:name=last_name")
    private String lastName;

    /**
     * Email of customer to search for
     */
    @SpeakeasyMetadata("queryParam:name=email")
    private String email;

    /**
     * Status of customer to filter on
     */
    @SpeakeasyMetadata("queryParam:name=status")
    private JsonNullable<CustomersFilterStatus> status;


    @SpeakeasyMetadata("queryParam:name=updated_since")
    private OffsetDateTime updatedSince;

    /**
     * Supplier ID of customer to search for
     */
    @SpeakeasyMetadata("queryParam:name=supplier_id")
    private String supplierId;

    @JsonCreator
    public CustomersFilter(
            @Nullable String companyName,
            @Nullable String displayName,
            @Nullable String firstName,
            @Nullable String lastName,
            @Nullable String email,
            @Nullable JsonNullable<CustomersFilterStatus> status,
            @Nullable OffsetDateTime updatedSince,
            @Nullable String supplierId) {
        this.companyName = companyName;
        this.displayName = displayName;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.status = Optional.ofNullable(status)
            .orElse(JsonNullable.undefined());
        this.updatedSince = updatedSince;
        this.supplierId = supplierId;
    }
    
    public CustomersFilter() {
        this(null, null, null,
            null, null, null,
            null, null);
    }

    /**
     * Company Name of customer to search for
     */
    public Optional<String> companyName() {
        return Optional.ofNullable(this.companyName);
    }

    /**
     * Display Name of customer to search for
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * First name of customer to search for
     */
    public Optional<String> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    /**
     * Last name of customer to search for
     */
    public Optional<String> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    /**
     * Email of customer to search for
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * Status of customer to filter on
     */
    public JsonNullable<CustomersFilterStatus> status() {
        return this.status;
    }

    public Optional<OffsetDateTime> updatedSince() {
        return Optional.ofNullable(this.updatedSince);
    }

    /**
     * Supplier ID of customer to search for
     */
    public Optional<String> supplierId() {
        return Optional.ofNullable(this.supplierId);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Company Name of customer to search for
     */
    public CustomersFilter withCompanyName(@Nullable String companyName) {
        this.companyName = companyName;
        return this;
    }


    /**
     * Display Name of customer to search for
     */
    public CustomersFilter withDisplayName(@Nullable String displayName) {
        this.displayName = displayName;
        return this;
    }


    /**
     * First name of customer to search for
     */
    public CustomersFilter withFirstName(@Nullable String firstName) {
        this.firstName = firstName;
        return this;
    }


    /**
     * Last name of customer to search for
     */
    public CustomersFilter withLastName(@Nullable String lastName) {
        this.lastName = lastName;
        return this;
    }


    /**
     * Email of customer to search for
     */
    public CustomersFilter withEmail(@Nullable String email) {
        this.email = email;
        return this;
    }


    /**
     * Status of customer to filter on
     */
    public CustomersFilter withStatus(@Nullable CustomersFilterStatus status) {
        this.status = JsonNullable.of(status);
        return this;
    }


    public CustomersFilter withUpdatedSince(@Nullable OffsetDateTime updatedSince) {
        this.updatedSince = updatedSince;
        return this;
    }


    /**
     * Supplier ID of customer to search for
     */
    public CustomersFilter withSupplierId(@Nullable String supplierId) {
        this.supplierId = supplierId;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CustomersFilter other = (CustomersFilter) o;
        return 
            Utils.enhancedDeepEquals(this.companyName, other.companyName) &&
            Utils.enhancedDeepEquals(this.displayName, other.displayName) &&
            Utils.enhancedDeepEquals(this.firstName, other.firstName) &&
            Utils.enhancedDeepEquals(this.lastName, other.lastName) &&
            Utils.enhancedDeepEquals(this.email, other.email) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.updatedSince, other.updatedSince) &&
            Utils.enhancedDeepEquals(this.supplierId, other.supplierId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            companyName, displayName, firstName,
            lastName, email, status,
            updatedSince, supplierId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CustomersFilter.class,
                "companyName", companyName,
                "displayName", displayName,
                "firstName", firstName,
                "lastName", lastName,
                "email", email,
                "status", status,
                "updatedSince", updatedSince,
                "supplierId", supplierId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String companyName;

        private String displayName;

        private String firstName;

        private String lastName;

        private String email;

        private JsonNullable<CustomersFilterStatus> status;

        private OffsetDateTime updatedSince;

        private String supplierId;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Company Name of customer to search for
         */
        public Builder companyName(@Nullable String companyName) {
            this.companyName = companyName;
            return this;
        }

        /**
         * Display Name of customer to search for
         */
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }

        /**
         * First name of customer to search for
         */
        public Builder firstName(@Nullable String firstName) {
            this.firstName = firstName;
            return this;
        }

        /**
         * Last name of customer to search for
         */
        public Builder lastName(@Nullable String lastName) {
            this.lastName = lastName;
            return this;
        }

        /**
         * Email of customer to search for
         */
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }

        /**
         * Status of customer to filter on
         */
        public Builder status(@Nullable CustomersFilterStatus status) {
            this.status = JsonNullable.of(status);
            return this;
        }

        public Builder updatedSince(@Nullable OffsetDateTime updatedSince) {
            this.updatedSince = updatedSince;
            return this;
        }

        /**
         * Supplier ID of customer to search for
         */
        public Builder supplierId(@Nullable String supplierId) {
            this.supplierId = supplierId;
            return this;
        }

        public CustomersFilter build() {
            return new CustomersFilter(
                companyName, displayName, firstName,
                lastName, email, status,
                updatedSince, supplierId);
        }

    }
}
