/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class DriveGroupInput {
    /**
     * The name of the drive group
     */
    @JsonProperty("name")
    private String name;

    /**
     * The display name of the drive group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    private JsonNullable<String> displayName;

    /**
     * A description of the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    @JsonCreator
    public DriveGroupInput(
            @JsonProperty("name") @Nonnull String name,
            @JsonProperty("display_name") @Nullable JsonNullable<String> displayName,
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough) {
        this.name = Optional.ofNullable(name)
            .orElseThrow(() -> new IllegalArgumentException("name cannot be null"));
        this.displayName = Optional.ofNullable(displayName)
            .orElse(JsonNullable.undefined());
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
    }
    
    public DriveGroupInput(
            @Nonnull String name) {
        this(name, null, null,
            null);
    }

    /**
     * The name of the drive group
     */
    public String name() {
        return this.name;
    }

    /**
     * The display name of the drive group
     */
    public JsonNullable<String> displayName() {
        return this.displayName;
    }

    /**
     * A description of the object.
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The name of the drive group
     */
    public DriveGroupInput withName(@Nonnull String name) {
        this.name = Utils.checkNotNull(name, "name");
        return this;
    }


    /**
     * The display name of the drive group
     */
    public DriveGroupInput withDisplayName(@Nullable String displayName) {
        this.displayName = JsonNullable.of(displayName);
        return this;
    }


    /**
     * A description of the object.
     */
    public DriveGroupInput withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public DriveGroupInput withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DriveGroupInput other = (DriveGroupInput) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.displayName, other.displayName) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name, displayName, description,
            passThrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DriveGroupInput.class,
                "name", name,
                "displayName", displayName,
                "description", description,
                "passThrough", passThrough);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String name;

        private JsonNullable<String> displayName;

        private JsonNullable<String> description;

        private List<PassThroughBody> passThrough;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The name of the drive group
         */
        public Builder name(@Nonnull String name) {
            this.name = Utils.checkNotNull(name, "name");
            return this;
        }

        /**
         * The display name of the drive group
         */
        public Builder displayName(@Nullable String displayName) {
            this.displayName = JsonNullable.of(displayName);
            return this;
        }

        /**
         * A description of the object.
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        public DriveGroupInput build() {
            return new DriveGroupInput(
                name, displayName, description,
                passThrough);
        }

    }
}
