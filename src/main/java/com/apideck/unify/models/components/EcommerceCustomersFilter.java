/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class EcommerceCustomersFilter {
    /**
     * Customer email address to filter on
     */
    @SpeakeasyMetadata("queryParam:name=email")
    private String email;

    /**
     * Customer phone number to filter on
     */
    @SpeakeasyMetadata("queryParam:name=phone_number")
    private String phoneNumber;

    @JsonCreator
    public EcommerceCustomersFilter(
            @Nullable String email,
            @Nullable String phoneNumber) {
        this.email = email;
        this.phoneNumber = phoneNumber;
    }
    
    public EcommerceCustomersFilter() {
        this(null, null);
    }

    /**
     * Customer email address to filter on
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * Customer phone number to filter on
     */
    public Optional<String> phoneNumber() {
        return Optional.ofNullable(this.phoneNumber);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Customer email address to filter on
     */
    public EcommerceCustomersFilter withEmail(@Nullable String email) {
        this.email = email;
        return this;
    }


    /**
     * Customer phone number to filter on
     */
    public EcommerceCustomersFilter withPhoneNumber(@Nullable String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EcommerceCustomersFilter other = (EcommerceCustomersFilter) o;
        return 
            Utils.enhancedDeepEquals(this.email, other.email) &&
            Utils.enhancedDeepEquals(this.phoneNumber, other.phoneNumber);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            email, phoneNumber);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EcommerceCustomersFilter.class,
                "email", email,
                "phoneNumber", phoneNumber);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String email;

        private String phoneNumber;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Customer email address to filter on
         */
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }

        /**
         * Customer phone number to filter on
         */
        public Builder phoneNumber(@Nullable String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        public EcommerceCustomersFilter build() {
            return new EcommerceCustomersFilter(
                email, phoneNumber);
        }

    }
}
