/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class EmployeesOneFilter {
    /**
     * Company ID to filter on
     */
    @SpeakeasyMetadata("queryParam:name=company_id")
    private String companyId;

    @JsonCreator
    public EmployeesOneFilter(
            @Nullable String companyId) {
        this.companyId = companyId;
    }
    
    public EmployeesOneFilter() {
        this(null);
    }

    /**
     * Company ID to filter on
     */
    public Optional<String> companyId() {
        return Optional.ofNullable(this.companyId);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Company ID to filter on
     */
    public EmployeesOneFilter withCompanyId(@Nullable String companyId) {
        this.companyId = companyId;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmployeesOneFilter other = (EmployeesOneFilter) o;
        return 
            Utils.enhancedDeepEquals(this.companyId, other.companyId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            companyId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EmployeesOneFilter.class,
                "companyId", companyId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String companyId;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Company ID to filter on
         */
        public Builder companyId(@Nullable String companyId) {
            this.companyId = companyId;
            return this;
        }

        public EmployeesOneFilter build() {
            return new EmployeesOneFilter(
                companyId);
        }

    }
}
