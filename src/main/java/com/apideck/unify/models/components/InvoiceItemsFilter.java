/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class InvoiceItemsFilter {
    /**
     * Name of Invoice Items to search for
     */
    @SpeakeasyMetadata("queryParam:name=name")
    private String name;

    /**
     * The type of invoice item, indicating whether it is an inventory item, a service, or another type.
     */
    @SpeakeasyMetadata("queryParam:name=type")
    private JsonNullable<InvoiceItemType> type;

    @JsonCreator
    public InvoiceItemsFilter(
            @Nullable String name,
            @Nullable JsonNullable<InvoiceItemType> type) {
        this.name = name;
        this.type = Optional.ofNullable(type)
            .orElse(JsonNullable.undefined());
    }
    
    public InvoiceItemsFilter() {
        this(null, null);
    }

    /**
     * Name of Invoice Items to search for
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of invoice item, indicating whether it is an inventory item, a service, or another type.
     */
    public JsonNullable<InvoiceItemType> type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Name of Invoice Items to search for
     */
    public InvoiceItemsFilter withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    /**
     * The type of invoice item, indicating whether it is an inventory item, a service, or another type.
     */
    public InvoiceItemsFilter withType(@Nullable InvoiceItemType type) {
        this.type = JsonNullable.of(type);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InvoiceItemsFilter other = (InvoiceItemsFilter) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name, type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(InvoiceItemsFilter.class,
                "name", name,
                "type", type);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String name;

        private JsonNullable<InvoiceItemType> type;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Name of Invoice Items to search for
         */
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        /**
         * The type of invoice item, indicating whether it is an inventory item, a service, or another type.
         */
        public Builder type(@Nullable InvoiceItemType type) {
            this.type = JsonNullable.of(type);
            return this;
        }

        public InvoiceItemsFilter build() {
            return new InvoiceItemsFilter(
                name, type);
        }

    }
}
