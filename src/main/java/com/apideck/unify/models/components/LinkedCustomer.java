/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Deprecated;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * LinkedCustomer
 * 
 * <p>The customer this entity is linked to.
 */
public class LinkedCustomer {
    /**
     * The ID of the customer this entity is linked to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * The display ID of the customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_id")
    private JsonNullable<String> displayId;

    /**
     * The display name of the customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    private JsonNullable<String> displayName;

    /**
     * The name of the customer. Deprecated, use display_name instead.
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    @Deprecated
    private String name;

    /**
     * The company name of the customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    private JsonNullable<String> companyName;

    /**
     * The email address of the customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private String email;

    @JsonCreator
    public LinkedCustomer(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("display_id") @Nullable JsonNullable<String> displayId,
            @JsonProperty("display_name") @Nullable JsonNullable<String> displayName,
            @JsonProperty("name") @Nullable String name,
            @JsonProperty("company_name") @Nullable JsonNullable<String> companyName,
            @JsonProperty("email") @Nullable String email) {
        this.id = id;
        this.displayId = Optional.ofNullable(displayId)
            .orElse(JsonNullable.undefined());
        this.displayName = Optional.ofNullable(displayName)
            .orElse(JsonNullable.undefined());
        this.name = name;
        this.companyName = Optional.ofNullable(companyName)
            .orElse(JsonNullable.undefined());
        this.email = email;
    }
    
    public LinkedCustomer() {
        this(null, null, null,
            null, null, null);
    }

    /**
     * The ID of the customer this entity is linked to.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The display ID of the customer.
     */
    public JsonNullable<String> displayId() {
        return this.displayId;
    }

    /**
     * The display name of the customer.
     */
    public JsonNullable<String> displayName() {
        return this.displayName;
    }

    /**
     * The name of the customer. Deprecated, use display_name instead.
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The company name of the customer.
     */
    public JsonNullable<String> companyName() {
        return this.companyName;
    }

    /**
     * The email address of the customer.
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of the customer this entity is linked to.
     */
    public LinkedCustomer withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * The display ID of the customer.
     */
    public LinkedCustomer withDisplayId(@Nullable String displayId) {
        this.displayId = JsonNullable.of(displayId);
        return this;
    }


    /**
     * The display name of the customer.
     */
    public LinkedCustomer withDisplayName(@Nullable String displayName) {
        this.displayName = JsonNullable.of(displayName);
        return this;
    }


    /**
     * The name of the customer. Deprecated, use display_name instead.
     * 
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @Deprecated
    public LinkedCustomer withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    /**
     * The company name of the customer.
     */
    public LinkedCustomer withCompanyName(@Nullable String companyName) {
        this.companyName = JsonNullable.of(companyName);
        return this;
    }


    /**
     * The email address of the customer.
     */
    public LinkedCustomer withEmail(@Nullable String email) {
        this.email = email;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LinkedCustomer other = (LinkedCustomer) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.displayId, other.displayId) &&
            Utils.enhancedDeepEquals(this.displayName, other.displayName) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.companyName, other.companyName) &&
            Utils.enhancedDeepEquals(this.email, other.email);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, displayId, displayName,
            name, companyName, email);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LinkedCustomer.class,
                "id", id,
                "displayId", displayId,
                "displayName", displayName,
                "name", name,
                "companyName", companyName,
                "email", email);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private JsonNullable<String> displayId;

        private JsonNullable<String> displayName;

        @Deprecated
        private String name;

        private JsonNullable<String> companyName;

        private String email;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the customer this entity is linked to.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * The display ID of the customer.
         */
        public Builder displayId(@Nullable String displayId) {
            this.displayId = JsonNullable.of(displayId);
            return this;
        }

        /**
         * The display name of the customer.
         */
        public Builder displayName(@Nullable String displayName) {
            this.displayName = JsonNullable.of(displayName);
            return this;
        }

        /**
         * The name of the customer. Deprecated, use display_name instead.
         * 
         * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
         */
        @Deprecated
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        /**
         * The company name of the customer.
         */
        public Builder companyName(@Nullable String companyName) {
            this.companyName = JsonNullable.of(companyName);
            return this;
        }

        /**
         * The email address of the customer.
         */
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }

        public LinkedCustomer build() {
            return new LinkedCustomer(
                id, displayId, displayName,
                name, companyName, email);
        }

    }
}
