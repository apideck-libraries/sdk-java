/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */


package com.apideck.unify.models.components;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;

public class LinkedLedgerAccount {

    /**
     * The unique identifier for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<String> id;

    /**
     * The name of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;

    /**
     * The nominal code of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nominal_code")
    private JsonNullable<String> nominalCode;

    /**
     * The code assigned to the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private JsonNullable<String> code;

    @JsonCreator
    public LinkedLedgerAccount(
            @JsonProperty("id") Optional<String> id,
            @JsonProperty("name") JsonNullable<String> name,
            @JsonProperty("nominal_code") JsonNullable<String> nominalCode,
            @JsonProperty("code") JsonNullable<String> code) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(nominalCode, "nominalCode");
        Utils.checkNotNull(code, "code");
        this.id = id;
        this.name = name;
        this.nominalCode = nominalCode;
        this.code = code;
    }
    
    public LinkedLedgerAccount() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The unique identifier for the account.
     */
    @JsonIgnore
    public Optional<String> id() {
        return id;
    }

    /**
     * The name of the account.
     */
    @JsonIgnore
    public JsonNullable<String> name() {
        return name;
    }

    /**
     * The nominal code of the account.
     */
    @JsonIgnore
    public JsonNullable<String> nominalCode() {
        return nominalCode;
    }

    /**
     * The code assigned to the account.
     */
    @JsonIgnore
    public JsonNullable<String> code() {
        return code;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The unique identifier for the account.
     */
    public LinkedLedgerAccount withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }

    /**
     * The unique identifier for the account.
     */
    public LinkedLedgerAccount withId(Optional<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * The name of the account.
     */
    public LinkedLedgerAccount withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = JsonNullable.of(name);
        return this;
    }

    /**
     * The name of the account.
     */
    public LinkedLedgerAccount withName(JsonNullable<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * The nominal code of the account.
     */
    public LinkedLedgerAccount withNominalCode(String nominalCode) {
        Utils.checkNotNull(nominalCode, "nominalCode");
        this.nominalCode = JsonNullable.of(nominalCode);
        return this;
    }

    /**
     * The nominal code of the account.
     */
    public LinkedLedgerAccount withNominalCode(JsonNullable<String> nominalCode) {
        Utils.checkNotNull(nominalCode, "nominalCode");
        this.nominalCode = nominalCode;
        return this;
    }

    /**
     * The code assigned to the account.
     */
    public LinkedLedgerAccount withCode(String code) {
        Utils.checkNotNull(code, "code");
        this.code = JsonNullable.of(code);
        return this;
    }

    /**
     * The code assigned to the account.
     */
    public LinkedLedgerAccount withCode(JsonNullable<String> code) {
        Utils.checkNotNull(code, "code");
        this.code = code;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LinkedLedgerAccount other = (LinkedLedgerAccount) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.nominalCode, other.nominalCode) &&
            Objects.deepEquals(this.code, other.code);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            name,
            nominalCode,
            code);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LinkedLedgerAccount.class,
                "id", id,
                "name", name,
                "nominalCode", nominalCode,
                "code", code);
    }
    
    public final static class Builder {
 
        private Optional<String> id = Optional.empty();
 
        private JsonNullable<String> name = JsonNullable.undefined();
 
        private JsonNullable<String> nominalCode = JsonNullable.undefined();
 
        private JsonNullable<String> code = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique identifier for the account.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * The unique identifier for the account.
         */
        public Builder id(Optional<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * The name of the account.
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = JsonNullable.of(name);
            return this;
        }

        /**
         * The name of the account.
         */
        public Builder name(JsonNullable<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * The nominal code of the account.
         */
        public Builder nominalCode(String nominalCode) {
            Utils.checkNotNull(nominalCode, "nominalCode");
            this.nominalCode = JsonNullable.of(nominalCode);
            return this;
        }

        /**
         * The nominal code of the account.
         */
        public Builder nominalCode(JsonNullable<String> nominalCode) {
            Utils.checkNotNull(nominalCode, "nominalCode");
            this.nominalCode = nominalCode;
            return this;
        }

        /**
         * The code assigned to the account.
         */
        public Builder code(String code) {
            Utils.checkNotNull(code, "code");
            this.code = JsonNullable.of(code);
            return this;
        }

        /**
         * The code assigned to the account.
         */
        public Builder code(JsonNullable<String> code) {
            Utils.checkNotNull(code, "code");
            this.code = code;
            return this;
        }
        
        public LinkedLedgerAccount build() {
            return new LinkedLedgerAccount(
                id,
                name,
                nominalCode,
                code);
        }
    }
}

