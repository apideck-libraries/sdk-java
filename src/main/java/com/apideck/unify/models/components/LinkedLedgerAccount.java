/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class LinkedLedgerAccount {
    /**
     * The unique identifier for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * The name of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;

    /**
     * The nominal code of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nominal_code")
    private JsonNullable<String> nominalCode;

    /**
     * The code assigned to the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private JsonNullable<String> code;

    @JsonCreator
    public LinkedLedgerAccount(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("name") @Nullable JsonNullable<String> name,
            @JsonProperty("nominal_code") @Nullable JsonNullable<String> nominalCode,
            @JsonProperty("code") @Nullable JsonNullable<String> code) {
        this.id = id;
        this.name = Optional.ofNullable(name)
            .orElse(JsonNullable.undefined());
        this.nominalCode = Optional.ofNullable(nominalCode)
            .orElse(JsonNullable.undefined());
        this.code = Optional.ofNullable(code)
            .orElse(JsonNullable.undefined());
    }
    
    public LinkedLedgerAccount() {
        this(null, null, null,
            null);
    }

    /**
     * The unique identifier for the account.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the account.
     */
    public JsonNullable<String> name() {
        return this.name;
    }

    /**
     * The nominal code of the account.
     */
    public JsonNullable<String> nominalCode() {
        return this.nominalCode;
    }

    /**
     * The code assigned to the account.
     */
    public JsonNullable<String> code() {
        return this.code;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique identifier for the account.
     */
    public LinkedLedgerAccount withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * The name of the account.
     */
    public LinkedLedgerAccount withName(@Nullable String name) {
        this.name = JsonNullable.of(name);
        return this;
    }


    /**
     * The nominal code of the account.
     */
    public LinkedLedgerAccount withNominalCode(@Nullable String nominalCode) {
        this.nominalCode = JsonNullable.of(nominalCode);
        return this;
    }


    /**
     * The code assigned to the account.
     */
    public LinkedLedgerAccount withCode(@Nullable String code) {
        this.code = JsonNullable.of(code);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LinkedLedgerAccount other = (LinkedLedgerAccount) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.nominalCode, other.nominalCode) &&
            Utils.enhancedDeepEquals(this.code, other.code);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, name, nominalCode,
            code);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LinkedLedgerAccount.class,
                "id", id,
                "name", name,
                "nominalCode", nominalCode,
                "code", code);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private JsonNullable<String> name;

        private JsonNullable<String> nominalCode;

        private JsonNullable<String> code;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The unique identifier for the account.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * The name of the account.
         */
        public Builder name(@Nullable String name) {
            this.name = JsonNullable.of(name);
            return this;
        }

        /**
         * The nominal code of the account.
         */
        public Builder nominalCode(@Nullable String nominalCode) {
            this.nominalCode = JsonNullable.of(nominalCode);
            return this;
        }

        /**
         * The code assigned to the account.
         */
        public Builder code(@Nullable String code) {
            this.code = JsonNullable.of(code);
            return this;
        }

        public LinkedLedgerAccount build() {
            return new LinkedLedgerAccount(
                id, name, nominalCode,
                code);
        }

    }
}
