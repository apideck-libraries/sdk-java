/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class LinkedLedgerAccountInput {
    /**
     * The unique identifier for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private Optional<String> id;

    /**
     * The nominal code of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nominal_code")
    private JsonNullable<String> nominalCode;

    /**
     * The code assigned to the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    private JsonNullable<String> code;

    @JsonCreator
    public LinkedLedgerAccountInput(
            @JsonProperty("id") Optional<String> id,
            @JsonProperty("nominal_code") JsonNullable<String> nominalCode,
            @JsonProperty("code") JsonNullable<String> code) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(nominalCode, "nominalCode");
        Utils.checkNotNull(code, "code");
        this.id = id;
        this.nominalCode = nominalCode;
        this.code = code;
    }
    
    public LinkedLedgerAccountInput() {
        this(Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The unique identifier for the account.
     */
    @JsonIgnore
    public Optional<String> id() {
        return id;
    }

    /**
     * The nominal code of the account.
     */
    @JsonIgnore
    public JsonNullable<String> nominalCode() {
        return nominalCode;
    }

    /**
     * The code assigned to the account.
     */
    @JsonIgnore
    public JsonNullable<String> code() {
        return code;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The unique identifier for the account.
     */
    public LinkedLedgerAccountInput withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = Optional.ofNullable(id);
        return this;
    }


    /**
     * The unique identifier for the account.
     */
    public LinkedLedgerAccountInput withId(Optional<String> id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * The nominal code of the account.
     */
    public LinkedLedgerAccountInput withNominalCode(String nominalCode) {
        Utils.checkNotNull(nominalCode, "nominalCode");
        this.nominalCode = JsonNullable.of(nominalCode);
        return this;
    }

    /**
     * The nominal code of the account.
     */
    public LinkedLedgerAccountInput withNominalCode(JsonNullable<String> nominalCode) {
        Utils.checkNotNull(nominalCode, "nominalCode");
        this.nominalCode = nominalCode;
        return this;
    }

    /**
     * The code assigned to the account.
     */
    public LinkedLedgerAccountInput withCode(String code) {
        Utils.checkNotNull(code, "code");
        this.code = JsonNullable.of(code);
        return this;
    }

    /**
     * The code assigned to the account.
     */
    public LinkedLedgerAccountInput withCode(JsonNullable<String> code) {
        Utils.checkNotNull(code, "code");
        this.code = code;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LinkedLedgerAccountInput other = (LinkedLedgerAccountInput) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.nominalCode, other.nominalCode) &&
            Utils.enhancedDeepEquals(this.code, other.code);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, nominalCode, code);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LinkedLedgerAccountInput.class,
                "id", id,
                "nominalCode", nominalCode,
                "code", code);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Optional<String> id = Optional.empty();

        private JsonNullable<String> nominalCode = JsonNullable.undefined();

        private JsonNullable<String> code = JsonNullable.undefined();

        private Builder() {
          // force use of static builder() method
        }


        /**
         * The unique identifier for the account.
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = Optional.ofNullable(id);
            return this;
        }

        /**
         * The unique identifier for the account.
         */
        public Builder id(Optional<String> id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }


        /**
         * The nominal code of the account.
         */
        public Builder nominalCode(String nominalCode) {
            Utils.checkNotNull(nominalCode, "nominalCode");
            this.nominalCode = JsonNullable.of(nominalCode);
            return this;
        }

        /**
         * The nominal code of the account.
         */
        public Builder nominalCode(JsonNullable<String> nominalCode) {
            Utils.checkNotNull(nominalCode, "nominalCode");
            this.nominalCode = nominalCode;
            return this;
        }


        /**
         * The code assigned to the account.
         */
        public Builder code(String code) {
            Utils.checkNotNull(code, "code");
            this.code = JsonNullable.of(code);
            return this;
        }

        /**
         * The code assigned to the account.
         */
        public Builder code(JsonNullable<String> code) {
            Utils.checkNotNull(code, "code");
            this.code = code;
            return this;
        }

        public LinkedLedgerAccountInput build() {

            return new LinkedLedgerAccountInput(
                id, nominalCode, code);
        }

    }
}
