/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class LinkedResources {
    /**
     * ID of the resource, typically a lowercased version of name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * Name of the property in our Unified API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unified_property")
    private String unifiedProperty;

    @JsonCreator
    public LinkedResources(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("unified_property") @Nullable String unifiedProperty) {
        this.id = id;
        this.unifiedProperty = unifiedProperty;
    }
    
    public LinkedResources() {
        this(null, null);
    }

    /**
     * ID of the resource, typically a lowercased version of name.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the property in our Unified API.
     */
    public Optional<String> unifiedProperty() {
        return Optional.ofNullable(this.unifiedProperty);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * ID of the resource, typically a lowercased version of name.
     */
    public LinkedResources withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * Name of the property in our Unified API.
     */
    public LinkedResources withUnifiedProperty(@Nullable String unifiedProperty) {
        this.unifiedProperty = unifiedProperty;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LinkedResources other = (LinkedResources) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.unifiedProperty, other.unifiedProperty);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, unifiedProperty);
    }
    
    @Override
    public String toString() {
        return Utils.toString(LinkedResources.class,
                "id", id,
                "unifiedProperty", unifiedProperty);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private String unifiedProperty;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the resource, typically a lowercased version of name.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * Name of the property in our Unified API.
         */
        public Builder unifiedProperty(@Nullable String unifiedProperty) {
            this.unifiedProperty = unifiedProperty;
            return this;
        }

        public LinkedResources build() {
            return new LinkedResources(
                id, unifiedProperty);
        }

    }
}
