/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * Meta
 * 
 * <p>Response metadata
 */
public class Meta {
    /**
     * Number of items returned in the data property of the response
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items_on_page")
    private Long itemsOnPage;

    /**
     * Cursors to navigate to previous or next pages through the API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cursors")
    private Cursors cursors;

    @JsonCreator
    public Meta(
            @JsonProperty("items_on_page") @Nullable Long itemsOnPage,
            @JsonProperty("cursors") @Nullable Cursors cursors) {
        this.itemsOnPage = itemsOnPage;
        this.cursors = cursors;
    }
    
    public Meta() {
        this(null, null);
    }

    /**
     * Number of items returned in the data property of the response
     */
    public Optional<Long> itemsOnPage() {
        return Optional.ofNullable(this.itemsOnPage);
    }

    /**
     * Cursors to navigate to previous or next pages through the API
     */
    public Optional<Cursors> cursors() {
        return Optional.ofNullable(this.cursors);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Number of items returned in the data property of the response
     */
    public Meta withItemsOnPage(@Nullable Long itemsOnPage) {
        this.itemsOnPage = itemsOnPage;
        return this;
    }


    /**
     * Cursors to navigate to previous or next pages through the API
     */
    public Meta withCursors(@Nullable Cursors cursors) {
        this.cursors = cursors;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Meta other = (Meta) o;
        return 
            Utils.enhancedDeepEquals(this.itemsOnPage, other.itemsOnPage) &&
            Utils.enhancedDeepEquals(this.cursors, other.cursors);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            itemsOnPage, cursors);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Meta.class,
                "itemsOnPage", itemsOnPage,
                "cursors", cursors);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Long itemsOnPage;

        private Cursors cursors;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Number of items returned in the data property of the response
         */
        public Builder itemsOnPage(@Nullable Long itemsOnPage) {
            this.itemsOnPage = itemsOnPage;
            return this;
        }

        /**
         * Cursors to navigate to previous or next pages through the API
         */
        public Builder cursors(@Nullable Cursors cursors) {
            this.cursors = cursors;
            return this;
        }

        public Meta build() {
            return new Meta(
                itemsOnPage, cursors);
        }

    }
}
