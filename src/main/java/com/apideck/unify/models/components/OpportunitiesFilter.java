/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class OpportunitiesFilter {
    /**
     * Title of the opportunity to filter on
     */
    @SpeakeasyMetadata("queryParam:name=title")
    private String title;

    /**
     * Status to filter on
     */
    @SpeakeasyMetadata("queryParam:name=status")
    private String status;

    /**
     * Monetary amount to filter on
     */
    @SpeakeasyMetadata("queryParam:name=monetary_amount")
    private Double monetaryAmount;

    /**
     * Win probability to filter on
     */
    @SpeakeasyMetadata("queryParam:name=win_probability")
    private Double winProbability;

    /**
     * Company ID to filter on
     */
    @SpeakeasyMetadata("queryParam:name=company_id")
    private String companyId;

    /**
     * Owner ID to filter on
     */
    @SpeakeasyMetadata("queryParam:name=owner_id")
    private String ownerId;

    /**
     * Primary contact ID to filter on
     */
    @SpeakeasyMetadata("queryParam:name=primary_contact_id")
    private String primaryContactId;

    @JsonCreator
    public OpportunitiesFilter(
            @Nullable String title,
            @Nullable String status,
            @Nullable Double monetaryAmount,
            @Nullable Double winProbability,
            @Nullable String companyId,
            @Nullable String ownerId,
            @Nullable String primaryContactId) {
        this.title = title;
        this.status = status;
        this.monetaryAmount = monetaryAmount;
        this.winProbability = winProbability;
        this.companyId = companyId;
        this.ownerId = ownerId;
        this.primaryContactId = primaryContactId;
    }
    
    public OpportunitiesFilter() {
        this(null, null, null,
            null, null, null,
            null);
    }

    /**
     * Title of the opportunity to filter on
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }

    /**
     * Status to filter on
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Monetary amount to filter on
     */
    public Optional<Double> monetaryAmount() {
        return Optional.ofNullable(this.monetaryAmount);
    }

    /**
     * Win probability to filter on
     */
    public Optional<Double> winProbability() {
        return Optional.ofNullable(this.winProbability);
    }

    /**
     * Company ID to filter on
     */
    public Optional<String> companyId() {
        return Optional.ofNullable(this.companyId);
    }

    /**
     * Owner ID to filter on
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }

    /**
     * Primary contact ID to filter on
     */
    public Optional<String> primaryContactId() {
        return Optional.ofNullable(this.primaryContactId);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Title of the opportunity to filter on
     */
    public OpportunitiesFilter withTitle(@Nullable String title) {
        this.title = title;
        return this;
    }


    /**
     * Status to filter on
     */
    public OpportunitiesFilter withStatus(@Nullable String status) {
        this.status = status;
        return this;
    }


    /**
     * Monetary amount to filter on
     */
    public OpportunitiesFilter withMonetaryAmount(@Nullable Double monetaryAmount) {
        this.monetaryAmount = monetaryAmount;
        return this;
    }


    /**
     * Win probability to filter on
     */
    public OpportunitiesFilter withWinProbability(@Nullable Double winProbability) {
        this.winProbability = winProbability;
        return this;
    }


    /**
     * Company ID to filter on
     */
    public OpportunitiesFilter withCompanyId(@Nullable String companyId) {
        this.companyId = companyId;
        return this;
    }


    /**
     * Owner ID to filter on
     */
    public OpportunitiesFilter withOwnerId(@Nullable String ownerId) {
        this.ownerId = ownerId;
        return this;
    }


    /**
     * Primary contact ID to filter on
     */
    public OpportunitiesFilter withPrimaryContactId(@Nullable String primaryContactId) {
        this.primaryContactId = primaryContactId;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpportunitiesFilter other = (OpportunitiesFilter) o;
        return 
            Utils.enhancedDeepEquals(this.title, other.title) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.monetaryAmount, other.monetaryAmount) &&
            Utils.enhancedDeepEquals(this.winProbability, other.winProbability) &&
            Utils.enhancedDeepEquals(this.companyId, other.companyId) &&
            Utils.enhancedDeepEquals(this.ownerId, other.ownerId) &&
            Utils.enhancedDeepEquals(this.primaryContactId, other.primaryContactId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            title, status, monetaryAmount,
            winProbability, companyId, ownerId,
            primaryContactId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(OpportunitiesFilter.class,
                "title", title,
                "status", status,
                "monetaryAmount", monetaryAmount,
                "winProbability", winProbability,
                "companyId", companyId,
                "ownerId", ownerId,
                "primaryContactId", primaryContactId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String title;

        private String status;

        private Double monetaryAmount;

        private Double winProbability;

        private String companyId;

        private String ownerId;

        private String primaryContactId;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Title of the opportunity to filter on
         */
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }

        /**
         * Status to filter on
         */
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }

        /**
         * Monetary amount to filter on
         */
        public Builder monetaryAmount(@Nullable Double monetaryAmount) {
            this.monetaryAmount = monetaryAmount;
            return this;
        }

        /**
         * Win probability to filter on
         */
        public Builder winProbability(@Nullable Double winProbability) {
            this.winProbability = winProbability;
            return this;
        }

        /**
         * Company ID to filter on
         */
        public Builder companyId(@Nullable String companyId) {
            this.companyId = companyId;
            return this;
        }

        /**
         * Owner ID to filter on
         */
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }

        /**
         * Primary contact ID to filter on
         */
        public Builder primaryContactId(@Nullable String primaryContactId) {
            this.primaryContactId = primaryContactId;
            return this;
        }

        public OpportunitiesFilter build() {
            return new OpportunitiesFilter(
                title, status, monetaryAmount,
                winProbability, companyId, ownerId,
                primaryContactId);
        }

    }
}
