/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class OpportunityInput {
    /**
     * The title or name of the opportunity.
     */
    @JsonProperty("title")
    private String title;

    /**
     * The unique identifier of the primary contact associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primary_contact_id")
    private JsonNullable<String> primaryContactId;

    /**
     * A description of the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The type of the opportunity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private JsonNullable<String> type;

    /**
     * The monetary value associated with the opportunity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monetary_amount")
    private JsonNullable<Double> monetaryAmount;

    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    private JsonNullable<Currency> currency;

    /**
     * The probability of winning the opportunity, expressed as a percentage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("win_probability")
    private JsonNullable<Double> winProbability;

    /**
     * The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("close_date")
    private JsonNullable<LocalDate> closeDate;

    /**
     * The unique identifier of the reason why the opportunity was lost.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loss_reason_id")
    private JsonNullable<String> lossReasonId;

    /**
     * The reason why the opportunity was lost.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loss_reason")
    private JsonNullable<String> lossReason;

    /**
     * The unique identifier of the reason why the opportunity was won.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("won_reason_id")
    private JsonNullable<String> wonReasonId;

    /**
     * The reason why the opportunity was won.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("won_reason")
    private JsonNullable<String> wonReason;

    /**
     * The unique identifier of the pipeline associated with the opportunity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pipeline_id")
    private JsonNullable<String> pipelineId;

    /**
     * The unique identifier of the stage in the pipeline associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pipeline_stage_id")
    private JsonNullable<String> pipelineStageId;

    /**
     * The unique identifier of the source of the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_id")
    private JsonNullable<String> sourceId;

    /**
     * The unique identifier of the lead associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lead_id")
    private JsonNullable<String> leadId;

    /**
     * The source of the lead associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lead_source")
    private JsonNullable<String> leadSource;

    /**
     * The unique identifier of the contact associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact_id")
    private JsonNullable<String> contactId;

    /**
     * An array of unique identifiers of all contacts associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact_ids")
    private List<String> contactIds;

    /**
     * The unique identifier of the company associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_id")
    private JsonNullable<String> companyId;

    /**
     * The name of the company associated with the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    private JsonNullable<String> companyName;

    /**
     * The unique identifier of the user who owns the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_id")
    private JsonNullable<String> ownerId;

    /**
     * The priority level of the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    private JsonNullable<String> priority;

    /**
     * The current status of the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private JsonNullable<String> status;

    /**
     * The unique identifier of the current status of the opportunity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_id")
    private JsonNullable<String> statusId;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    private JsonNullable<List<String>> tags;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_fields")
    private List<CustomField> customFields;

    /**
     * The date and time when the stage of the opportunity was last changed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stage_last_changed_at")
    private JsonNullable<OffsetDateTime> stageLastChangedAt;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    @JsonCreator
    public OpportunityInput(
            @JsonProperty("title") @Nonnull String title,
            @JsonProperty("primary_contact_id") @Nullable JsonNullable<String> primaryContactId,
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("type") @Nullable JsonNullable<String> type,
            @JsonProperty("monetary_amount") @Nullable JsonNullable<Double> monetaryAmount,
            @JsonProperty("currency") @Nullable JsonNullable<Currency> currency,
            @JsonProperty("win_probability") @Nullable JsonNullable<Double> winProbability,
            @JsonProperty("close_date") @Nullable JsonNullable<LocalDate> closeDate,
            @JsonProperty("loss_reason_id") @Nullable JsonNullable<String> lossReasonId,
            @JsonProperty("loss_reason") @Nullable JsonNullable<String> lossReason,
            @JsonProperty("won_reason_id") @Nullable JsonNullable<String> wonReasonId,
            @JsonProperty("won_reason") @Nullable JsonNullable<String> wonReason,
            @JsonProperty("pipeline_id") @Nullable JsonNullable<String> pipelineId,
            @JsonProperty("pipeline_stage_id") @Nullable JsonNullable<String> pipelineStageId,
            @JsonProperty("source_id") @Nullable JsonNullable<String> sourceId,
            @JsonProperty("lead_id") @Nullable JsonNullable<String> leadId,
            @JsonProperty("lead_source") @Nullable JsonNullable<String> leadSource,
            @JsonProperty("contact_id") @Nullable JsonNullable<String> contactId,
            @JsonProperty("contact_ids") @Nullable List<String> contactIds,
            @JsonProperty("company_id") @Nullable JsonNullable<String> companyId,
            @JsonProperty("company_name") @Nullable JsonNullable<String> companyName,
            @JsonProperty("owner_id") @Nullable JsonNullable<String> ownerId,
            @JsonProperty("priority") @Nullable JsonNullable<String> priority,
            @JsonProperty("status") @Nullable JsonNullable<String> status,
            @JsonProperty("status_id") @Nullable JsonNullable<String> statusId,
            @JsonProperty("tags") @Nullable JsonNullable<List<String>> tags,
            @JsonProperty("custom_fields") @Nullable List<CustomField> customFields,
            @JsonProperty("stage_last_changed_at") @Nullable JsonNullable<OffsetDateTime> stageLastChangedAt,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough) {
        this.title = Optional.ofNullable(title)
            .orElseThrow(() -> new IllegalArgumentException("title cannot be null"));
        this.primaryContactId = Optional.ofNullable(primaryContactId)
            .orElse(JsonNullable.undefined());
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.type = Optional.ofNullable(type)
            .orElse(JsonNullable.undefined());
        this.monetaryAmount = Optional.ofNullable(monetaryAmount)
            .orElse(JsonNullable.undefined());
        this.currency = Optional.ofNullable(currency)
            .orElse(JsonNullable.undefined());
        this.winProbability = Optional.ofNullable(winProbability)
            .orElse(JsonNullable.undefined());
        this.closeDate = Optional.ofNullable(closeDate)
            .orElse(JsonNullable.undefined());
        this.lossReasonId = Optional.ofNullable(lossReasonId)
            .orElse(JsonNullable.undefined());
        this.lossReason = Optional.ofNullable(lossReason)
            .orElse(JsonNullable.undefined());
        this.wonReasonId = Optional.ofNullable(wonReasonId)
            .orElse(JsonNullable.undefined());
        this.wonReason = Optional.ofNullable(wonReason)
            .orElse(JsonNullable.undefined());
        this.pipelineId = Optional.ofNullable(pipelineId)
            .orElse(JsonNullable.undefined());
        this.pipelineStageId = Optional.ofNullable(pipelineStageId)
            .orElse(JsonNullable.undefined());
        this.sourceId = Optional.ofNullable(sourceId)
            .orElse(JsonNullable.undefined());
        this.leadId = Optional.ofNullable(leadId)
            .orElse(JsonNullable.undefined());
        this.leadSource = Optional.ofNullable(leadSource)
            .orElse(JsonNullable.undefined());
        this.contactId = Optional.ofNullable(contactId)
            .orElse(JsonNullable.undefined());
        this.contactIds = contactIds;
        this.companyId = Optional.ofNullable(companyId)
            .orElse(JsonNullable.undefined());
        this.companyName = Optional.ofNullable(companyName)
            .orElse(JsonNullable.undefined());
        this.ownerId = Optional.ofNullable(ownerId)
            .orElse(JsonNullable.undefined());
        this.priority = Optional.ofNullable(priority)
            .orElse(JsonNullable.undefined());
        this.status = Optional.ofNullable(status)
            .orElse(JsonNullable.undefined());
        this.statusId = Optional.ofNullable(statusId)
            .orElse(JsonNullable.undefined());
        this.tags = Optional.ofNullable(tags)
            .orElse(JsonNullable.undefined());
        this.customFields = customFields;
        this.stageLastChangedAt = Optional.ofNullable(stageLastChangedAt)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
    }
    
    public OpportunityInput(
            @Nonnull String title) {
        this(title, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null);
    }

    /**
     * The title or name of the opportunity.
     */
    public String title() {
        return this.title;
    }

    /**
     * The unique identifier of the primary contact associated with the opportunity.
     */
    public JsonNullable<String> primaryContactId() {
        return this.primaryContactId;
    }

    /**
     * A description of the opportunity.
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * The type of the opportunity
     */
    public JsonNullable<String> type() {
        return this.type;
    }

    /**
     * The monetary value associated with the opportunity
     */
    public JsonNullable<Double> monetaryAmount() {
        return this.monetaryAmount;
    }

    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    public JsonNullable<Currency> currency() {
        return this.currency;
    }

    /**
     * The probability of winning the opportunity, expressed as a percentage.
     */
    public JsonNullable<Double> winProbability() {
        return this.winProbability;
    }

    /**
     * The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.
     */
    public JsonNullable<LocalDate> closeDate() {
        return this.closeDate;
    }

    /**
     * The unique identifier of the reason why the opportunity was lost.
     */
    public JsonNullable<String> lossReasonId() {
        return this.lossReasonId;
    }

    /**
     * The reason why the opportunity was lost.
     */
    public JsonNullable<String> lossReason() {
        return this.lossReason;
    }

    /**
     * The unique identifier of the reason why the opportunity was won.
     */
    public JsonNullable<String> wonReasonId() {
        return this.wonReasonId;
    }

    /**
     * The reason why the opportunity was won.
     */
    public JsonNullable<String> wonReason() {
        return this.wonReason;
    }

    /**
     * The unique identifier of the pipeline associated with the opportunity
     */
    public JsonNullable<String> pipelineId() {
        return this.pipelineId;
    }

    /**
     * The unique identifier of the stage in the pipeline associated with the opportunity.
     */
    public JsonNullable<String> pipelineStageId() {
        return this.pipelineStageId;
    }

    /**
     * The unique identifier of the source of the opportunity.
     */
    public JsonNullable<String> sourceId() {
        return this.sourceId;
    }

    /**
     * The unique identifier of the lead associated with the opportunity.
     */
    public JsonNullable<String> leadId() {
        return this.leadId;
    }

    /**
     * The source of the lead associated with the opportunity.
     */
    public JsonNullable<String> leadSource() {
        return this.leadSource;
    }

    /**
     * The unique identifier of the contact associated with the opportunity.
     */
    public JsonNullable<String> contactId() {
        return this.contactId;
    }

    /**
     * An array of unique identifiers of all contacts associated with the opportunity.
     */
    public Optional<List<String>> contactIds() {
        return Optional.ofNullable(this.contactIds);
    }

    /**
     * The unique identifier of the company associated with the opportunity.
     */
    public JsonNullable<String> companyId() {
        return this.companyId;
    }

    /**
     * The name of the company associated with the opportunity.
     */
    public JsonNullable<String> companyName() {
        return this.companyName;
    }

    /**
     * The unique identifier of the user who owns the opportunity.
     */
    public JsonNullable<String> ownerId() {
        return this.ownerId;
    }

    /**
     * The priority level of the opportunity.
     */
    public JsonNullable<String> priority() {
        return this.priority;
    }

    /**
     * The current status of the opportunity.
     */
    public JsonNullable<String> status() {
        return this.status;
    }

    /**
     * The unique identifier of the current status of the opportunity.
     */
    public JsonNullable<String> statusId() {
        return this.statusId;
    }

    public JsonNullable<List<String>> tags() {
        return this.tags;
    }

    public Optional<List<CustomField>> customFields() {
        return Optional.ofNullable(this.customFields);
    }

    /**
     * The date and time when the stage of the opportunity was last changed.
     */
    public JsonNullable<OffsetDateTime> stageLastChangedAt() {
        return this.stageLastChangedAt;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The title or name of the opportunity.
     */
    public OpportunityInput withTitle(@Nonnull String title) {
        this.title = Utils.checkNotNull(title, "title");
        return this;
    }


    /**
     * The unique identifier of the primary contact associated with the opportunity.
     */
    public OpportunityInput withPrimaryContactId(@Nullable String primaryContactId) {
        this.primaryContactId = JsonNullable.of(primaryContactId);
        return this;
    }


    /**
     * A description of the opportunity.
     */
    public OpportunityInput withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * The type of the opportunity
     */
    public OpportunityInput withType(@Nullable String type) {
        this.type = JsonNullable.of(type);
        return this;
    }


    /**
     * The monetary value associated with the opportunity
     */
    public OpportunityInput withMonetaryAmount(@Nullable Double monetaryAmount) {
        this.monetaryAmount = JsonNullable.of(monetaryAmount);
        return this;
    }


    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    public OpportunityInput withCurrency(@Nullable Currency currency) {
        this.currency = JsonNullable.of(currency);
        return this;
    }


    /**
     * The probability of winning the opportunity, expressed as a percentage.
     */
    public OpportunityInput withWinProbability(@Nullable Double winProbability) {
        this.winProbability = JsonNullable.of(winProbability);
        return this;
    }


    /**
     * The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.
     */
    public OpportunityInput withCloseDate(@Nullable LocalDate closeDate) {
        this.closeDate = JsonNullable.of(closeDate);
        return this;
    }


    /**
     * The unique identifier of the reason why the opportunity was lost.
     */
    public OpportunityInput withLossReasonId(@Nullable String lossReasonId) {
        this.lossReasonId = JsonNullable.of(lossReasonId);
        return this;
    }


    /**
     * The reason why the opportunity was lost.
     */
    public OpportunityInput withLossReason(@Nullable String lossReason) {
        this.lossReason = JsonNullable.of(lossReason);
        return this;
    }


    /**
     * The unique identifier of the reason why the opportunity was won.
     */
    public OpportunityInput withWonReasonId(@Nullable String wonReasonId) {
        this.wonReasonId = JsonNullable.of(wonReasonId);
        return this;
    }


    /**
     * The reason why the opportunity was won.
     */
    public OpportunityInput withWonReason(@Nullable String wonReason) {
        this.wonReason = JsonNullable.of(wonReason);
        return this;
    }


    /**
     * The unique identifier of the pipeline associated with the opportunity
     */
    public OpportunityInput withPipelineId(@Nullable String pipelineId) {
        this.pipelineId = JsonNullable.of(pipelineId);
        return this;
    }


    /**
     * The unique identifier of the stage in the pipeline associated with the opportunity.
     */
    public OpportunityInput withPipelineStageId(@Nullable String pipelineStageId) {
        this.pipelineStageId = JsonNullable.of(pipelineStageId);
        return this;
    }


    /**
     * The unique identifier of the source of the opportunity.
     */
    public OpportunityInput withSourceId(@Nullable String sourceId) {
        this.sourceId = JsonNullable.of(sourceId);
        return this;
    }


    /**
     * The unique identifier of the lead associated with the opportunity.
     */
    public OpportunityInput withLeadId(@Nullable String leadId) {
        this.leadId = JsonNullable.of(leadId);
        return this;
    }


    /**
     * The source of the lead associated with the opportunity.
     */
    public OpportunityInput withLeadSource(@Nullable String leadSource) {
        this.leadSource = JsonNullable.of(leadSource);
        return this;
    }


    /**
     * The unique identifier of the contact associated with the opportunity.
     */
    public OpportunityInput withContactId(@Nullable String contactId) {
        this.contactId = JsonNullable.of(contactId);
        return this;
    }


    /**
     * An array of unique identifiers of all contacts associated with the opportunity.
     */
    public OpportunityInput withContactIds(@Nullable List<String> contactIds) {
        this.contactIds = contactIds;
        return this;
    }


    /**
     * The unique identifier of the company associated with the opportunity.
     */
    public OpportunityInput withCompanyId(@Nullable String companyId) {
        this.companyId = JsonNullable.of(companyId);
        return this;
    }


    /**
     * The name of the company associated with the opportunity.
     */
    public OpportunityInput withCompanyName(@Nullable String companyName) {
        this.companyName = JsonNullable.of(companyName);
        return this;
    }


    /**
     * The unique identifier of the user who owns the opportunity.
     */
    public OpportunityInput withOwnerId(@Nullable String ownerId) {
        this.ownerId = JsonNullable.of(ownerId);
        return this;
    }


    /**
     * The priority level of the opportunity.
     */
    public OpportunityInput withPriority(@Nullable String priority) {
        this.priority = JsonNullable.of(priority);
        return this;
    }


    /**
     * The current status of the opportunity.
     */
    public OpportunityInput withStatus(@Nullable String status) {
        this.status = JsonNullable.of(status);
        return this;
    }


    /**
     * The unique identifier of the current status of the opportunity.
     */
    public OpportunityInput withStatusId(@Nullable String statusId) {
        this.statusId = JsonNullable.of(statusId);
        return this;
    }


    public OpportunityInput withTags(@Nullable List<String> tags) {
        this.tags = JsonNullable.of(tags);
        return this;
    }


    public OpportunityInput withCustomFields(@Nullable List<CustomField> customFields) {
        this.customFields = customFields;
        return this;
    }


    /**
     * The date and time when the stage of the opportunity was last changed.
     */
    public OpportunityInput withStageLastChangedAt(@Nullable OffsetDateTime stageLastChangedAt) {
        this.stageLastChangedAt = JsonNullable.of(stageLastChangedAt);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public OpportunityInput withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpportunityInput other = (OpportunityInput) o;
        return 
            Utils.enhancedDeepEquals(this.title, other.title) &&
            Utils.enhancedDeepEquals(this.primaryContactId, other.primaryContactId) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.monetaryAmount, other.monetaryAmount) &&
            Utils.enhancedDeepEquals(this.currency, other.currency) &&
            Utils.enhancedDeepEquals(this.winProbability, other.winProbability) &&
            Utils.enhancedDeepEquals(this.closeDate, other.closeDate) &&
            Utils.enhancedDeepEquals(this.lossReasonId, other.lossReasonId) &&
            Utils.enhancedDeepEquals(this.lossReason, other.lossReason) &&
            Utils.enhancedDeepEquals(this.wonReasonId, other.wonReasonId) &&
            Utils.enhancedDeepEquals(this.wonReason, other.wonReason) &&
            Utils.enhancedDeepEquals(this.pipelineId, other.pipelineId) &&
            Utils.enhancedDeepEquals(this.pipelineStageId, other.pipelineStageId) &&
            Utils.enhancedDeepEquals(this.sourceId, other.sourceId) &&
            Utils.enhancedDeepEquals(this.leadId, other.leadId) &&
            Utils.enhancedDeepEquals(this.leadSource, other.leadSource) &&
            Utils.enhancedDeepEquals(this.contactId, other.contactId) &&
            Utils.enhancedDeepEquals(this.contactIds, other.contactIds) &&
            Utils.enhancedDeepEquals(this.companyId, other.companyId) &&
            Utils.enhancedDeepEquals(this.companyName, other.companyName) &&
            Utils.enhancedDeepEquals(this.ownerId, other.ownerId) &&
            Utils.enhancedDeepEquals(this.priority, other.priority) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.statusId, other.statusId) &&
            Utils.enhancedDeepEquals(this.tags, other.tags) &&
            Utils.enhancedDeepEquals(this.customFields, other.customFields) &&
            Utils.enhancedDeepEquals(this.stageLastChangedAt, other.stageLastChangedAt) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            title, primaryContactId, description,
            type, monetaryAmount, currency,
            winProbability, closeDate, lossReasonId,
            lossReason, wonReasonId, wonReason,
            pipelineId, pipelineStageId, sourceId,
            leadId, leadSource, contactId,
            contactIds, companyId, companyName,
            ownerId, priority, status,
            statusId, tags, customFields,
            stageLastChangedAt, passThrough);
    }
    
    @Override
    public String toString() {
        return Utils.toString(OpportunityInput.class,
                "title", title,
                "primaryContactId", primaryContactId,
                "description", description,
                "type", type,
                "monetaryAmount", monetaryAmount,
                "currency", currency,
                "winProbability", winProbability,
                "closeDate", closeDate,
                "lossReasonId", lossReasonId,
                "lossReason", lossReason,
                "wonReasonId", wonReasonId,
                "wonReason", wonReason,
                "pipelineId", pipelineId,
                "pipelineStageId", pipelineStageId,
                "sourceId", sourceId,
                "leadId", leadId,
                "leadSource", leadSource,
                "contactId", contactId,
                "contactIds", contactIds,
                "companyId", companyId,
                "companyName", companyName,
                "ownerId", ownerId,
                "priority", priority,
                "status", status,
                "statusId", statusId,
                "tags", tags,
                "customFields", customFields,
                "stageLastChangedAt", stageLastChangedAt,
                "passThrough", passThrough);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String title;

        private JsonNullable<String> primaryContactId;

        private JsonNullable<String> description;

        private JsonNullable<String> type;

        private JsonNullable<Double> monetaryAmount;

        private JsonNullable<Currency> currency;

        private JsonNullable<Double> winProbability;

        private JsonNullable<LocalDate> closeDate;

        private JsonNullable<String> lossReasonId;

        private JsonNullable<String> lossReason;

        private JsonNullable<String> wonReasonId;

        private JsonNullable<String> wonReason;

        private JsonNullable<String> pipelineId;

        private JsonNullable<String> pipelineStageId;

        private JsonNullable<String> sourceId;

        private JsonNullable<String> leadId;

        private JsonNullable<String> leadSource;

        private JsonNullable<String> contactId;

        private List<String> contactIds;

        private JsonNullable<String> companyId;

        private JsonNullable<String> companyName;

        private JsonNullable<String> ownerId;

        private JsonNullable<String> priority;

        private JsonNullable<String> status;

        private JsonNullable<String> statusId;

        private JsonNullable<List<String>> tags;

        private List<CustomField> customFields;

        private JsonNullable<OffsetDateTime> stageLastChangedAt;

        private List<PassThroughBody> passThrough;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The title or name of the opportunity.
         */
        public Builder title(@Nonnull String title) {
            this.title = Utils.checkNotNull(title, "title");
            return this;
        }

        /**
         * The unique identifier of the primary contact associated with the opportunity.
         */
        public Builder primaryContactId(@Nullable String primaryContactId) {
            this.primaryContactId = JsonNullable.of(primaryContactId);
            return this;
        }

        /**
         * A description of the opportunity.
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The type of the opportunity
         */
        public Builder type(@Nullable String type) {
            this.type = JsonNullable.of(type);
            return this;
        }

        /**
         * The monetary value associated with the opportunity
         */
        public Builder monetaryAmount(@Nullable Double monetaryAmount) {
            this.monetaryAmount = JsonNullable.of(monetaryAmount);
            return this;
        }

        /**
         * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
         */
        public Builder currency(@Nullable Currency currency) {
            this.currency = JsonNullable.of(currency);
            return this;
        }

        /**
         * The probability of winning the opportunity, expressed as a percentage.
         */
        public Builder winProbability(@Nullable Double winProbability) {
            this.winProbability = JsonNullable.of(winProbability);
            return this;
        }

        /**
         * The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.
         */
        public Builder closeDate(@Nullable LocalDate closeDate) {
            this.closeDate = JsonNullable.of(closeDate);
            return this;
        }

        /**
         * The unique identifier of the reason why the opportunity was lost.
         */
        public Builder lossReasonId(@Nullable String lossReasonId) {
            this.lossReasonId = JsonNullable.of(lossReasonId);
            return this;
        }

        /**
         * The reason why the opportunity was lost.
         */
        public Builder lossReason(@Nullable String lossReason) {
            this.lossReason = JsonNullable.of(lossReason);
            return this;
        }

        /**
         * The unique identifier of the reason why the opportunity was won.
         */
        public Builder wonReasonId(@Nullable String wonReasonId) {
            this.wonReasonId = JsonNullable.of(wonReasonId);
            return this;
        }

        /**
         * The reason why the opportunity was won.
         */
        public Builder wonReason(@Nullable String wonReason) {
            this.wonReason = JsonNullable.of(wonReason);
            return this;
        }

        /**
         * The unique identifier of the pipeline associated with the opportunity
         */
        public Builder pipelineId(@Nullable String pipelineId) {
            this.pipelineId = JsonNullable.of(pipelineId);
            return this;
        }

        /**
         * The unique identifier of the stage in the pipeline associated with the opportunity.
         */
        public Builder pipelineStageId(@Nullable String pipelineStageId) {
            this.pipelineStageId = JsonNullable.of(pipelineStageId);
            return this;
        }

        /**
         * The unique identifier of the source of the opportunity.
         */
        public Builder sourceId(@Nullable String sourceId) {
            this.sourceId = JsonNullable.of(sourceId);
            return this;
        }

        /**
         * The unique identifier of the lead associated with the opportunity.
         */
        public Builder leadId(@Nullable String leadId) {
            this.leadId = JsonNullable.of(leadId);
            return this;
        }

        /**
         * The source of the lead associated with the opportunity.
         */
        public Builder leadSource(@Nullable String leadSource) {
            this.leadSource = JsonNullable.of(leadSource);
            return this;
        }

        /**
         * The unique identifier of the contact associated with the opportunity.
         */
        public Builder contactId(@Nullable String contactId) {
            this.contactId = JsonNullable.of(contactId);
            return this;
        }

        /**
         * An array of unique identifiers of all contacts associated with the opportunity.
         */
        public Builder contactIds(@Nullable List<String> contactIds) {
            this.contactIds = contactIds;
            return this;
        }

        /**
         * The unique identifier of the company associated with the opportunity.
         */
        public Builder companyId(@Nullable String companyId) {
            this.companyId = JsonNullable.of(companyId);
            return this;
        }

        /**
         * The name of the company associated with the opportunity.
         */
        public Builder companyName(@Nullable String companyName) {
            this.companyName = JsonNullable.of(companyName);
            return this;
        }

        /**
         * The unique identifier of the user who owns the opportunity.
         */
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = JsonNullable.of(ownerId);
            return this;
        }

        /**
         * The priority level of the opportunity.
         */
        public Builder priority(@Nullable String priority) {
            this.priority = JsonNullable.of(priority);
            return this;
        }

        /**
         * The current status of the opportunity.
         */
        public Builder status(@Nullable String status) {
            this.status = JsonNullable.of(status);
            return this;
        }

        /**
         * The unique identifier of the current status of the opportunity.
         */
        public Builder statusId(@Nullable String statusId) {
            this.statusId = JsonNullable.of(statusId);
            return this;
        }

        public Builder tags(@Nullable List<String> tags) {
            this.tags = JsonNullable.of(tags);
            return this;
        }

        public Builder customFields(@Nullable List<CustomField> customFields) {
            this.customFields = customFields;
            return this;
        }

        /**
         * The date and time when the stage of the opportunity was last changed.
         */
        public Builder stageLastChangedAt(@Nullable OffsetDateTime stageLastChangedAt) {
            this.stageLastChangedAt = JsonNullable.of(stageLastChangedAt);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        public OpportunityInput build() {
            return new OpportunityInput(
                title, primaryContactId, description,
                type, monetaryAmount, currency,
                winProbability, closeDate, lossReasonId,
                lossReason, wonReasonId, wonReason,
                pipelineId, pipelineStageId, sourceId,
                leadId, leadSource, contactId,
                contactIds, companyId, companyName,
                ownerId, priority, status,
                statusId, tags, customFields,
                stageLastChangedAt, passThrough);
        }

    }
}
