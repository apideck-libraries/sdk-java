/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class OutstandingBalanceByCurrency {
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    private JsonNullable<Currency> currency;

    /**
     * Total amount of the outstanding balance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_amount")
    private Double totalAmount;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balances_by_period")
    private List<BalanceByPeriod> balancesByPeriod;

    @JsonCreator
    public OutstandingBalanceByCurrency(
            @JsonProperty("currency") @Nullable JsonNullable<Currency> currency,
            @JsonProperty("total_amount") @Nullable Double totalAmount,
            @JsonProperty("balances_by_period") @Nullable List<BalanceByPeriod> balancesByPeriod) {
        this.currency = Optional.ofNullable(currency)
            .orElse(JsonNullable.undefined());
        this.totalAmount = totalAmount;
        this.balancesByPeriod = balancesByPeriod;
    }
    
    public OutstandingBalanceByCurrency() {
        this(null, null, null);
    }

    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    public JsonNullable<Currency> currency() {
        return this.currency;
    }

    /**
     * Total amount of the outstanding balance.
     */
    public Optional<Double> totalAmount() {
        return Optional.ofNullable(this.totalAmount);
    }

    public Optional<List<BalanceByPeriod>> balancesByPeriod() {
        return Optional.ofNullable(this.balancesByPeriod);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    public OutstandingBalanceByCurrency withCurrency(@Nullable Currency currency) {
        this.currency = JsonNullable.of(currency);
        return this;
    }


    /**
     * Total amount of the outstanding balance.
     */
    public OutstandingBalanceByCurrency withTotalAmount(@Nullable Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }


    public OutstandingBalanceByCurrency withBalancesByPeriod(@Nullable List<BalanceByPeriod> balancesByPeriod) {
        this.balancesByPeriod = balancesByPeriod;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OutstandingBalanceByCurrency other = (OutstandingBalanceByCurrency) o;
        return 
            Utils.enhancedDeepEquals(this.currency, other.currency) &&
            Utils.enhancedDeepEquals(this.totalAmount, other.totalAmount) &&
            Utils.enhancedDeepEquals(this.balancesByPeriod, other.balancesByPeriod);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            currency, totalAmount, balancesByPeriod);
    }
    
    @Override
    public String toString() {
        return Utils.toString(OutstandingBalanceByCurrency.class,
                "currency", currency,
                "totalAmount", totalAmount,
                "balancesByPeriod", balancesByPeriod);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<Currency> currency;

        private Double totalAmount;

        private List<BalanceByPeriod> balancesByPeriod;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
         */
        public Builder currency(@Nullable Currency currency) {
            this.currency = JsonNullable.of(currency);
            return this;
        }

        /**
         * Total amount of the outstanding balance.
         */
        public Builder totalAmount(@Nullable Double totalAmount) {
            this.totalAmount = totalAmount;
            return this;
        }

        public Builder balancesByPeriod(@Nullable List<BalanceByPeriod> balancesByPeriod) {
            this.balancesByPeriod = balancesByPeriod;
            return this;
        }

        public OutstandingBalanceByCurrency build() {
            return new OutstandingBalanceByCurrency(
                currency, totalAmount, balancesByPeriod);
        }

    }
}
