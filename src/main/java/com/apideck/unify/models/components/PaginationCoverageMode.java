/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * PaginationCoverageMode
 * 
 * <p>How pagination is implemented on this connector. Native mode means Apideck is using the pagination parameters of the connector. With virtual pagination, the connector does not support pagination, but Apideck emulates it.
 */
public enum PaginationCoverageMode {
    NATIVE("native"),
    VIRTUAL("virtual");

    @JsonValue
    private final String value;

    PaginationCoverageMode(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<PaginationCoverageMode> fromValue(String value) {
        for (PaginationCoverageMode o: PaginationCoverageMode.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

