/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class PayrollsFilter {
    /**
     * Return payrolls whose pay period is after the start date
     */
    @SpeakeasyMetadata("queryParam:name=start_date")
    private String startDate;

    /**
     * Return payrolls whose pay period is before the end date
     */
    @SpeakeasyMetadata("queryParam:name=end_date")
    private String endDate;

    @JsonCreator
    public PayrollsFilter(
            @Nullable String startDate,
            @Nullable String endDate) {
        this.startDate = startDate;
        this.endDate = endDate;
    }
    
    public PayrollsFilter() {
        this(null, null);
    }

    /**
     * Return payrolls whose pay period is after the start date
     */
    public Optional<String> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * Return payrolls whose pay period is before the end date
     */
    public Optional<String> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Return payrolls whose pay period is after the start date
     */
    public PayrollsFilter withStartDate(@Nullable String startDate) {
        this.startDate = startDate;
        return this;
    }


    /**
     * Return payrolls whose pay period is before the end date
     */
    public PayrollsFilter withEndDate(@Nullable String endDate) {
        this.endDate = endDate;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PayrollsFilter other = (PayrollsFilter) o;
        return 
            Utils.enhancedDeepEquals(this.startDate, other.startDate) &&
            Utils.enhancedDeepEquals(this.endDate, other.endDate);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            startDate, endDate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PayrollsFilter.class,
                "startDate", startDate,
                "endDate", endDate);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String startDate;

        private String endDate;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Return payrolls whose pay period is after the start date
         */
        public Builder startDate(@Nullable String startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Return payrolls whose pay period is before the end date
         */
        public Builder endDate(@Nullable String endDate) {
            this.endDate = endDate;
            return this;
        }

        public PayrollsFilter build() {
            return new PayrollsFilter(
                startDate, endDate);
        }

    }
}
