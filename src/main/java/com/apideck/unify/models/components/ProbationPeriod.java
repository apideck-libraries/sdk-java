/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class ProbationPeriod {
    /**
     * The date that the employee started their probation period at the company.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_date")
    private JsonNullable<LocalDate> startDate;

    /**
     * The date that the employee ended their probation period at the company.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_date")
    private JsonNullable<LocalDate> endDate;

    @JsonCreator
    public ProbationPeriod(
            @JsonProperty("start_date") @Nullable JsonNullable<LocalDate> startDate,
            @JsonProperty("end_date") @Nullable JsonNullable<LocalDate> endDate) {
        this.startDate = Optional.ofNullable(startDate)
            .orElse(JsonNullable.undefined());
        this.endDate = Optional.ofNullable(endDate)
            .orElse(JsonNullable.undefined());
    }
    
    public ProbationPeriod() {
        this(null, null);
    }

    /**
     * The date that the employee started their probation period at the company.
     */
    public JsonNullable<LocalDate> startDate() {
        return this.startDate;
    }

    /**
     * The date that the employee ended their probation period at the company.
     */
    public JsonNullable<LocalDate> endDate() {
        return this.endDate;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The date that the employee started their probation period at the company.
     */
    public ProbationPeriod withStartDate(@Nullable LocalDate startDate) {
        this.startDate = JsonNullable.of(startDate);
        return this;
    }


    /**
     * The date that the employee ended their probation period at the company.
     */
    public ProbationPeriod withEndDate(@Nullable LocalDate endDate) {
        this.endDate = JsonNullable.of(endDate);
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProbationPeriod other = (ProbationPeriod) o;
        return 
            Utils.enhancedDeepEquals(this.startDate, other.startDate) &&
            Utils.enhancedDeepEquals(this.endDate, other.endDate);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            startDate, endDate);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProbationPeriod.class,
                "startDate", startDate,
                "endDate", endDate);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<LocalDate> startDate;

        private JsonNullable<LocalDate> endDate;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The date that the employee started their probation period at the company.
         */
        public Builder startDate(@Nullable LocalDate startDate) {
            this.startDate = JsonNullable.of(startDate);
            return this;
        }

        /**
         * The date that the employee ended their probation period at the company.
         */
        public Builder endDate(@Nullable LocalDate endDate) {
            this.endDate = JsonNullable.of(endDate);
            return this;
        }

        public ProbationPeriod build() {
            return new ProbationPeriod(
                startDate, endDate);
        }

    }
}
