/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class Resources {
    /**
     * ID of the resource, typically a lowercased version of its name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * Name of the resource (plural)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private String name;

    /**
     * Status of the resource. Resources with status live or beta are callable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private ResourceStatus status;

    /**
     * Exclude from mapping coverage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excluded_from_coverage")
    private Boolean excludedFromCoverage;

    @JsonCreator
    public Resources(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("name") @Nullable String name,
            @JsonProperty("status") @Nullable ResourceStatus status,
            @JsonProperty("excluded_from_coverage") @Nullable Boolean excludedFromCoverage) {
        this.id = id;
        this.name = name;
        this.status = status;
        this.excludedFromCoverage = excludedFromCoverage;
    }
    
    public Resources() {
        this(null, null, null,
            null);
    }

    /**
     * ID of the resource, typically a lowercased version of its name.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Name of the resource (plural)
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Status of the resource. Resources with status live or beta are callable.
     */
    public Optional<ResourceStatus> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Exclude from mapping coverage
     */
    public Optional<Boolean> excludedFromCoverage() {
        return Optional.ofNullable(this.excludedFromCoverage);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * ID of the resource, typically a lowercased version of its name.
     */
    public Resources withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * Name of the resource (plural)
     */
    public Resources withName(@Nullable String name) {
        this.name = name;
        return this;
    }


    /**
     * Status of the resource. Resources with status live or beta are callable.
     */
    public Resources withStatus(@Nullable ResourceStatus status) {
        this.status = status;
        return this;
    }


    /**
     * Exclude from mapping coverage
     */
    public Resources withExcludedFromCoverage(@Nullable Boolean excludedFromCoverage) {
        this.excludedFromCoverage = excludedFromCoverage;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Resources other = (Resources) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.excludedFromCoverage, other.excludedFromCoverage);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, name, status,
            excludedFromCoverage);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Resources.class,
                "id", id,
                "name", name,
                "status", status,
                "excludedFromCoverage", excludedFromCoverage);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private String name;

        private ResourceStatus status;

        private Boolean excludedFromCoverage;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the resource, typically a lowercased version of its name.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * Name of the resource (plural)
         */
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }

        /**
         * Status of the resource. Resources with status live or beta are callable.
         */
        public Builder status(@Nullable ResourceStatus status) {
            this.status = status;
            return this;
        }

        /**
         * Exclude from mapping coverage
         */
        public Builder excludedFromCoverage(@Nullable Boolean excludedFromCoverage) {
            this.excludedFromCoverage = excludedFromCoverage;
            return this;
        }

        public Resources build() {
            return new Resources(
                id, name, status,
                excludedFromCoverage);
        }

    }
}
