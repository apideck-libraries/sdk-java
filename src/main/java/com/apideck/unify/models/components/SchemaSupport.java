/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * SchemaSupport
 * 
 * <p>When a connector has schema_support, a call can be made to retrieve a json schema that describes a downstream resource.
 */
public class SchemaSupport {
    /**
     * Can a resource schema be retrieved for this connector?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supported")
    private Boolean supported;

    @JsonCreator
    public SchemaSupport(
            @JsonProperty("supported") @Nullable Boolean supported) {
        this.supported = supported;
    }
    
    public SchemaSupport() {
        this(null);
    }

    /**
     * Can a resource schema be retrieved for this connector?
     */
    public Optional<Boolean> supported() {
        return Optional.ofNullable(this.supported);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Can a resource schema be retrieved for this connector?
     */
    public SchemaSupport withSupported(@Nullable Boolean supported) {
        this.supported = supported;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SchemaSupport other = (SchemaSupport) o;
        return 
            Utils.enhancedDeepEquals(this.supported, other.supported);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            supported);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SchemaSupport.class,
                "supported", supported);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Boolean supported;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Can a resource schema be retrieved for this connector?
         */
        public Builder supported(@Nullable Boolean supported) {
            this.supported = supported;
            return this;
        }

        public SchemaSupport build() {
            return new SchemaSupport(
                supported);
        }

    }
}
