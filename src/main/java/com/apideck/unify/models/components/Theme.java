/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

/**
 * Theme
 * 
 * <p>Theming options to change the look and feel of Vault.
 */
public class Theme {
    /**
     * The URL to the favicon to use for Vault.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("favicon")
    private String favicon;

    /**
     * The URL to the logo to use for Vault.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logo")
    private String logo;

    /**
     * The primary color to use for Vault.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primary_color")
    private String primaryColor;

    /**
     * The background color to use for the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sidepanel_background_color")
    private String sidepanelBackgroundColor;

    /**
     * The text color to use for the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sidepanel_text_color")
    private String sidepanelTextColor;

    /**
     * The name that will be shown in the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vault_name")
    private String vaultName;

    /**
     * The URL to the privacy policy that will be shown in the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privacy_url")
    private String privacyUrl;

    /**
     * The URL to the terms and conditions that will be shown in the sidebar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terms_url")
    private String termsUrl;

    @JsonCreator
    public Theme(
            @JsonProperty("favicon") @Nullable String favicon,
            @JsonProperty("logo") @Nullable String logo,
            @JsonProperty("primary_color") @Nullable String primaryColor,
            @JsonProperty("sidepanel_background_color") @Nullable String sidepanelBackgroundColor,
            @JsonProperty("sidepanel_text_color") @Nullable String sidepanelTextColor,
            @JsonProperty("vault_name") @Nullable String vaultName,
            @JsonProperty("privacy_url") @Nullable String privacyUrl,
            @JsonProperty("terms_url") @Nullable String termsUrl) {
        this.favicon = favicon;
        this.logo = logo;
        this.primaryColor = primaryColor;
        this.sidepanelBackgroundColor = sidepanelBackgroundColor;
        this.sidepanelTextColor = sidepanelTextColor;
        this.vaultName = vaultName;
        this.privacyUrl = privacyUrl;
        this.termsUrl = termsUrl;
    }
    
    public Theme() {
        this(null, null, null,
            null, null, null,
            null, null);
    }

    /**
     * The URL to the favicon to use for Vault.
     */
    public Optional<String> favicon() {
        return Optional.ofNullable(this.favicon);
    }

    /**
     * The URL to the logo to use for Vault.
     */
    public Optional<String> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * The primary color to use for Vault.
     */
    public Optional<String> primaryColor() {
        return Optional.ofNullable(this.primaryColor);
    }

    /**
     * The background color to use for the sidebar.
     */
    public Optional<String> sidepanelBackgroundColor() {
        return Optional.ofNullable(this.sidepanelBackgroundColor);
    }

    /**
     * The text color to use for the sidebar.
     */
    public Optional<String> sidepanelTextColor() {
        return Optional.ofNullable(this.sidepanelTextColor);
    }

    /**
     * The name that will be shown in the sidebar.
     */
    public Optional<String> vaultName() {
        return Optional.ofNullable(this.vaultName);
    }

    /**
     * The URL to the privacy policy that will be shown in the sidebar.
     */
    public Optional<String> privacyUrl() {
        return Optional.ofNullable(this.privacyUrl);
    }

    /**
     * The URL to the terms and conditions that will be shown in the sidebar.
     */
    public Optional<String> termsUrl() {
        return Optional.ofNullable(this.termsUrl);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The URL to the favicon to use for Vault.
     */
    public Theme withFavicon(@Nullable String favicon) {
        this.favicon = favicon;
        return this;
    }


    /**
     * The URL to the logo to use for Vault.
     */
    public Theme withLogo(@Nullable String logo) {
        this.logo = logo;
        return this;
    }


    /**
     * The primary color to use for Vault.
     */
    public Theme withPrimaryColor(@Nullable String primaryColor) {
        this.primaryColor = primaryColor;
        return this;
    }


    /**
     * The background color to use for the sidebar.
     */
    public Theme withSidepanelBackgroundColor(@Nullable String sidepanelBackgroundColor) {
        this.sidepanelBackgroundColor = sidepanelBackgroundColor;
        return this;
    }


    /**
     * The text color to use for the sidebar.
     */
    public Theme withSidepanelTextColor(@Nullable String sidepanelTextColor) {
        this.sidepanelTextColor = sidepanelTextColor;
        return this;
    }


    /**
     * The name that will be shown in the sidebar.
     */
    public Theme withVaultName(@Nullable String vaultName) {
        this.vaultName = vaultName;
        return this;
    }


    /**
     * The URL to the privacy policy that will be shown in the sidebar.
     */
    public Theme withPrivacyUrl(@Nullable String privacyUrl) {
        this.privacyUrl = privacyUrl;
        return this;
    }


    /**
     * The URL to the terms and conditions that will be shown in the sidebar.
     */
    public Theme withTermsUrl(@Nullable String termsUrl) {
        this.termsUrl = termsUrl;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Theme other = (Theme) o;
        return 
            Utils.enhancedDeepEquals(this.favicon, other.favicon) &&
            Utils.enhancedDeepEquals(this.logo, other.logo) &&
            Utils.enhancedDeepEquals(this.primaryColor, other.primaryColor) &&
            Utils.enhancedDeepEquals(this.sidepanelBackgroundColor, other.sidepanelBackgroundColor) &&
            Utils.enhancedDeepEquals(this.sidepanelTextColor, other.sidepanelTextColor) &&
            Utils.enhancedDeepEquals(this.vaultName, other.vaultName) &&
            Utils.enhancedDeepEquals(this.privacyUrl, other.privacyUrl) &&
            Utils.enhancedDeepEquals(this.termsUrl, other.termsUrl);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            favicon, logo, primaryColor,
            sidepanelBackgroundColor, sidepanelTextColor, vaultName,
            privacyUrl, termsUrl);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Theme.class,
                "favicon", favicon,
                "logo", logo,
                "primaryColor", primaryColor,
                "sidepanelBackgroundColor", sidepanelBackgroundColor,
                "sidepanelTextColor", sidepanelTextColor,
                "vaultName", vaultName,
                "privacyUrl", privacyUrl,
                "termsUrl", termsUrl);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String favicon;

        private String logo;

        private String primaryColor;

        private String sidepanelBackgroundColor;

        private String sidepanelTextColor;

        private String vaultName;

        private String privacyUrl;

        private String termsUrl;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The URL to the favicon to use for Vault.
         */
        public Builder favicon(@Nullable String favicon) {
            this.favicon = favicon;
            return this;
        }

        /**
         * The URL to the logo to use for Vault.
         */
        public Builder logo(@Nullable String logo) {
            this.logo = logo;
            return this;
        }

        /**
         * The primary color to use for Vault.
         */
        public Builder primaryColor(@Nullable String primaryColor) {
            this.primaryColor = primaryColor;
            return this;
        }

        /**
         * The background color to use for the sidebar.
         */
        public Builder sidepanelBackgroundColor(@Nullable String sidepanelBackgroundColor) {
            this.sidepanelBackgroundColor = sidepanelBackgroundColor;
            return this;
        }

        /**
         * The text color to use for the sidebar.
         */
        public Builder sidepanelTextColor(@Nullable String sidepanelTextColor) {
            this.sidepanelTextColor = sidepanelTextColor;
            return this;
        }

        /**
         * The name that will be shown in the sidebar.
         */
        public Builder vaultName(@Nullable String vaultName) {
            this.vaultName = vaultName;
            return this;
        }

        /**
         * The URL to the privacy policy that will be shown in the sidebar.
         */
        public Builder privacyUrl(@Nullable String privacyUrl) {
            this.privacyUrl = privacyUrl;
            return this;
        }

        /**
         * The URL to the terms and conditions that will be shown in the sidebar.
         */
        public Builder termsUrl(@Nullable String termsUrl) {
            this.termsUrl = termsUrl;
            return this;
        }

        public Theme build() {
            return new Theme(
                favicon, logo, primaryColor,
                sidepanelBackgroundColor, sidepanelTextColor, vaultName,
                privacyUrl, termsUrl);
        }

    }
}
