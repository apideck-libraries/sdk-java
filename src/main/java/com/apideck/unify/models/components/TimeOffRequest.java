/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Double;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class TimeOffRequest {
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    private String id;

    /**
     * ID of the employee
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employee_id")
    private JsonNullable<String> employeeId;

    /**
     * ID of the policy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policy_id")
    private JsonNullable<String> policyId;

    /**
     * The status of the time off request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private JsonNullable<TimeOffRequestStatusStatus> status;

    /**
     * Description of the time off request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The start date of the time off request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_date")
    private JsonNullable<String> startDate;

    /**
     * The end date of the time off request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_date")
    private JsonNullable<String> endDate;

    /**
     * The date the request was made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request_date")
    private JsonNullable<String> requestDate;

    /**
     * The type of request
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request_type")
    private JsonNullable<RequestType> requestType;

    /**
     * The date the request was approved
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approval_date")
    private JsonNullable<String> approvalDate;

    /**
     * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("units")
    private JsonNullable<Units> units;

    /**
     * The amount of time off requested.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    private JsonNullable<Double> amount;

    /**
     * The day part of the time off request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("day_part")
    private JsonNullable<String> dayPart;


    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    private Notes notes;

    /**
     * When custom mappings are configured on the resource, the result is included here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_mappings")
    private JsonNullable<Map<String, Object>> customMappings;

    /**
     * The user who last updated the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    private JsonNullable<String> updatedBy;

    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    private JsonNullable<String> createdBy;

    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    private JsonNullable<OffsetDateTime> updatedAt;

    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    private JsonNullable<OffsetDateTime> createdAt;

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pass_through")
    private List<PassThroughBody> passThrough;

    /**
     * The policy type of the time off request
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policy_type")
    private String policyType;

    @JsonCreator
    public TimeOffRequest(
            @JsonProperty("id") @Nullable String id,
            @JsonProperty("employee_id") @Nullable JsonNullable<String> employeeId,
            @JsonProperty("policy_id") @Nullable JsonNullable<String> policyId,
            @JsonProperty("status") @Nullable JsonNullable<TimeOffRequestStatusStatus> status,
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("start_date") @Nullable JsonNullable<String> startDate,
            @JsonProperty("end_date") @Nullable JsonNullable<String> endDate,
            @JsonProperty("request_date") @Nullable JsonNullable<String> requestDate,
            @JsonProperty("request_type") @Nullable JsonNullable<RequestType> requestType,
            @JsonProperty("approval_date") @Nullable JsonNullable<String> approvalDate,
            @JsonProperty("units") @Nullable JsonNullable<Units> units,
            @JsonProperty("amount") @Nullable JsonNullable<Double> amount,
            @JsonProperty("day_part") @Nullable JsonNullable<String> dayPart,
            @JsonProperty("notes") @Nullable Notes notes,
            @JsonProperty("custom_mappings") @Nullable JsonNullable<Map<String, Object>> customMappings,
            @JsonProperty("updated_by") @Nullable JsonNullable<String> updatedBy,
            @JsonProperty("created_by") @Nullable JsonNullable<String> createdBy,
            @JsonProperty("updated_at") @Nullable JsonNullable<OffsetDateTime> updatedAt,
            @JsonProperty("created_at") @Nullable JsonNullable<OffsetDateTime> createdAt,
            @JsonProperty("pass_through") @Nullable List<PassThroughBody> passThrough,
            @JsonProperty("policy_type") @Nullable String policyType) {
        this.id = id;
        this.employeeId = Optional.ofNullable(employeeId)
            .orElse(JsonNullable.undefined());
        this.policyId = Optional.ofNullable(policyId)
            .orElse(JsonNullable.undefined());
        this.status = Optional.ofNullable(status)
            .orElse(JsonNullable.undefined());
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.startDate = Optional.ofNullable(startDate)
            .orElse(JsonNullable.undefined());
        this.endDate = Optional.ofNullable(endDate)
            .orElse(JsonNullable.undefined());
        this.requestDate = Optional.ofNullable(requestDate)
            .orElse(JsonNullable.undefined());
        this.requestType = Optional.ofNullable(requestType)
            .orElse(JsonNullable.undefined());
        this.approvalDate = Optional.ofNullable(approvalDate)
            .orElse(JsonNullable.undefined());
        this.units = Optional.ofNullable(units)
            .orElse(JsonNullable.undefined());
        this.amount = Optional.ofNullable(amount)
            .orElse(JsonNullable.undefined());
        this.dayPart = Optional.ofNullable(dayPart)
            .orElse(JsonNullable.undefined());
        this.notes = notes;
        this.customMappings = Optional.ofNullable(customMappings)
            .orElse(JsonNullable.undefined());
        this.updatedBy = Optional.ofNullable(updatedBy)
            .orElse(JsonNullable.undefined());
        this.createdBy = Optional.ofNullable(createdBy)
            .orElse(JsonNullable.undefined());
        this.updatedAt = Optional.ofNullable(updatedAt)
            .orElse(JsonNullable.undefined());
        this.createdAt = Optional.ofNullable(createdAt)
            .orElse(JsonNullable.undefined());
        this.passThrough = passThrough;
        this.policyType = policyType;
    }
    
    public TimeOffRequest() {
        this(null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null,
            null, null, null);
    }

    /**
     * A unique identifier for an object.
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * ID of the employee
     */
    public JsonNullable<String> employeeId() {
        return this.employeeId;
    }

    /**
     * ID of the policy
     */
    public JsonNullable<String> policyId() {
        return this.policyId;
    }

    /**
     * The status of the time off request.
     */
    public JsonNullable<TimeOffRequestStatusStatus> status() {
        return this.status;
    }

    /**
     * Description of the time off request.
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * The start date of the time off request.
     */
    public JsonNullable<String> startDate() {
        return this.startDate;
    }

    /**
     * The end date of the time off request.
     */
    public JsonNullable<String> endDate() {
        return this.endDate;
    }

    /**
     * The date the request was made.
     */
    public JsonNullable<String> requestDate() {
        return this.requestDate;
    }

    /**
     * The type of request
     */
    public JsonNullable<RequestType> requestType() {
        return this.requestType;
    }

    /**
     * The date the request was approved
     */
    public JsonNullable<String> approvalDate() {
        return this.approvalDate;
    }

    /**
     * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
     */
    public JsonNullable<Units> units() {
        return this.units;
    }

    /**
     * The amount of time off requested.
     */
    public JsonNullable<Double> amount() {
        return this.amount;
    }

    /**
     * The day part of the time off request.
     */
    public JsonNullable<String> dayPart() {
        return this.dayPart;
    }

    public Optional<Notes> notes() {
        return Optional.ofNullable(this.notes);
    }

    /**
     * When custom mappings are configured on the resource, the result is included here.
     */
    public JsonNullable<Map<String, Object>> customMappings() {
        return this.customMappings;
    }

    /**
     * The user who last updated the object.
     */
    public JsonNullable<String> updatedBy() {
        return this.updatedBy;
    }

    /**
     * The user who created the object.
     */
    public JsonNullable<String> createdBy() {
        return this.createdBy;
    }

    /**
     * The date and time when the object was last updated.
     */
    public JsonNullable<OffsetDateTime> updatedAt() {
        return this.updatedAt;
    }

    /**
     * The date and time when the object was created.
     */
    public JsonNullable<OffsetDateTime> createdAt() {
        return this.createdAt;
    }

    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public Optional<List<PassThroughBody>> passThrough() {
        return Optional.ofNullable(this.passThrough);
    }

    /**
     * The policy type of the time off request
     */
    public Optional<String> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A unique identifier for an object.
     */
    public TimeOffRequest withId(@Nullable String id) {
        this.id = id;
        return this;
    }


    /**
     * ID of the employee
     */
    public TimeOffRequest withEmployeeId(@Nullable String employeeId) {
        this.employeeId = JsonNullable.of(employeeId);
        return this;
    }


    /**
     * ID of the policy
     */
    public TimeOffRequest withPolicyId(@Nullable String policyId) {
        this.policyId = JsonNullable.of(policyId);
        return this;
    }


    /**
     * The status of the time off request.
     */
    public TimeOffRequest withStatus(@Nullable TimeOffRequestStatusStatus status) {
        this.status = JsonNullable.of(status);
        return this;
    }


    /**
     * Description of the time off request.
     */
    public TimeOffRequest withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * The start date of the time off request.
     */
    public TimeOffRequest withStartDate(@Nullable String startDate) {
        this.startDate = JsonNullable.of(startDate);
        return this;
    }


    /**
     * The end date of the time off request.
     */
    public TimeOffRequest withEndDate(@Nullable String endDate) {
        this.endDate = JsonNullable.of(endDate);
        return this;
    }


    /**
     * The date the request was made.
     */
    public TimeOffRequest withRequestDate(@Nullable String requestDate) {
        this.requestDate = JsonNullable.of(requestDate);
        return this;
    }


    /**
     * The type of request
     */
    public TimeOffRequest withRequestType(@Nullable RequestType requestType) {
        this.requestType = JsonNullable.of(requestType);
        return this;
    }


    /**
     * The date the request was approved
     */
    public TimeOffRequest withApprovalDate(@Nullable String approvalDate) {
        this.approvalDate = JsonNullable.of(approvalDate);
        return this;
    }


    /**
     * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
     */
    public TimeOffRequest withUnits(@Nullable Units units) {
        this.units = JsonNullable.of(units);
        return this;
    }


    /**
     * The amount of time off requested.
     */
    public TimeOffRequest withAmount(@Nullable Double amount) {
        this.amount = JsonNullable.of(amount);
        return this;
    }


    /**
     * The day part of the time off request.
     */
    public TimeOffRequest withDayPart(@Nullable String dayPart) {
        this.dayPart = JsonNullable.of(dayPart);
        return this;
    }


    public TimeOffRequest withNotes(@Nullable Notes notes) {
        this.notes = notes;
        return this;
    }


    /**
     * When custom mappings are configured on the resource, the result is included here.
     */
    public TimeOffRequest withCustomMappings(@Nullable Map<String, Object> customMappings) {
        this.customMappings = JsonNullable.of(customMappings);
        return this;
    }


    /**
     * The user who last updated the object.
     */
    public TimeOffRequest withUpdatedBy(@Nullable String updatedBy) {
        this.updatedBy = JsonNullable.of(updatedBy);
        return this;
    }


    /**
     * The user who created the object.
     */
    public TimeOffRequest withCreatedBy(@Nullable String createdBy) {
        this.createdBy = JsonNullable.of(createdBy);
        return this;
    }


    /**
     * The date and time when the object was last updated.
     */
    public TimeOffRequest withUpdatedAt(@Nullable OffsetDateTime updatedAt) {
        this.updatedAt = JsonNullable.of(updatedAt);
        return this;
    }


    /**
     * The date and time when the object was created.
     */
    public TimeOffRequest withCreatedAt(@Nullable OffsetDateTime createdAt) {
        this.createdAt = JsonNullable.of(createdAt);
        return this;
    }


    /**
     * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
     */
    public TimeOffRequest withPassThrough(@Nullable List<PassThroughBody> passThrough) {
        this.passThrough = passThrough;
        return this;
    }


    /**
     * The policy type of the time off request
     */
    public TimeOffRequest withPolicyType(@Nullable String policyType) {
        this.policyType = policyType;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TimeOffRequest other = (TimeOffRequest) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id) &&
            Utils.enhancedDeepEquals(this.employeeId, other.employeeId) &&
            Utils.enhancedDeepEquals(this.policyId, other.policyId) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.startDate, other.startDate) &&
            Utils.enhancedDeepEquals(this.endDate, other.endDate) &&
            Utils.enhancedDeepEquals(this.requestDate, other.requestDate) &&
            Utils.enhancedDeepEquals(this.requestType, other.requestType) &&
            Utils.enhancedDeepEquals(this.approvalDate, other.approvalDate) &&
            Utils.enhancedDeepEquals(this.units, other.units) &&
            Utils.enhancedDeepEquals(this.amount, other.amount) &&
            Utils.enhancedDeepEquals(this.dayPart, other.dayPart) &&
            Utils.enhancedDeepEquals(this.notes, other.notes) &&
            Utils.enhancedDeepEquals(this.customMappings, other.customMappings) &&
            Utils.enhancedDeepEquals(this.updatedBy, other.updatedBy) &&
            Utils.enhancedDeepEquals(this.createdBy, other.createdBy) &&
            Utils.enhancedDeepEquals(this.updatedAt, other.updatedAt) &&
            Utils.enhancedDeepEquals(this.createdAt, other.createdAt) &&
            Utils.enhancedDeepEquals(this.passThrough, other.passThrough) &&
            Utils.enhancedDeepEquals(this.policyType, other.policyType);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id, employeeId, policyId,
            status, description, startDate,
            endDate, requestDate, requestType,
            approvalDate, units, amount,
            dayPart, notes, customMappings,
            updatedBy, createdBy, updatedAt,
            createdAt, passThrough, policyType);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TimeOffRequest.class,
                "id", id,
                "employeeId", employeeId,
                "policyId", policyId,
                "status", status,
                "description", description,
                "startDate", startDate,
                "endDate", endDate,
                "requestDate", requestDate,
                "requestType", requestType,
                "approvalDate", approvalDate,
                "units", units,
                "amount", amount,
                "dayPart", dayPart,
                "notes", notes,
                "customMappings", customMappings,
                "updatedBy", updatedBy,
                "createdBy", createdBy,
                "updatedAt", updatedAt,
                "createdAt", createdAt,
                "passThrough", passThrough,
                "policyType", policyType);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String id;

        private JsonNullable<String> employeeId;

        private JsonNullable<String> policyId;

        private JsonNullable<TimeOffRequestStatusStatus> status;

        private JsonNullable<String> description;

        private JsonNullable<String> startDate;

        private JsonNullable<String> endDate;

        private JsonNullable<String> requestDate;

        private JsonNullable<RequestType> requestType;

        private JsonNullable<String> approvalDate;

        private JsonNullable<Units> units;

        private JsonNullable<Double> amount;

        private JsonNullable<String> dayPart;

        private Notes notes;

        private JsonNullable<Map<String, Object>> customMappings;

        private JsonNullable<String> updatedBy;

        private JsonNullable<String> createdBy;

        private JsonNullable<OffsetDateTime> updatedAt;

        private JsonNullable<OffsetDateTime> createdAt;

        private List<PassThroughBody> passThrough;

        private String policyType;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * A unique identifier for an object.
         */
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }

        /**
         * ID of the employee
         */
        public Builder employeeId(@Nullable String employeeId) {
            this.employeeId = JsonNullable.of(employeeId);
            return this;
        }

        /**
         * ID of the policy
         */
        public Builder policyId(@Nullable String policyId) {
            this.policyId = JsonNullable.of(policyId);
            return this;
        }

        /**
         * The status of the time off request.
         */
        public Builder status(@Nullable TimeOffRequestStatusStatus status) {
            this.status = JsonNullable.of(status);
            return this;
        }

        /**
         * Description of the time off request.
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The start date of the time off request.
         */
        public Builder startDate(@Nullable String startDate) {
            this.startDate = JsonNullable.of(startDate);
            return this;
        }

        /**
         * The end date of the time off request.
         */
        public Builder endDate(@Nullable String endDate) {
            this.endDate = JsonNullable.of(endDate);
            return this;
        }

        /**
         * The date the request was made.
         */
        public Builder requestDate(@Nullable String requestDate) {
            this.requestDate = JsonNullable.of(requestDate);
            return this;
        }

        /**
         * The type of request
         */
        public Builder requestType(@Nullable RequestType requestType) {
            this.requestType = JsonNullable.of(requestType);
            return this;
        }

        /**
         * The date the request was approved
         */
        public Builder approvalDate(@Nullable String approvalDate) {
            this.approvalDate = JsonNullable.of(approvalDate);
            return this;
        }

        /**
         * The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
         */
        public Builder units(@Nullable Units units) {
            this.units = JsonNullable.of(units);
            return this;
        }

        /**
         * The amount of time off requested.
         */
        public Builder amount(@Nullable Double amount) {
            this.amount = JsonNullable.of(amount);
            return this;
        }

        /**
         * The day part of the time off request.
         */
        public Builder dayPart(@Nullable String dayPart) {
            this.dayPart = JsonNullable.of(dayPart);
            return this;
        }

        public Builder notes(@Nullable Notes notes) {
            this.notes = notes;
            return this;
        }

        /**
         * When custom mappings are configured on the resource, the result is included here.
         */
        public Builder customMappings(@Nullable Map<String, Object> customMappings) {
            this.customMappings = JsonNullable.of(customMappings);
            return this;
        }

        /**
         * The user who last updated the object.
         */
        public Builder updatedBy(@Nullable String updatedBy) {
            this.updatedBy = JsonNullable.of(updatedBy);
            return this;
        }

        /**
         * The user who created the object.
         */
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = JsonNullable.of(createdBy);
            return this;
        }

        /**
         * The date and time when the object was last updated.
         */
        public Builder updatedAt(@Nullable OffsetDateTime updatedAt) {
            this.updatedAt = JsonNullable.of(updatedAt);
            return this;
        }

        /**
         * The date and time when the object was created.
         */
        public Builder createdAt(@Nullable OffsetDateTime createdAt) {
            this.createdAt = JsonNullable.of(createdAt);
            return this;
        }

        /**
         * The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
         */
        public Builder passThrough(@Nullable List<PassThroughBody> passThrough) {
            this.passThrough = passThrough;
            return this;
        }

        /**
         * The policy type of the time off request
         */
        public Builder policyType(@Nullable String policyType) {
            this.policyType = policyType;
            return this;
        }

        public TimeOffRequest build() {
            return new TimeOffRequest(
                id, employeeId, policyId,
                status, description, startDate,
                endDate, requestDate, requestType,
                approvalDate, units, amount,
                dayPart, notes, customMappings,
                updatedBy, createdBy, updatedAt,
                createdAt, passThrough, policyType);
        }

    }
}
