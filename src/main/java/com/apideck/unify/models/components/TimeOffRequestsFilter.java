/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class TimeOffRequestsFilter {
    /**
     * Start date
     */
    @SpeakeasyMetadata("queryParam:name=start_date")
    private String startDate;

    /**
     * End date
     */
    @SpeakeasyMetadata("queryParam:name=end_date")
    private String endDate;

    /**
     * Minimum date the time off request was last created or modified
     */
    @SpeakeasyMetadata("queryParam:name=updated_since")
    private String updatedSince;

    /**
     * Employee ID
     */
    @SpeakeasyMetadata("queryParam:name=employee_id")
    private String employeeId;

    /**
     * Time off request status to filter on
     */
    @SpeakeasyMetadata("queryParam:name=time_off_request_status")
    private TimeOffRequestStatus timeOffRequestStatus;

    /**
     * Company ID
     */
    @SpeakeasyMetadata("queryParam:name=company_id")
    private String companyId;

    @JsonCreator
    public TimeOffRequestsFilter(
            @Nullable String startDate,
            @Nullable String endDate,
            @Nullable String updatedSince,
            @Nullable String employeeId,
            @Nullable TimeOffRequestStatus timeOffRequestStatus,
            @Nullable String companyId) {
        this.startDate = startDate;
        this.endDate = endDate;
        this.updatedSince = updatedSince;
        this.employeeId = employeeId;
        this.timeOffRequestStatus = timeOffRequestStatus;
        this.companyId = companyId;
    }
    
    public TimeOffRequestsFilter() {
        this(null, null, null,
            null, null, null);
    }

    /**
     * Start date
     */
    public Optional<String> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * End date
     */
    public Optional<String> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * Minimum date the time off request was last created or modified
     */
    public Optional<String> updatedSince() {
        return Optional.ofNullable(this.updatedSince);
    }

    /**
     * Employee ID
     */
    public Optional<String> employeeId() {
        return Optional.ofNullable(this.employeeId);
    }

    /**
     * Time off request status to filter on
     */
    public Optional<TimeOffRequestStatus> timeOffRequestStatus() {
        return Optional.ofNullable(this.timeOffRequestStatus);
    }

    /**
     * Company ID
     */
    public Optional<String> companyId() {
        return Optional.ofNullable(this.companyId);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Start date
     */
    public TimeOffRequestsFilter withStartDate(@Nullable String startDate) {
        this.startDate = startDate;
        return this;
    }


    /**
     * End date
     */
    public TimeOffRequestsFilter withEndDate(@Nullable String endDate) {
        this.endDate = endDate;
        return this;
    }


    /**
     * Minimum date the time off request was last created or modified
     */
    public TimeOffRequestsFilter withUpdatedSince(@Nullable String updatedSince) {
        this.updatedSince = updatedSince;
        return this;
    }


    /**
     * Employee ID
     */
    public TimeOffRequestsFilter withEmployeeId(@Nullable String employeeId) {
        this.employeeId = employeeId;
        return this;
    }


    /**
     * Time off request status to filter on
     */
    public TimeOffRequestsFilter withTimeOffRequestStatus(@Nullable TimeOffRequestStatus timeOffRequestStatus) {
        this.timeOffRequestStatus = timeOffRequestStatus;
        return this;
    }


    /**
     * Company ID
     */
    public TimeOffRequestsFilter withCompanyId(@Nullable String companyId) {
        this.companyId = companyId;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TimeOffRequestsFilter other = (TimeOffRequestsFilter) o;
        return 
            Utils.enhancedDeepEquals(this.startDate, other.startDate) &&
            Utils.enhancedDeepEquals(this.endDate, other.endDate) &&
            Utils.enhancedDeepEquals(this.updatedSince, other.updatedSince) &&
            Utils.enhancedDeepEquals(this.employeeId, other.employeeId) &&
            Utils.enhancedDeepEquals(this.timeOffRequestStatus, other.timeOffRequestStatus) &&
            Utils.enhancedDeepEquals(this.companyId, other.companyId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            startDate, endDate, updatedSince,
            employeeId, timeOffRequestStatus, companyId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TimeOffRequestsFilter.class,
                "startDate", startDate,
                "endDate", endDate,
                "updatedSince", updatedSince,
                "employeeId", employeeId,
                "timeOffRequestStatus", timeOffRequestStatus,
                "companyId", companyId);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String startDate;

        private String endDate;

        private String updatedSince;

        private String employeeId;

        private TimeOffRequestStatus timeOffRequestStatus;

        private String companyId;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Start date
         */
        public Builder startDate(@Nullable String startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * End date
         */
        public Builder endDate(@Nullable String endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Minimum date the time off request was last created or modified
         */
        public Builder updatedSince(@Nullable String updatedSince) {
            this.updatedSince = updatedSince;
            return this;
        }

        /**
         * Employee ID
         */
        public Builder employeeId(@Nullable String employeeId) {
            this.employeeId = employeeId;
            return this;
        }

        /**
         * Time off request status to filter on
         */
        public Builder timeOffRequestStatus(@Nullable TimeOffRequestStatus timeOffRequestStatus) {
            this.timeOffRequestStatus = timeOffRequestStatus;
            return this;
        }

        /**
         * Company ID
         */
        public Builder companyId(@Nullable String companyId) {
            this.companyId = companyId;
            return this;
        }

        public TimeOffRequestsFilter build() {
            return new TimeOffRequestsFilter(
                startDate, endDate, updatedSince,
                employeeId, timeOffRequestStatus, companyId);
        }

    }
}
