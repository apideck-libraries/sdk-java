/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class TlsSupport {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    private String type;

    /**
     * Description of the TLS support
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private String description;

    @JsonCreator
    public TlsSupport(
            @JsonProperty("type") @Nullable String type,
            @JsonProperty("description") @Nullable String description) {
        this.type = type;
        this.description = description;
    }
    
    public TlsSupport() {
        this(null, null);
    }

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Description of the TLS support
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    public static Builder builder() {
        return new Builder();
    }


    public TlsSupport withType(@Nullable String type) {
        this.type = type;
        return this;
    }


    /**
     * Description of the TLS support
     */
    public TlsSupport withDescription(@Nullable String description) {
        this.description = description;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TlsSupport other = (TlsSupport) o;
        return 
            Utils.enhancedDeepEquals(this.type, other.type) &&
            Utils.enhancedDeepEquals(this.description, other.description);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            type, description);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TlsSupport.class,
                "type", type,
                "description", description);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String type;

        private String description;

        private Builder() {
          // force use of static builder() method
        }

        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }

        /**
         * Description of the TLS support
         */
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }

        public TlsSupport build() {
            return new TlsSupport(
                type, description);
        }

    }
}
