/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;


public class UpdateConsentRequest {

    @JsonProperty("resources")
    private UpdateConsentRequestResources resources;

    /**
     * Whether consent is being granted (true) or denied/revoked (false)
     */
    @JsonProperty("granted")
    private boolean granted;

    @JsonCreator
    public UpdateConsentRequest(
            @JsonProperty("resources") UpdateConsentRequestResources resources,
            @JsonProperty("granted") boolean granted) {
        Utils.checkNotNull(resources, "resources");
        Utils.checkNotNull(granted, "granted");
        this.resources = resources;
        this.granted = granted;
    }

    @JsonIgnore
    public UpdateConsentRequestResources resources() {
        return resources;
    }

    /**
     * Whether consent is being granted (true) or denied/revoked (false)
     */
    @JsonIgnore
    public boolean granted() {
        return granted;
    }

    public static Builder builder() {
        return new Builder();
    }


    public UpdateConsentRequest withResources(UpdateConsentRequestResources resources) {
        Utils.checkNotNull(resources, "resources");
        this.resources = resources;
        return this;
    }

    /**
     * Whether consent is being granted (true) or denied/revoked (false)
     */
    public UpdateConsentRequest withGranted(boolean granted) {
        Utils.checkNotNull(granted, "granted");
        this.granted = granted;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateConsentRequest other = (UpdateConsentRequest) o;
        return 
            Utils.enhancedDeepEquals(this.resources, other.resources) &&
            Utils.enhancedDeepEquals(this.granted, other.granted);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            resources, granted);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateConsentRequest.class,
                "resources", resources,
                "granted", granted);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private UpdateConsentRequestResources resources;

        private Boolean granted;

        private Builder() {
          // force use of static builder() method
        }


        public Builder resources(UpdateConsentRequestResources resources) {
            Utils.checkNotNull(resources, "resources");
            this.resources = resources;
            return this;
        }


        /**
         * Whether consent is being granted (true) or denied/revoked (false)
         */
        public Builder granted(boolean granted) {
            Utils.checkNotNull(granted, "granted");
            this.granted = granted;
            return this;
        }

        public UpdateConsentRequest build() {

            return new UpdateConsentRequest(
                resources, granted);
        }

    }
}
