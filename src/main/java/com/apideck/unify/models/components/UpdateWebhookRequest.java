/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class UpdateWebhookRequest {
    /**
     * A description of the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    private JsonNullable<String> description;

    /**
     * The status of the webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    private Status status;

    /**
     * The delivery url of the webhook endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery_url")
    private String deliveryUrl;

    /**
     * The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events")
    private List<WebhookEventType> events;

    @JsonCreator
    public UpdateWebhookRequest(
            @JsonProperty("description") @Nullable JsonNullable<String> description,
            @JsonProperty("status") @Nullable Status status,
            @JsonProperty("delivery_url") @Nullable String deliveryUrl,
            @JsonProperty("events") @Nullable List<WebhookEventType> events) {
        this.description = Optional.ofNullable(description)
            .orElse(JsonNullable.undefined());
        this.status = status;
        this.deliveryUrl = deliveryUrl;
        this.events = events;
    }
    
    public UpdateWebhookRequest() {
        this(null, null, null,
            null);
    }

    /**
     * A description of the object.
     */
    public JsonNullable<String> description() {
        return this.description;
    }

    /**
     * The status of the webhook.
     */
    public Optional<Status> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The delivery url of the webhook endpoint.
     */
    public Optional<String> deliveryUrl() {
        return Optional.ofNullable(this.deliveryUrl);
    }

    /**
     * The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
     */
    public Optional<List<WebhookEventType>> events() {
        return Optional.ofNullable(this.events);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * A description of the object.
     */
    public UpdateWebhookRequest withDescription(@Nullable String description) {
        this.description = JsonNullable.of(description);
        return this;
    }


    /**
     * The status of the webhook.
     */
    public UpdateWebhookRequest withStatus(@Nullable Status status) {
        this.status = status;
        return this;
    }


    /**
     * The delivery url of the webhook endpoint.
     */
    public UpdateWebhookRequest withDeliveryUrl(@Nullable String deliveryUrl) {
        this.deliveryUrl = deliveryUrl;
        return this;
    }


    /**
     * The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
     */
    public UpdateWebhookRequest withEvents(@Nullable List<WebhookEventType> events) {
        this.events = events;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateWebhookRequest other = (UpdateWebhookRequest) o;
        return 
            Utils.enhancedDeepEquals(this.description, other.description) &&
            Utils.enhancedDeepEquals(this.status, other.status) &&
            Utils.enhancedDeepEquals(this.deliveryUrl, other.deliveryUrl) &&
            Utils.enhancedDeepEquals(this.events, other.events);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            description, status, deliveryUrl,
            events);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateWebhookRequest.class,
                "description", description,
                "status", status,
                "deliveryUrl", deliveryUrl,
                "events", events);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private JsonNullable<String> description;

        private Status status;

        private String deliveryUrl;

        private List<WebhookEventType> events;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * A description of the object.
         */
        public Builder description(@Nullable String description) {
            this.description = JsonNullable.of(description);
            return this;
        }

        /**
         * The status of the webhook.
         */
        public Builder status(@Nullable Status status) {
            this.status = status;
            return this;
        }

        /**
         * The delivery url of the webhook endpoint.
         */
        public Builder deliveryUrl(@Nullable String deliveryUrl) {
            this.deliveryUrl = deliveryUrl;
            return this;
        }

        /**
         * The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
         */
        public Builder events(@Nullable List<WebhookEventType> events) {
            this.events = events;
            return this;
        }

        public UpdateWebhookRequest build() {
            return new UpdateWebhookRequest(
                description, status, deliveryUrl,
                events);
        }

    }
}
