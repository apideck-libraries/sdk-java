/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.components;

import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class WebhookSubscription {
    /**
     * The ID of the downstream service
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downstream_id")
    private String downstreamId;

    /**
     * The list of Unify Events this connection is subscribed to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unify_event_types")
    private List<String> unifyEventTypes;

    /**
     * The list of downstream Events this connection is subscribed to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downstream_event_types")
    private List<String> downstreamEventTypes;

    /**
     * The URL the downstream is sending to when the event is triggered
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("execute_url")
    private String executeUrl;

    /**
     * The date and time the webhook subscription was created downstream
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    private String createdAt;

    @JsonCreator
    public WebhookSubscription(
            @JsonProperty("downstream_id") @Nullable String downstreamId,
            @JsonProperty("unify_event_types") @Nullable List<String> unifyEventTypes,
            @JsonProperty("downstream_event_types") @Nullable List<String> downstreamEventTypes,
            @JsonProperty("execute_url") @Nullable String executeUrl,
            @JsonProperty("created_at") @Nullable String createdAt) {
        this.downstreamId = downstreamId;
        this.unifyEventTypes = unifyEventTypes;
        this.downstreamEventTypes = downstreamEventTypes;
        this.executeUrl = executeUrl;
        this.createdAt = createdAt;
    }
    
    public WebhookSubscription() {
        this(null, null, null,
            null, null);
    }

    /**
     * The ID of the downstream service
     */
    public Optional<String> downstreamId() {
        return Optional.ofNullable(this.downstreamId);
    }

    /**
     * The list of Unify Events this connection is subscribed to
     */
    public Optional<List<String>> unifyEventTypes() {
        return Optional.ofNullable(this.unifyEventTypes);
    }

    /**
     * The list of downstream Events this connection is subscribed to
     */
    public Optional<List<String>> downstreamEventTypes() {
        return Optional.ofNullable(this.downstreamEventTypes);
    }

    /**
     * The URL the downstream is sending to when the event is triggered
     */
    public Optional<String> executeUrl() {
        return Optional.ofNullable(this.executeUrl);
    }

    /**
     * The date and time the webhook subscription was created downstream
     */
    public Optional<String> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of the downstream service
     */
    public WebhookSubscription withDownstreamId(@Nullable String downstreamId) {
        this.downstreamId = downstreamId;
        return this;
    }


    /**
     * The list of Unify Events this connection is subscribed to
     */
    public WebhookSubscription withUnifyEventTypes(@Nullable List<String> unifyEventTypes) {
        this.unifyEventTypes = unifyEventTypes;
        return this;
    }


    /**
     * The list of downstream Events this connection is subscribed to
     */
    public WebhookSubscription withDownstreamEventTypes(@Nullable List<String> downstreamEventTypes) {
        this.downstreamEventTypes = downstreamEventTypes;
        return this;
    }


    /**
     * The URL the downstream is sending to when the event is triggered
     */
    public WebhookSubscription withExecuteUrl(@Nullable String executeUrl) {
        this.executeUrl = executeUrl;
        return this;
    }


    /**
     * The date and time the webhook subscription was created downstream
     */
    public WebhookSubscription withCreatedAt(@Nullable String createdAt) {
        this.createdAt = createdAt;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WebhookSubscription other = (WebhookSubscription) o;
        return 
            Utils.enhancedDeepEquals(this.downstreamId, other.downstreamId) &&
            Utils.enhancedDeepEquals(this.unifyEventTypes, other.unifyEventTypes) &&
            Utils.enhancedDeepEquals(this.downstreamEventTypes, other.downstreamEventTypes) &&
            Utils.enhancedDeepEquals(this.executeUrl, other.executeUrl) &&
            Utils.enhancedDeepEquals(this.createdAt, other.createdAt);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            downstreamId, unifyEventTypes, downstreamEventTypes,
            executeUrl, createdAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(WebhookSubscription.class,
                "downstreamId", downstreamId,
                "unifyEventTypes", unifyEventTypes,
                "downstreamEventTypes", downstreamEventTypes,
                "executeUrl", executeUrl,
                "createdAt", createdAt);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String downstreamId;

        private List<String> unifyEventTypes;

        private List<String> downstreamEventTypes;

        private String executeUrl;

        private String createdAt;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the downstream service
         */
        public Builder downstreamId(@Nullable String downstreamId) {
            this.downstreamId = downstreamId;
            return this;
        }

        /**
         * The list of Unify Events this connection is subscribed to
         */
        public Builder unifyEventTypes(@Nullable List<String> unifyEventTypes) {
            this.unifyEventTypes = unifyEventTypes;
            return this;
        }

        /**
         * The list of downstream Events this connection is subscribed to
         */
        public Builder downstreamEventTypes(@Nullable List<String> downstreamEventTypes) {
            this.downstreamEventTypes = downstreamEventTypes;
            return this;
        }

        /**
         * The URL the downstream is sending to when the event is triggered
         */
        public Builder executeUrl(@Nullable String executeUrl) {
            this.executeUrl = executeUrl;
            return this;
        }

        /**
         * The date and time the webhook subscription was created downstream
         */
        public Builder createdAt(@Nullable String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        public WebhookSubscription build() {
            return new WebhookSubscription(
                downstreamId, unifyEventTypes, downstreamEventTypes,
                executeUrl, createdAt);
        }

    }
}
