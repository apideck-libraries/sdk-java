/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import com.apideck.unify.models.components.CustomObjectSchemaInput;
import com.apideck.unify.utils.LazySingletonValue;
import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.core.type.TypeReference;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class CrmCustomObjectSchemasAddRequest {
    /**
     * Include raw response. Mostly used for debugging purposes
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=raw")
    private Boolean raw;

    /**
     * ID of the consumer which you want to get or push data from
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-consumer-id")
    private String consumerId;

    /**
     * The ID of your Unify application
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-app-id")
    private String appId;

    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-service-id")
    private String serviceId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private CustomObjectSchemaInput customObjectSchema;

    @JsonCreator
    public CrmCustomObjectSchemasAddRequest(
            @Nullable Boolean raw,
            @Nullable String consumerId,
            @Nullable String appId,
            @Nullable String serviceId,
            @Nonnull CustomObjectSchemaInput customObjectSchema) {
        this.raw = Optional.ofNullable(raw)
            .orElse(Builder._SINGLETON_VALUE_Raw.value());
        this.consumerId = consumerId;
        this.appId = appId;
        this.serviceId = serviceId;
        this.customObjectSchema = Optional.ofNullable(customObjectSchema)
            .orElseThrow(() -> new IllegalArgumentException("customObjectSchema cannot be null"));
    }
    
    public CrmCustomObjectSchemasAddRequest(
            @Nonnull CustomObjectSchemaInput customObjectSchema) {
        this(null, null, null,
            null, customObjectSchema);
    }

    /**
     * Include raw response. Mostly used for debugging purposes
     */
    public Optional<Boolean> raw() {
        return Optional.ofNullable(this.raw);
    }

    /**
     * ID of the consumer which you want to get or push data from
     */
    public Optional<String> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    /**
     * The ID of your Unify application
     */
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    public Optional<String> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    public CustomObjectSchemaInput customObjectSchema() {
        return this.customObjectSchema;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Include raw response. Mostly used for debugging purposes
     */
    public CrmCustomObjectSchemasAddRequest withRaw(@Nullable Boolean raw) {
        this.raw = raw;
        return this;
    }


    /**
     * ID of the consumer which you want to get or push data from
     */
    public CrmCustomObjectSchemasAddRequest withConsumerId(@Nullable String consumerId) {
        this.consumerId = consumerId;
        return this;
    }


    /**
     * The ID of your Unify application
     */
    public CrmCustomObjectSchemasAddRequest withAppId(@Nullable String appId) {
        this.appId = appId;
        return this;
    }


    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    public CrmCustomObjectSchemasAddRequest withServiceId(@Nullable String serviceId) {
        this.serviceId = serviceId;
        return this;
    }


    public CrmCustomObjectSchemasAddRequest withCustomObjectSchema(@Nonnull CustomObjectSchemaInput customObjectSchema) {
        this.customObjectSchema = Utils.checkNotNull(customObjectSchema, "customObjectSchema");
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CrmCustomObjectSchemasAddRequest other = (CrmCustomObjectSchemasAddRequest) o;
        return 
            Utils.enhancedDeepEquals(this.raw, other.raw) &&
            Utils.enhancedDeepEquals(this.consumerId, other.consumerId) &&
            Utils.enhancedDeepEquals(this.appId, other.appId) &&
            Utils.enhancedDeepEquals(this.serviceId, other.serviceId) &&
            Utils.enhancedDeepEquals(this.customObjectSchema, other.customObjectSchema);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            raw, consumerId, appId,
            serviceId, customObjectSchema);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CrmCustomObjectSchemasAddRequest.class,
                "raw", raw,
                "consumerId", consumerId,
                "appId", appId,
                "serviceId", serviceId,
                "customObjectSchema", customObjectSchema);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Boolean raw;

        private String consumerId;

        private String appId;

        private String serviceId;

        private CustomObjectSchemaInput customObjectSchema;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Include raw response. Mostly used for debugging purposes
         */
        public Builder raw(@Nullable Boolean raw) {
            this.raw = raw;
            return this;
        }

        /**
         * ID of the consumer which you want to get or push data from
         */
        public Builder consumerId(@Nullable String consumerId) {
            this.consumerId = consumerId;
            return this;
        }

        /**
         * The ID of your Unify application
         */
        public Builder appId(@Nullable String appId) {
            this.appId = appId;
            return this;
        }

        /**
         * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
         */
        public Builder serviceId(@Nullable String serviceId) {
            this.serviceId = serviceId;
            return this;
        }

        public Builder customObjectSchema(@Nonnull CustomObjectSchemaInput customObjectSchema) {
            this.customObjectSchema = Utils.checkNotNull(customObjectSchema, "customObjectSchema");
            return this;
        }

        public CrmCustomObjectSchemasAddRequest build() {
            return new CrmCustomObjectSchemasAddRequest(
                raw, consumerId, appId,
                serviceId, customObjectSchema);
        }


        private static final LazySingletonValue<Boolean> _SINGLETON_VALUE_Raw =
                new LazySingletonValue<>(
                        "raw",
                        "false",
                        new TypeReference<Boolean>() {});
    }
}
