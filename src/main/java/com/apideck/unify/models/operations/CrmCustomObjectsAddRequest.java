/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import com.apideck.unify.models.components.CustomObjectInput;
import com.apideck.unify.utils.LazySingletonValue;
import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.core.type.TypeReference;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class CrmCustomObjectsAddRequest {
    /**
     * Include raw response. Mostly used for debugging purposes
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=raw")
    private Boolean raw;

    /**
     * ID of the consumer which you want to get or push data from
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-consumer-id")
    private String consumerId;

    /**
     * The ID of your Unify application
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-app-id")
    private String appId;

    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-service-id")
    private String serviceId;

    /**
     * The id of the custom object to query
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=object_id")
    private String objectId;


    @SpeakeasyMetadata("request:mediaType=application/json")
    private CustomObjectInput customObject;

    @JsonCreator
    public CrmCustomObjectsAddRequest(
            @Nullable Boolean raw,
            @Nullable String consumerId,
            @Nullable String appId,
            @Nullable String serviceId,
            @Nonnull String objectId,
            @Nonnull CustomObjectInput customObject) {
        this.raw = Optional.ofNullable(raw)
            .orElse(Builder._SINGLETON_VALUE_Raw.value());
        this.consumerId = consumerId;
        this.appId = appId;
        this.serviceId = serviceId;
        this.objectId = Optional.ofNullable(objectId)
            .orElseThrow(() -> new IllegalArgumentException("objectId cannot be null"));
        this.customObject = Optional.ofNullable(customObject)
            .orElseThrow(() -> new IllegalArgumentException("customObject cannot be null"));
    }
    
    public CrmCustomObjectsAddRequest(
            @Nonnull String objectId,
            @Nonnull CustomObjectInput customObject) {
        this(null, null, null,
            null, objectId, customObject);
    }

    /**
     * Include raw response. Mostly used for debugging purposes
     */
    public Optional<Boolean> raw() {
        return Optional.ofNullable(this.raw);
    }

    /**
     * ID of the consumer which you want to get or push data from
     */
    public Optional<String> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    /**
     * The ID of your Unify application
     */
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    public Optional<String> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    /**
     * The id of the custom object to query
     */
    public String objectId() {
        return this.objectId;
    }

    public CustomObjectInput customObject() {
        return this.customObject;
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * Include raw response. Mostly used for debugging purposes
     */
    public CrmCustomObjectsAddRequest withRaw(@Nullable Boolean raw) {
        this.raw = raw;
        return this;
    }


    /**
     * ID of the consumer which you want to get or push data from
     */
    public CrmCustomObjectsAddRequest withConsumerId(@Nullable String consumerId) {
        this.consumerId = consumerId;
        return this;
    }


    /**
     * The ID of your Unify application
     */
    public CrmCustomObjectsAddRequest withAppId(@Nullable String appId) {
        this.appId = appId;
        return this;
    }


    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    public CrmCustomObjectsAddRequest withServiceId(@Nullable String serviceId) {
        this.serviceId = serviceId;
        return this;
    }


    /**
     * The id of the custom object to query
     */
    public CrmCustomObjectsAddRequest withObjectId(@Nonnull String objectId) {
        this.objectId = Utils.checkNotNull(objectId, "objectId");
        return this;
    }


    public CrmCustomObjectsAddRequest withCustomObject(@Nonnull CustomObjectInput customObject) {
        this.customObject = Utils.checkNotNull(customObject, "customObject");
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CrmCustomObjectsAddRequest other = (CrmCustomObjectsAddRequest) o;
        return 
            Utils.enhancedDeepEquals(this.raw, other.raw) &&
            Utils.enhancedDeepEquals(this.consumerId, other.consumerId) &&
            Utils.enhancedDeepEquals(this.appId, other.appId) &&
            Utils.enhancedDeepEquals(this.serviceId, other.serviceId) &&
            Utils.enhancedDeepEquals(this.objectId, other.objectId) &&
            Utils.enhancedDeepEquals(this.customObject, other.customObject);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            raw, consumerId, appId,
            serviceId, objectId, customObject);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CrmCustomObjectsAddRequest.class,
                "raw", raw,
                "consumerId", consumerId,
                "appId", appId,
                "serviceId", serviceId,
                "objectId", objectId,
                "customObject", customObject);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private Boolean raw;

        private String consumerId;

        private String appId;

        private String serviceId;

        private String objectId;

        private CustomObjectInput customObject;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * Include raw response. Mostly used for debugging purposes
         */
        public Builder raw(@Nullable Boolean raw) {
            this.raw = raw;
            return this;
        }

        /**
         * ID of the consumer which you want to get or push data from
         */
        public Builder consumerId(@Nullable String consumerId) {
            this.consumerId = consumerId;
            return this;
        }

        /**
         * The ID of your Unify application
         */
        public Builder appId(@Nullable String appId) {
            this.appId = appId;
            return this;
        }

        /**
         * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
         */
        public Builder serviceId(@Nullable String serviceId) {
            this.serviceId = serviceId;
            return this;
        }

        /**
         * The id of the custom object to query
         */
        public Builder objectId(@Nonnull String objectId) {
            this.objectId = Utils.checkNotNull(objectId, "objectId");
            return this;
        }

        public Builder customObject(@Nonnull CustomObjectInput customObject) {
            this.customObject = Utils.checkNotNull(customObject, "customObject");
            return this;
        }

        public CrmCustomObjectsAddRequest build() {
            return new CrmCustomObjectsAddRequest(
                raw, consumerId, appId,
                serviceId, objectId, customObject);
        }


        private static final LazySingletonValue<Boolean> _SINGLETON_VALUE_Raw =
                new LazySingletonValue<>(
                        "raw",
                        "false",
                        new TypeReference<Boolean>() {});
    }
}
