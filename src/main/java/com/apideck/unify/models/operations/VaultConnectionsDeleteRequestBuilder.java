/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.SDKConfiguration;
import com.apideck.unify.operations.VaultConnectionsDelete;
import com.apideck.unify.utils.Options;
import com.apideck.unify.utils.RetryConfig;
import com.apideck.unify.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class VaultConnectionsDeleteRequestBuilder {

    private Optional<String> consumerId = Optional.empty();
    private Optional<String> appId = Optional.empty();
    private String serviceId;
    private String unifiedApi;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public VaultConnectionsDeleteRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public VaultConnectionsDeleteRequestBuilder consumerId(String consumerId) {
        Utils.checkNotNull(consumerId, "consumerId");
        this.consumerId = Optional.of(consumerId);
        return this;
    }

    public VaultConnectionsDeleteRequestBuilder consumerId(Optional<String> consumerId) {
        Utils.checkNotNull(consumerId, "consumerId");
        this.consumerId = consumerId;
        return this;
    }
                
    public VaultConnectionsDeleteRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public VaultConnectionsDeleteRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }

    public VaultConnectionsDeleteRequestBuilder serviceId(String serviceId) {
        Utils.checkNotNull(serviceId, "serviceId");
        this.serviceId = serviceId;
        return this;
    }

    public VaultConnectionsDeleteRequestBuilder unifiedApi(String unifiedApi) {
        Utils.checkNotNull(unifiedApi, "unifiedApi");
        this.unifiedApi = unifiedApi;
        return this;
    }
                
    public VaultConnectionsDeleteRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public VaultConnectionsDeleteRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private VaultConnectionsDeleteRequest buildRequest() {

        VaultConnectionsDeleteRequest request = new VaultConnectionsDeleteRequest(consumerId,
            appId,
            serviceId,
            unifiedApi);

        return request;
    }

    public VaultConnectionsDeleteResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<VaultConnectionsDeleteRequest, VaultConnectionsDeleteResponse> operation
              = new VaultConnectionsDelete.Sync(sdkConfiguration, options);
        VaultConnectionsDeleteRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
