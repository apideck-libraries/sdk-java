/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.SDKConfiguration;
import com.apideck.unify.models.components.CreateConsumerRequest;
import com.apideck.unify.operations.VaultConsumersAdd;
import com.apideck.unify.utils.Headers;
import com.apideck.unify.utils.Options;
import com.apideck.unify.utils.RetryConfig;
import com.apideck.unify.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class VaultConsumersAddRequestBuilder {

    private Optional<String> appId = Optional.empty();
    private CreateConsumerRequest createConsumerRequest;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKConfiguration sdkConfiguration;
    private final Headers _headers = new Headers(); 

    public VaultConsumersAddRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public VaultConsumersAddRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public VaultConsumersAddRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }

    public VaultConsumersAddRequestBuilder createConsumerRequest(CreateConsumerRequest createConsumerRequest) {
        Utils.checkNotNull(createConsumerRequest, "createConsumerRequest");
        this.createConsumerRequest = createConsumerRequest;
        return this;
    }
                
    public VaultConsumersAddRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public VaultConsumersAddRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }


    private VaultConsumersAddRequest buildRequest() {

        VaultConsumersAddRequest request = new VaultConsumersAddRequest(appId,
            createConsumerRequest);

        return request;
    }

    public VaultConsumersAddResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
            .retryConfig(retryConfig)
            .build());

        RequestOperation<VaultConsumersAddRequest, VaultConsumersAddResponse> operation
              = new VaultConsumersAdd.Sync(sdkConfiguration, options, _headers);
        VaultConsumersAddRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
