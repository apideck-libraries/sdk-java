/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import com.apideck.unify.models.components.LogsFilter;
import com.apideck.unify.utils.LazySingletonValue;
import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.core.type.TypeReference;
import jakarta.annotation.Nullable;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class VaultLogsAllRequest {
    /**
     * The ID of your Unify application
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-app-id")
    private String appId;

    /**
     * ID of the consumer which you want to get or push data from
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-consumer-id")
    private String consumerId;

    /**
     * Filter results
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=filter")
    private LogsFilter filter;

    /**
     * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    private JsonNullable<String> cursor;

    /**
     * Number of results to return. Minimum 1, Maximum 200, Default 20
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    private Long limit;

    @JsonCreator
    public VaultLogsAllRequest(
            @Nullable String appId,
            @Nullable String consumerId,
            @Nullable LogsFilter filter,
            @Nullable JsonNullable<String> cursor,
            @Nullable Long limit) {
        this.appId = appId;
        this.consumerId = consumerId;
        this.filter = filter;
        this.cursor = Optional.ofNullable(cursor)
            .orElse(JsonNullable.undefined());
        this.limit = Optional.ofNullable(limit)
            .orElse(Builder._SINGLETON_VALUE_Limit.value());
    }
    
    public VaultLogsAllRequest() {
        this(null, null, null,
            null, null);
    }

    /**
     * The ID of your Unify application
     */
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * ID of the consumer which you want to get or push data from
     */
    public Optional<String> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    /**
     * Filter results
     */
    public Optional<LogsFilter> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     */
    public JsonNullable<String> cursor() {
        return this.cursor;
    }

    /**
     * Number of results to return. Minimum 1, Maximum 200, Default 20
     */
    public Optional<Long> limit() {
        return Optional.ofNullable(this.limit);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * The ID of your Unify application
     */
    public VaultLogsAllRequest withAppId(@Nullable String appId) {
        this.appId = appId;
        return this;
    }


    /**
     * ID of the consumer which you want to get or push data from
     */
    public VaultLogsAllRequest withConsumerId(@Nullable String consumerId) {
        this.consumerId = consumerId;
        return this;
    }


    /**
     * Filter results
     */
    public VaultLogsAllRequest withFilter(@Nullable LogsFilter filter) {
        this.filter = filter;
        return this;
    }


    /**
     * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     */
    public VaultLogsAllRequest withCursor(@Nullable String cursor) {
        this.cursor = JsonNullable.of(cursor);
        return this;
    }


    /**
     * Number of results to return. Minimum 1, Maximum 200, Default 20
     */
    public VaultLogsAllRequest withLimit(@Nullable Long limit) {
        this.limit = limit;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VaultLogsAllRequest other = (VaultLogsAllRequest) o;
        return 
            Utils.enhancedDeepEquals(this.appId, other.appId) &&
            Utils.enhancedDeepEquals(this.consumerId, other.consumerId) &&
            Utils.enhancedDeepEquals(this.filter, other.filter) &&
            Utils.enhancedDeepEquals(this.cursor, other.cursor) &&
            Utils.enhancedDeepEquals(this.limit, other.limit);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            appId, consumerId, filter,
            cursor, limit);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VaultLogsAllRequest.class,
                "appId", appId,
                "consumerId", consumerId,
                "filter", filter,
                "cursor", cursor,
                "limit", limit);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String appId;

        private String consumerId;

        private LogsFilter filter;

        private JsonNullable<String> cursor;

        private Long limit;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of your Unify application
         */
        public Builder appId(@Nullable String appId) {
            this.appId = appId;
            return this;
        }

        /**
         * ID of the consumer which you want to get or push data from
         */
        public Builder consumerId(@Nullable String consumerId) {
            this.consumerId = consumerId;
            return this;
        }

        /**
         * Filter results
         */
        public Builder filter(@Nullable LogsFilter filter) {
            this.filter = filter;
            return this;
        }

        /**
         * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
         */
        public Builder cursor(@Nullable String cursor) {
            this.cursor = JsonNullable.of(cursor);
            return this;
        }

        /**
         * Number of results to return. Minimum 1, Maximum 200, Default 20
         */
        public Builder limit(@Nullable Long limit) {
            this.limit = limit;
            return this;
        }

        public VaultLogsAllRequest build() {
            return new VaultLogsAllRequest(
                appId, consumerId, filter,
                cursor, limit);
        }


        private static final LazySingletonValue<Long> _SINGLETON_VALUE_Limit =
                new LazySingletonValue<>(
                        "limit",
                        "20",
                        new TypeReference<Long>() {});
    }
}
