/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import com.apideck.unify.models.components.Session;
import com.apideck.unify.utils.SpeakeasyMetadata;
import com.apideck.unify.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import jakarta.annotation.Nullable;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;


public class VaultSessionsCreateRequest {
    /**
     * ID of the consumer which you want to get or push data from
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-consumer-id")
    private String consumerId;

    /**
     * The ID of your Unify application
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-app-id")
    private String appId;

    /**
     * Additional redirect uri and/or consumer metadata
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    private Session session;

    @JsonCreator
    public VaultSessionsCreateRequest(
            @Nullable String consumerId,
            @Nullable String appId,
            @Nullable Session session) {
        this.consumerId = consumerId;
        this.appId = appId;
        this.session = session;
    }
    
    public VaultSessionsCreateRequest() {
        this(null, null, null);
    }

    /**
     * ID of the consumer which you want to get or push data from
     */
    public Optional<String> consumerId() {
        return Optional.ofNullable(this.consumerId);
    }

    /**
     * The ID of your Unify application
     */
    public Optional<String> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * Additional redirect uri and/or consumer metadata
     */
    public Optional<Session> session() {
        return Optional.ofNullable(this.session);
    }

    public static Builder builder() {
        return new Builder();
    }


    /**
     * ID of the consumer which you want to get or push data from
     */
    public VaultSessionsCreateRequest withConsumerId(@Nullable String consumerId) {
        this.consumerId = consumerId;
        return this;
    }


    /**
     * The ID of your Unify application
     */
    public VaultSessionsCreateRequest withAppId(@Nullable String appId) {
        this.appId = appId;
        return this;
    }


    /**
     * Additional redirect uri and/or consumer metadata
     */
    public VaultSessionsCreateRequest withSession(@Nullable Session session) {
        this.session = session;
        return this;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VaultSessionsCreateRequest other = (VaultSessionsCreateRequest) o;
        return 
            Utils.enhancedDeepEquals(this.consumerId, other.consumerId) &&
            Utils.enhancedDeepEquals(this.appId, other.appId) &&
            Utils.enhancedDeepEquals(this.session, other.session);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            consumerId, appId, session);
    }
    
    @Override
    public String toString() {
        return Utils.toString(VaultSessionsCreateRequest.class,
                "consumerId", consumerId,
                "appId", appId,
                "session", session);
    }

    @SuppressWarnings("UnusedReturnValue")
    public final static class Builder {

        private String consumerId;

        private String appId;

        private Session session;

        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the consumer which you want to get or push data from
         */
        public Builder consumerId(@Nullable String consumerId) {
            this.consumerId = consumerId;
            return this;
        }

        /**
         * The ID of your Unify application
         */
        public Builder appId(@Nullable String appId) {
            this.appId = appId;
            return this;
        }

        /**
         * Additional redirect uri and/or consumer metadata
         */
        public Builder session(@Nullable Session session) {
            this.session = session;
            return this;
        }

        public VaultSessionsCreateRequest build() {
            return new VaultSessionsCreateRequest(
                consumerId, appId, session);
        }

    }
}
