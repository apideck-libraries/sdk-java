/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.apideck.unify.models.operations;

import com.apideck.unify.models.components.UpdateWebhookRequest;
import com.apideck.unify.utils.Options;
import com.apideck.unify.utils.RetryConfig;
import com.apideck.unify.utils.Utils;
import java.lang.String;
import java.util.Optional;

public class WebhookWebhooksUpdateRequestBuilder {

    private String id;
    private Optional<String> appId = Optional.empty();
    private UpdateWebhookRequest updateWebhookRequest;
    private Optional<RetryConfig> retryConfig = Optional.empty();
    private final SDKMethodInterfaces.MethodCallWebhookWebhooksUpdate sdk;

    public WebhookWebhooksUpdateRequestBuilder(SDKMethodInterfaces.MethodCallWebhookWebhooksUpdate sdk) {
        this.sdk = sdk;
    }

    public WebhookWebhooksUpdateRequestBuilder id(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }
                
    public WebhookWebhooksUpdateRequestBuilder appId(String appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = Optional.of(appId);
        return this;
    }

    public WebhookWebhooksUpdateRequestBuilder appId(Optional<String> appId) {
        Utils.checkNotNull(appId, "appId");
        this.appId = appId;
        return this;
    }

    public WebhookWebhooksUpdateRequestBuilder updateWebhookRequest(UpdateWebhookRequest updateWebhookRequest) {
        Utils.checkNotNull(updateWebhookRequest, "updateWebhookRequest");
        this.updateWebhookRequest = updateWebhookRequest;
        return this;
    }
                
    public WebhookWebhooksUpdateRequestBuilder retryConfig(RetryConfig retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = Optional.of(retryConfig);
        return this;
    }

    public WebhookWebhooksUpdateRequestBuilder retryConfig(Optional<RetryConfig> retryConfig) {
        Utils.checkNotNull(retryConfig, "retryConfig");
        this.retryConfig = retryConfig;
        return this;
    }

    public WebhookWebhooksUpdateResponse call() throws Exception {
        Optional<Options> options = Optional.of(Options.builder()
                                                    .retryConfig(retryConfig)
                                                    .build());
        return sdk.update(
            id,
            appId,
            updateWebhookRequest,
            options);
    }
}
