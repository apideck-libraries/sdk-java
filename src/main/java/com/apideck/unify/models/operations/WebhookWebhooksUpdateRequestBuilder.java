/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.apideck.unify.models.operations;

import static com.apideck.unify.operations.Operations.RequestOperation;

import com.apideck.unify.SDKConfiguration;
import com.apideck.unify.models.components.UpdateWebhookRequest;
import com.apideck.unify.operations.WebhookWebhooksUpdateOperation;
import com.apideck.unify.utils.Options;
import com.apideck.unify.utils.RetryConfig;
import com.apideck.unify.utils.Utils;
import jakarta.annotation.Nonnull;
import jakarta.annotation.Nullable;
import java.lang.Exception;
import java.lang.String;

public class WebhookWebhooksUpdateRequestBuilder {
    private final SDKConfiguration sdkConfiguration;
    private final WebhookWebhooksUpdateRequest.Builder pojoBuilder;
    private WebhookWebhooksUpdateRequest request;
    private final Options.Builder optionsBuilder;
    private boolean _setterCalled;

    public WebhookWebhooksUpdateRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.pojoBuilder = WebhookWebhooksUpdateRequest.builder();
        this.optionsBuilder = Options.builder();
    }

    public WebhookWebhooksUpdateRequestBuilder id(@Nonnull String id) {
        this.pojoBuilder.id(id);
        this._setterCalled = true;
        return this;
    }

    public WebhookWebhooksUpdateRequestBuilder appId(@Nullable String appId) {
        this.pojoBuilder.appId(appId);
        this._setterCalled = true;
        return this;
    }

    public WebhookWebhooksUpdateRequestBuilder updateWebhookRequest(@Nonnull UpdateWebhookRequest updateWebhookRequest) {
        this.pojoBuilder.updateWebhookRequest(updateWebhookRequest);
        this._setterCalled = true;
        return this;
    }

    public WebhookWebhooksUpdateRequestBuilder retryConfig(RetryConfig retryConfig) {
        this.optionsBuilder.retryConfig(retryConfig);
        return this;
    }

    private WebhookWebhooksUpdateRequest _buildRequest() {
        if (this._setterCalled) {
            this.request = this.pojoBuilder.build();
        }
        return this.request;
    }
    /**
    * Executes the request and returns the response.
    *
    * @return The response from the server.
    */
    public WebhookWebhooksUpdateResponse call() throws Exception {
        Options options = optionsBuilder.build();
        RequestOperation<WebhookWebhooksUpdateRequest, WebhookWebhooksUpdateResponse> operation
              = new WebhookWebhooksUpdateOperation(
                sdkConfiguration,
                options);

        return operation.handleResponse(operation.doRequest(this._buildRequest()));
    }
}
